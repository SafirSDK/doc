<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00111.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a00861.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a specialization of the <a class="el" href="a00110.xhtml" title="Template class for all containers of automatically generated DOB objects. ">ObjectContainerImpl</a> template for the case where the template argument is <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Dob::Typesystem::Object</a>.  
 <a href="a00111.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00226_source.xhtml">Safir/Dob/Typesystem/ObjectContainer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00862.svg" width="172" height="246"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00863.svg" width="172" height="246"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a19170de5b90d489fc11062585b0aca55"><td class="memItemLeft" align="right" valign="top">typedef boost::shared_ptr&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a19170de5b90d489fc11062585b0aca55">T_Ptr</a></td></tr>
<tr class="memdesc:a19170de5b90d489fc11062585b0aca55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef for the contained smart pointer.  <a href="#a19170de5b90d489fc11062585b0aca55">More...</a><br /></td></tr>
<tr class="separator:a19170de5b90d489fc11062585b0aca55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a997523b99ee184c06c792a2ce4dd5be6"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="a00111.xhtml#a19170de5b90d489fc11062585b0aca55">T_Ptr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a997523b99ee184c06c792a2ce4dd5be6">ContainedType</a></td></tr>
<tr class="separator:a997523b99ee184c06c792a2ce4dd5be6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5d3589e562ccc500fd90f8982a7dd66b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a5d3589e562ccc500fd90f8982a7dd66b">ObjectContainerImpl</a> ()</td></tr>
<tr class="memdesc:a5d3589e562ccc500fd90f8982a7dd66b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a5d3589e562ccc500fd90f8982a7dd66b">More...</a><br /></td></tr>
<tr class="separator:a5d3589e562ccc500fd90f8982a7dd66b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad81005d58a3035d1b569f7942b05cf2d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#ad81005d58a3035d1b569f7942b05cf2d">ObjectContainerImpl</a> (const <a class="el" href="a00110.xhtml">ObjectContainerImpl</a> &amp;other)</td></tr>
<tr class="memdesc:ad81005d58a3035d1b569f7942b05cf2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#ad81005d58a3035d1b569f7942b05cf2d">More...</a><br /></td></tr>
<tr class="separator:ad81005d58a3035d1b569f7942b05cf2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04954179f422105585f1e91c10050754"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00110.xhtml">ObjectContainerImpl</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a04954179f422105585f1e91c10050754">operator=</a> (const <a class="el" href="a00110.xhtml">ObjectContainerImpl</a> &amp;other)</td></tr>
<tr class="memdesc:a04954179f422105585f1e91c10050754"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#a04954179f422105585f1e91c10050754">More...</a><br /></td></tr>
<tr class="separator:a04954179f422105585f1e91c10050754"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75bc814f7dc84ca4d349eccd3851cbe8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a75bc814f7dc84ca4d349eccd3851cbe8">SetPtr</a> (const <a class="el" href="a00322.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> &amp;ptr)</td></tr>
<tr class="memdesc:a75bc814f7dc84ca4d349eccd3851cbe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the smart pointer in the container.  <a href="#a75bc814f7dc84ca4d349eccd3851cbe8">More...</a><br /></td></tr>
<tr class="separator:a75bc814f7dc84ca4d349eccd3851cbe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43629d666e9985379fcfc2ac078e467a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00111.xhtml#a19170de5b90d489fc11062585b0aca55">T_Ptr</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a43629d666e9985379fcfc2ac078e467a">GetPtr</a> () const </td></tr>
<tr class="memdesc:a43629d666e9985379fcfc2ac078e467a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the smart pointer from the container.  <a href="#a43629d666e9985379fcfc2ac078e467a">More...</a><br /></td></tr>
<tr class="separator:a43629d666e9985379fcfc2ac078e467a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b3c102dc8842ec0fb01d74401eb13f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00108.xhtml">Object</a> *const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a2b3c102dc8842ec0fb01d74401eb13f1">operator-&gt;</a> () const </td></tr>
<tr class="memdesc:a2b3c102dc8842ec0fb01d74401eb13f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereference the smart pointer in the container.  <a href="#a2b3c102dc8842ec0fb01d74401eb13f1">More...</a><br /></td></tr>
<tr class="separator:a2b3c102dc8842ec0fb01d74401eb13f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c947048a907e0ad3cea321a65e8458b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a5c947048a907e0ad3cea321a65e8458b">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:a5c947048a907e0ad3cea321a65e8458b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the containers change flag.  <a href="#a5c947048a907e0ad3cea321a65e8458b">More...</a><br /></td></tr>
<tr class="separator:a5c947048a907e0ad3cea321a65e8458b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af59f6e551aa17ab74d6ff5911c342d09"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#af59f6e551aa17ab74d6ff5911c342d09">IsChanged</a> () const </td></tr>
<tr class="memdesc:af59f6e551aa17ab74d6ff5911c342d09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the change flag set on the container? The change flag gets updated every time the contained value changes.  <a href="#af59f6e551aa17ab74d6ff5911c342d09">More...</a><br /></td></tr>
<tr class="separator:af59f6e551aa17ab74d6ff5911c342d09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a396e349f1c0206e77e33e989a6945013"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a396e349f1c0206e77e33e989a6945013">IsNull</a> () const </td></tr>
<tr class="memdesc:a396e349f1c0206e77e33e989a6945013"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the container set to null?  <a href="#a396e349f1c0206e77e33e989a6945013">More...</a><br /></td></tr>
<tr class="separator:a396e349f1c0206e77e33e989a6945013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72bb44130e4e766b0903b6870f5b9839"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a72bb44130e4e766b0903b6870f5b9839">SetNull</a> ()</td></tr>
<tr class="memdesc:a72bb44130e4e766b0903b6870f5b9839"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the container to null.  <a href="#a72bb44130e4e766b0903b6870f5b9839">More...</a><br /></td></tr>
<tr class="separator:a72bb44130e4e766b0903b6870f5b9839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e4713f8c60ed0270f5a02bb231a5434"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#a6e4713f8c60ed0270f5a02bb231a5434">Copy</a> (const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;that)</td></tr>
<tr class="memdesc:a6e4713f8c60ed0270f5a02bb231a5434"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual assignment.  <a href="#a6e4713f8c60ed0270f5a02bb231a5434">More...</a><br /></td></tr>
<tr class="separator:a6e4713f8c60ed0270f5a02bb231a5434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad193042f968e3ae523eb85a5e33dabcf"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#ad193042f968e3ae523eb85a5e33dabcf">GetMember</a> (const int member, const int index)</td></tr>
<tr class="memdesc:ad193042f968e3ae523eb85a5e33dabcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <a href="#ad193042f968e3ae523eb85a5e33dabcf">More...</a><br /></td></tr>
<tr class="separator:ad193042f968e3ae523eb85a5e33dabcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace48302078af1fe7d7c68ee7ebf4e091"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00111.xhtml#ace48302078af1fe7d7c68ee7ebf4e091">GetMember</a> (const int member, const int index) const </td></tr>
<tr class="memdesc:ace48302078af1fe7d7c68ee7ebf4e091"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <a href="#ace48302078af1fe7d7c68ee7ebf4e091">More...</a><br /></td></tr>
<tr class="separator:ace48302078af1fe7d7c68ee7ebf4e091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00109"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00109')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00109.xhtml">Safir::Dob::Typesystem::ObjectContainerBase</a></td></tr>
<tr class="memitem:abc5fe23aedb525d8f000252ea5d0509d inherit pub_methods_a00109"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00109.xhtml#abc5fe23aedb525d8f000252ea5d0509d">ObjectContainerBase</a> ()</td></tr>
<tr class="memdesc:abc5fe23aedb525d8f000252ea5d0509d inherit pub_methods_a00109"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#abc5fe23aedb525d8f000252ea5d0509d">More...</a><br /></td></tr>
<tr class="separator:abc5fe23aedb525d8f000252ea5d0509d inherit pub_methods_a00109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac125fa873f378eb4a7ab262e6436359e inherit pub_methods_a00109"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00109.xhtml#ac125fa873f378eb4a7ab262e6436359e">IsChangedHere</a> () const </td></tr>
<tr class="memdesc:ac125fa873f378eb4a7ab262e6436359e inherit pub_methods_a00109"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the change flag in the container set?  <a href="#ac125fa873f378eb4a7ab262e6436359e">More...</a><br /></td></tr>
<tr class="separator:ac125fa873f378eb4a7ab262e6436359e inherit pub_methods_a00109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0074de7f0f6b89d6f8806d33a9792b4b inherit pub_methods_a00109"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00109.xhtml#a0074de7f0f6b89d6f8806d33a9792b4b">SetChangedHere</a> (const bool changed)</td></tr>
<tr class="memdesc:a0074de7f0f6b89d6f8806d33a9792b4b inherit pub_methods_a00109"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the change flag in the container.  <a href="#a0074de7f0f6b89d6f8806d33a9792b4b">More...</a><br /></td></tr>
<tr class="separator:a0074de7f0f6b89d6f8806d33a9792b4b inherit pub_methods_a00109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00031"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00031')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#aae0d1c859bb1addcd8abbe3353696192">ContainerBase</a> ()</td></tr>
<tr class="memdesc:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#aae0d1c859bb1addcd8abbe3353696192">More...</a><br /></td></tr>
<tr class="separator:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#adcc120535ba864a170f3f2b3cb7f03b5">~ContainerBase</a> ()</td></tr>
<tr class="memdesc:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#adcc120535ba864a170f3f2b3cb7f03b5">More...</a><br /></td></tr>
<tr class="separator:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_a00109"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a00109')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00109.xhtml">Safir::Dob::Typesystem::ObjectContainerBase</a></td></tr>
<tr class="memitem:a47111cc7ff14bea90714f225e3bd2739 inherit pro_methods_a00109"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00109.xhtml">ObjectContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00109.xhtml#a47111cc7ff14bea90714f225e3bd2739">operator=</a> (const <a class="el" href="a00109.xhtml">ObjectContainerBase</a> &amp;other)</td></tr>
<tr class="memdesc:a47111cc7ff14bea90714f225e3bd2739 inherit pro_methods_a00109"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#a47111cc7ff14bea90714f225e3bd2739">More...</a><br /></td></tr>
<tr class="separator:a47111cc7ff14bea90714f225e3bd2739 inherit pro_methods_a00109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_a00031"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a00031')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#a8c85f18095c92aeaa5283c18bac44d83">operator=</a> (const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;other)</td></tr>
<tr class="memdesc:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#a8c85f18095c92aeaa5283c18bac44d83">More...</a><br /></td></tr>
<tr class="separator:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_a00031"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_a00031')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a></td></tr>
<tr class="memdesc:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">The variable containing the change flag.  <a href="#a4257d6efb8b17e914896bf4ee9b1d7b8">More...</a><br /></td></tr>
<tr class="separator:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;&gt;<br />
class Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;</h3>

<p>This is a specialization of the <a class="el" href="a00110.xhtml" title="Template class for all containers of automatically generated DOB objects. ">ObjectContainerImpl</a> template for the case where the template argument is <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Dob::Typesystem::Object</a>. </p>
<p>The reason that this is needed is that for example the SetPtr function will be multiply defined if the <a class="el" href="a00110.xhtml" title="Template class for all containers of automatically generated DOB objects. ">ObjectContainerImpl</a> is instantiated with <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a>. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a997523b99ee184c06c792a2ce4dd5be6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="a00111.xhtml#a19170de5b90d489fc11062585b0aca55">T_Ptr</a> <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::<a class="el" href="a00111.xhtml#a997523b99ee184c06c792a2ce4dd5be6">ContainedType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a19170de5b90d489fc11062585b0aca55"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef boost::shared_ptr&lt;<a class="el" href="a00108.xhtml">Object</a>&gt; <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::<a class="el" href="a00111.xhtml#a19170de5b90d489fc11062585b0aca55">T_Ptr</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef for the contained smart pointer. </p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5d3589e562ccc500fd90f8982a7dd66b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::<a class="el" href="a00110.xhtml">ObjectContainerImpl</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>
<p>Creates a null and not changed container. </p>

</div>
</div>
<a class="anchor" id="ad81005d58a3035d1b569f7942b05cf2d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::<a class="el" href="a00110.xhtml">ObjectContainerImpl</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00110.xhtml">ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<p>Copy an object container. The contained object will be cloned.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>[in] - The object to copy. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_ad81005d58a3035d1b569f7942b05cf2d_cgraph.svg" width="431" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a6e4713f8c60ed0270f5a02bb231a5434"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::Copy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual assignment. </p>
<p>Copy all the members from "that" into "this". Types must be the same for this to work!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">that</td><td>[in] - The object to copy into this. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00157.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>If the types are not of the same kind. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="a00031.xhtml#a73ae69ffda7fa99f78eb73a85df8defa">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, <a class="el" href="a00031.xhtml#a417592013345028fad091a293d1aaf7d">Safir::Dob::Typesystem::ContainerBase::IsNull()</a>, <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>, and <a class="el" href="a00110.xhtml#a6d2f43049928659c8421225462cd476a">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::SetObjectPointer()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_a6e4713f8c60ed0270f5a02bb231a5434_cgraph.svg" width="382" height="132"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ad193042f968e3ae523eb85a5e33dabcf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00031.xhtml">ContainerBase</a>&amp; <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::GetMember </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a reference to a member container from an object. </p>
<p>Use the methods in <a class="el" href="a00324.xhtml" title="Functions for getting member information from types. ">Members</a> to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00084.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00157.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="a00109.xhtml#a506e37a681f1fad522d34e1f5df2c331">Safir::Dob::Typesystem::ObjectContainerBase</a>.</p>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_ad193042f968e3ae523eb85a5e33dabcf_cgraph.svg" width="382" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ace48302078af1fe7d7c68ee7ebf4e091"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00031.xhtml">ContainerBase</a>&amp; <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::GetMember </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a const reference to a member container from an object. </p>
<p>Use the methods in <a class="el" href="a00324.xhtml" title="Functions for getting member information from types. ">Members</a> to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A const reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00084.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00157.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="a00109.xhtml#a4ff2a5000dff3b827df8159ae25f7ada">Safir::Dob::Typesystem::ObjectContainerBase</a>.</p>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_ace48302078af1fe7d7c68ee7ebf4e091_cgraph.svg" width="382" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a43629d666e9985379fcfc2ac078e467a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00111.xhtml#a19170de5b90d489fc11062585b0aca55">T_Ptr</a>&amp; <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::GetPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the smart pointer from the container. </p>
<p>This method will return the contained smart pointer unless the container is null, then an exception will be thrown.</p>
<dl class="section return"><dt>Returns</dt><dd>A smart pointer to the contained object. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00107.xhtml" title="Thrown when an application attempts to get the value of a member that is null. ">NullException</a></td><td>The container is null. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_a43629d666e9985379fcfc2ac078e467a_cgraph.svg" width="382" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="af59f6e551aa17ab74d6ff5911c342d09"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Is the change flag set on the container? The change flag gets updated every time the contained value changes. </p>
<p>Note: If this is a container containing an object this call will recursively check change flags in the contained object.</p>
<dl class="section return"><dt>Returns</dt><dd>True if the containers change flag is set. </dd></dl>

<p>Reimplemented from <a class="el" href="a00031.xhtml#ad152f5d1fee5701bb50cc64b3d0ff353">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>, and <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_af59f6e551aa17ab74d6ff5911c342d09_cgraph.svg" width="382" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a396e349f1c0206e77e33e989a6945013"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::IsNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Is the container set to null? </p>
<dl class="section return"><dt>Returns</dt><dd>True if the container is set to null. </dd></dl>

<p>Implements <a class="el" href="a00031.xhtml#a417592013345028fad091a293d1aaf7d">Safir::Dob::Typesystem::ContainerBase</a>.</p>

</div>
</div>
<a class="anchor" id="a2b3c102dc8842ec0fb01d74401eb13f1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00108.xhtml">Object</a>* const <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::operator-&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dereference the smart pointer in the container. </p>
<p>This method will call the -&gt; operator on the smart pointer in the container to allow users to directly access members in the object.</p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the contained object. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00107.xhtml" title="Thrown when an application attempts to get the value of a member that is null. ">NullException</a></td><td>The container is null. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_a2b3c102dc8842ec0fb01d74401eb13f1_cgraph.svg" width="382" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a04954179f422105585f1e91c10050754"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00110.xhtml">ObjectContainerImpl</a>&amp; <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00110.xhtml">ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>[in] - The object to copy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to this. </dd></dl>

<p>References <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>, and <a class="el" href="a00109.xhtml#a47111cc7ff14bea90714f225e3bd2739">Safir::Dob::Typesystem::ObjectContainerBase::operator=()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_a04954179f422105585f1e91c10050754_cgraph.svg" width="608" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a5c947048a907e0ad3cea321a65e8458b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::SetChanged </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the containers change flag. </p>
<p>It should be fairly unusual for an application to have to use this operation. There is nothing dangerous about it, but are you sure this is the operation you were after?</p>
<p>The change flag is how receivers of objects can work out what the sender really wanted done on the object.</p>
<p>Note: If this is a container containing an object this call will recursively set all the change flags in the contained object. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - The value to set the change flag(s) to. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a00031.xhtml#a5024cbf12afcd9670026e4ec5eb693f6">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00110.xhtml#a0021c75cc458ffdf4ae4cc31881ef032">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;::IsNull()</a>, and <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00111_a5c947048a907e0ad3cea321a65e8458b_cgraph.svg" width="384" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a72bb44130e4e766b0903b6870f5b9839"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::SetNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the container to null. </p>

<p>Implements <a class="el" href="a00031.xhtml#a12b07a1d91572b107f8a51c5a82ffa38">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a75bc814f7dc84ca4d349eccd3851cbe8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00110.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a>&lt; <a class="el" href="a00108.xhtml">Object</a> &gt;::SetPtr </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00322.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the smart pointer in the container. </p>
<p>This method will set the contained pointer to point to another object. Checks are always made to see that it is of the correct type. The change flag of the container will be updated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptr</td><td>[in] A pointer to the new object to point to. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00085.xhtml" title="This exception is thrown if a class cannot be cast to the expected type. ">IncompatibleTypesException</a></td><td>If the ptr is not of the type contained by the container. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="a00109.xhtml#adaf4f8923a5b2ed23b84ddfd5109b487">Safir::Dob::Typesystem::ObjectContainerBase</a>.</p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00315.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00320.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00322.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00111.xhtml">ObjectContainerImpl&lt; Object &gt;</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:36 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
