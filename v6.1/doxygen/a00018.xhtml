<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::Internal::CommonExceptionBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00018.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a00884.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::Internal::CommonExceptionBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Common functionality for the exception hierarchy of the DOB typesystem.  
 <a href="a00018.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00220_source.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::Internal::CommonExceptionBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00885.svg" width="1070" height="846"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::Internal::CommonExceptionBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00886.svg" width="234" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#a7eed9101a9468fd5c46f0b1cc341a2ed">CommonExceptionBase</a> (const std::wstring &amp;message, const std::wstring &amp;fileName, const <a class="el" href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber)</td></tr>
<tr class="memdesc:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with exception information.  <a href="#a7eed9101a9468fd5c46f0b1cc341a2ed">More...</a><br /></td></tr>
<tr class="separator:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d973fce038604fc564c49248a318f77"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#a2d973fce038604fc564c49248a318f77">~CommonExceptionBase</a> ()  throw ()</td></tr>
<tr class="memdesc:a2d973fce038604fc564c49248a318f77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy the exception.  <a href="#a2d973fce038604fc564c49248a318f77">More...</a><br /></td></tr>
<tr class="separator:a2d973fce038604fc564c49248a318f77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3df71c4b8af97afc30f9b57999eaf2a2"><td class="memItemLeft" align="right" valign="top">const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#a3df71c4b8af97afc30f9b57999eaf2a2">GetExceptionInfo</a> () const </td></tr>
<tr class="memdesc:a3df71c4b8af97afc30f9b57999eaf2a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a formatted string containing all the information in the exception.  <a href="#a3df71c4b8af97afc30f9b57999eaf2a2">More...</a><br /></td></tr>
<tr class="separator:a3df71c4b8af97afc30f9b57999eaf2a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62c1b98a1a780e5c3a5f1b5e21ac08bc"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#a62c1b98a1a780e5c3a5f1b5e21ac08bc">what</a> () const   throw ()</td></tr>
<tr class="memdesc:a62c1b98a1a780e5c3a5f1b5e21ac08bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the GetExceptionInfo as a UTF8 encoded string.  <a href="#a62c1b98a1a780e5c3a5f1b5e21ac08bc">More...</a><br /></td></tr>
<tr class="separator:a62c1b98a1a780e5c3a5f1b5e21ac08bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb7238cbebcba6854fa7d618573fa224"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00322.xhtml#add598341f70c143ad35a701a65884214">TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#afb7238cbebcba6854fa7d618573fa224">GetTypeId</a> () const  =0</td></tr>
<tr class="memdesc:afb7238cbebcba6854fa7d618573fa224"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this exception.  <a href="#afb7238cbebcba6854fa7d618573fa224">More...</a><br /></td></tr>
<tr class="separator:afb7238cbebcba6854fa7d618573fa224"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Selectors for exception information.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Probably you want to use the GetExceptionInfo method instead of these methods.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="a00018.xhtml#a3df71c4b8af97afc30f9b57999eaf2a2" title="Get a formatted string containing all the information in the exception. ">GetExceptionInfo</a> </dd></dl>
</div></td></tr>
<tr class="memitem:a8b486a052d06e3e4fa52d2db34f7c689"><td class="memItemLeft" align="right" valign="top">const std::wstring &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#a8b486a052d06e3e4fa52d2db34f7c689">GetMessage</a> () const </td></tr>
<tr class="memdesc:a8b486a052d06e3e4fa52d2db34f7c689"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the message about why the exception occurred.  <a href="#a8b486a052d06e3e4fa52d2db34f7c689">More...</a><br /></td></tr>
<tr class="separator:a8b486a052d06e3e4fa52d2db34f7c689"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab96a497407af83155f8896e3ec59fb9b"><td class="memItemLeft" align="right" valign="top">virtual const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#ab96a497407af83155f8896e3ec59fb9b">GetName</a> () const  =0</td></tr>
<tr class="memdesc:ab96a497407af83155f8896e3ec59fb9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the exception name.  <a href="#ab96a497407af83155f8896e3ec59fb9b">More...</a><br /></td></tr>
<tr class="separator:ab96a497407af83155f8896e3ec59fb9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c0a3e4239873d269b94a4b8f7269b8e"><td class="memItemLeft" align="right" valign="top">const std::wstring &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#a0c0a3e4239873d269b94a4b8f7269b8e">GetFileName</a> () const </td></tr>
<tr class="memdesc:a0c0a3e4239873d269b94a4b8f7269b8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the file where the exception occurred.  <a href="#a0c0a3e4239873d269b94a4b8f7269b8e">More...</a><br /></td></tr>
<tr class="separator:a0c0a3e4239873d269b94a4b8f7269b8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfeeee0b5e6627634a54de151f5ad072"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.xhtml#adfeeee0b5e6627634a54de151f5ad072">GetLineNumber</a> () const </td></tr>
<tr class="memdesc:adfeeee0b5e6627634a54de151f5ad072"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the line number that the exception occurred on.  <a href="#adfeeee0b5e6627634a54de151f5ad072">More...</a><br /></td></tr>
<tr class="separator:adfeeee0b5e6627634a54de151f5ad072"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Common functionality for the exception hierarchy of the DOB typesystem. </p>
<p>This class contains the common parts of the <a class="el" href="a00080.xhtml" title="This is the base class of all Fundamental Exceptions. ">FundamentalException</a> and <a class="el" href="a00077.xhtml" title="This is the base class of all (non-Fundamental) Exceptions. ">Exception</a> base classes.</p>
<p>No exceptions except <a class="el" href="a00080.xhtml" title="This is the base class of all Fundamental Exceptions. ">FundamentalException</a> and <a class="el" href="a00077.xhtml" title="This is the base class of all (non-Fundamental) Exceptions. ">Exception</a> shall ever inherit from this class. See <a class="el" href="a00077.xhtml" title="This is the base class of all (non-Fundamental) Exceptions. ">Exception</a> and <a class="el" href="a00080.xhtml" title="This is the base class of all Fundamental Exceptions. ">FundamentalException</a> for more information on how to define your exceptions. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7eed9101a9468fd5c46f0b1cc341a2ed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::Typesystem::Internal::CommonExceptionBase::CommonExceptionBase </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>message</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>fileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>lineNumber</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor with exception information. </p>
<p>Creates an exception that contains information about why and where the exception occurred.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">message</td><td>[in] - A message describing why the exception occurred. </td></tr>
    <tr><td class="paramname">fileName</td><td>[in] - The name of the file where the exception occurred. Always use <b>WFILE</b> as the argument for this parameter. </td></tr>
    <tr><td class="paramname">lineNumber</td><td>[in] - The line number that the exception occurred on. Always use <b>LINE</b> as the argument for this parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2d973fce038604fc564c49248a318f77"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Safir::Dob::Typesystem::Internal::CommonExceptionBase::~CommonExceptionBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroy the exception. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3df71c4b8af97afc30f9b57999eaf2a2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetExceptionInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a formatted string containing all the information in the exception. </p>
<p>The string will look like this (yes, there's a line break in it): "ExceptionName at some_file_name.cpp: 453
 Description: Some kind of explanation of the exception".</p>
<dl class="section return"><dt>Returns</dt><dd>A formatted exception information string. </dd></dl>

</div>
</div>
<a class="anchor" id="a0c0a3e4239873d269b94a4b8f7269b8e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring&amp; Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetFileName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the name of the file where the exception occurred. </p>
<dl class="section return"><dt>Returns</dt><dd>The file where the exception occurred. </dd></dl>

</div>
</div>
<a class="anchor" id="adfeeee0b5e6627634a54de151f5ad072"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetLineNumber </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the line number that the exception occurred on. </p>
<dl class="section return"><dt>Returns</dt><dd>The line number where the exception occurred. </dd></dl>

</div>
</div>
<a class="anchor" id="a8b486a052d06e3e4fa52d2db34f7c689"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring&amp; Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetMessage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the message about why the exception occurred. </p>
<dl class="section return"><dt>Returns</dt><dd>The exception message. </dd></dl>

</div>
</div>
<a class="anchor" id="ab96a497407af83155f8896e3ec59fb9b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::wstring Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the exception name. </p>
<dl class="section return"><dt>Returns</dt><dd>The name of the exception </dd></dl>

<p>Implemented in <a class="el" href="a00134.xhtml#ac29dba845d3ed08dced8c6b41e298000">Safir::Dob::Typesystem::ReadOnlyException</a>, <a class="el" href="a00107.xhtml#abc4bb9b8aaa52c3a8967608b81942021">Safir::Dob::Typesystem::NullException</a>, <a class="el" href="a00157.xhtml#a2bc6513b7cb3aa2b0084af535f42c20c">Safir::Dob::Typesystem::SoftwareViolationException</a>, <a class="el" href="a00020.xhtml#a47fd62b66e062a9c5e256581dc65bf80">Safir::Dob::Typesystem::ConfigurationErrorException</a>, <a class="el" href="a00085.xhtml#a1aeddd6e28e2eb818680fae309b04af9">Safir::Dob::Typesystem::IncompatibleTypesException</a>, <a class="el" href="a00084.xhtml#a37746253a484312a6d55f8521ae09466">Safir::Dob::Typesystem::IllegalValueException</a>, <a class="el" href="a00092.xhtml#ac8774a29f33e97aa6658312c8384e309">Safir::Databases::Odbc::IntegrityConstraintException</a>, <a class="el" href="a00135.xhtml#a7b6c98c1cbe23d6dde8af2344064c94c">Safir::Databases::Odbc::ReconnectException</a>, <a class="el" href="a00146.xhtml#a99bf61e7b854f6bf892a276bdf39d2a2">Safir::Databases::Odbc::RetryException</a>, <a class="el" href="a00168.xhtml#a64c0d3f01defa72aeefe6b2c17eef125">Safir::Databases::Odbc::TimeoutException</a>, <a class="el" href="a00001.xhtml#a7c89091d6b7a905a5e7ec66f32b57310">Safir::Dob::AccessDeniedException</a>, <a class="el" href="a00082.xhtml#aaeb9a0257bda7790ddc3bddecd772c56">Safir::Dob::GhostExistsException</a>, <a class="el" href="a00105.xhtml#a4767bd3fc2fb3b01cd3f5c2d1a200084">Safir::Dob::NotFoundException</a>, <a class="el" href="a00106.xhtml#a3601ebf38fdf731b71893461b34c88c4">Safir::Dob::NotOpenException</a>, and <a class="el" href="a00114.xhtml#a89d947abe16dacc3a2e7a7c1a3491daf">Safir::Dob::OverflowException</a>.</p>

</div>
</div>
<a class="anchor" id="afb7238cbebcba6854fa7d618573fa224"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00322.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type id of this exception. </p>
<p>Gets the type id of the exception. Method is virtual to ensure that the right value gets returned for pointers or references.</p>
<p>Note: This method is overridden by all auto-generated classes.</p>
<dl class="section return"><dt>Returns</dt><dd>The TypeId of the exception. </dd></dl>

<p>Implemented in <a class="el" href="a00134.xhtml#a14f987ca3c2d06fc150704ad90e43cbd">Safir::Dob::Typesystem::ReadOnlyException</a>, <a class="el" href="a00107.xhtml#a3b5b4b14783b5932431e076266ba8420">Safir::Dob::Typesystem::NullException</a>, <a class="el" href="a00157.xhtml#a8d619a5818b92818ca09ad4785da19b5">Safir::Dob::Typesystem::SoftwareViolationException</a>, <a class="el" href="a00020.xhtml#a2b817c8b73790df9fd9c6a0ad6515403">Safir::Dob::Typesystem::ConfigurationErrorException</a>, <a class="el" href="a00085.xhtml#adeaa7b1168d3a47e9c399c0a8c186eb7">Safir::Dob::Typesystem::IncompatibleTypesException</a>, <a class="el" href="a00084.xhtml#a1911da9fd4c08c3b3951a3d6a8b6758c">Safir::Dob::Typesystem::IllegalValueException</a>, <a class="el" href="a00077.xhtml#a6f08db4b86b8bb49a4e2924de9534f69">Safir::Dob::Typesystem::Exception</a>, <a class="el" href="a00080.xhtml#ad0d89087eb551de87385a58d24d65201">Safir::Dob::Typesystem::FundamentalException</a>, <a class="el" href="a00092.xhtml#a2f39aad3cf7d97dccd6fc80b6293539c">Safir::Databases::Odbc::IntegrityConstraintException</a>, <a class="el" href="a00135.xhtml#afd8e821526ec7bfbd78c9911e368f1d1">Safir::Databases::Odbc::ReconnectException</a>, <a class="el" href="a00146.xhtml#a7ac08a9f8152d39ef9209066e83a7a43">Safir::Databases::Odbc::RetryException</a>, <a class="el" href="a00168.xhtml#a40a0bd22d215260db4aa34e51fd16f7b">Safir::Databases::Odbc::TimeoutException</a>, <a class="el" href="a00001.xhtml#a3e3268ade763f1180f50cd3ffa417149">Safir::Dob::AccessDeniedException</a>, <a class="el" href="a00082.xhtml#a0592825ad6bb6daf1ccedd335b99d0a7">Safir::Dob::GhostExistsException</a>, <a class="el" href="a00105.xhtml#a517bec6b04413023d31471c91df86356">Safir::Dob::NotFoundException</a>, <a class="el" href="a00106.xhtml#ab027e72b6dc3c539d6183b39ce405777">Safir::Dob::NotOpenException</a>, and <a class="el" href="a00114.xhtml#a6df64f0ced38f88cbc4d0a347c421ba5">Safir::Dob::OverflowException</a>.</p>

</div>
</div>
<a class="anchor" id="a62c1b98a1a780e5c3a5f1b5e21ac08bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Safir::Dob::Typesystem::Internal::CommonExceptionBase::what </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the GetExceptionInfo as a UTF8 encoded string. </p>
<p>This method is only provided to be compatible with the std::exception class.</p>
<p>If at all possible, use GetExceptionInfo instead since this method performs a copy and a conversion of the string. Note: This override allow catches of std::exception to still print the complete exception message.</p>
<dl class="section return"><dt>Returns</dt><dd>The exception information as a UTF8 encoded string. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00315.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00320.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00322.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00323.xhtml">Internal</a></li><li class="navelem"><a class="el" href="a00018.xhtml">CommonExceptionBase</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:36 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
