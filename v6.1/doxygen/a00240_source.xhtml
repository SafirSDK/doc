<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: /home/lars/safir-sdk-core/include/Safir/Dob/Typesystem/ToolSupport/TypeUtilities.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00240_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TypeUtilities.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00240.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2004-2015 (http://safirsdkcore.com)</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Joel Ottosson / joot</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more Internals.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __DOTS_INTERNAL_TYPE_UTILITIES_H__</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __DOTS_INTERNAL_TYPE_UTILITIES_H__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/BasicTypeOperations.h&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00315.xhtml">Safir</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>Dob</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>Typesystem</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>ToolSupport</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="a00330.xhtml">   40</a></span>&#160;<span class="keyword">namespace </span>TypeUtilities</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="a00330.xhtml#a54cf0228354ca43329cc545a697ffe94">   47</a></span>&#160;    <span class="keyword">inline</span> DotsC_TypeId <a class="code" href="a00330.xhtml#a54cf0228354ca43329cc545a697ffe94">CalculateTypeId</a>(<span class="keyword">const</span> std::string&amp; name)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> LlufId_Generate64(name.c_str());</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="a00330.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">   58</a></span>&#160;    <span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00330.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">GetTypeName</a>(DotsC_MemberType memberType)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> Safir::Dob::Typesystem::ToolSupport::Internal::BasicTypeOperations::MemberTypeToString(memberType).c_str();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="a00330.xhtml#a7bb3e790d5d86f9af5783b24a76916c2">   71</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00330.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">GetTypeName</a>(<span class="keyword">const</span> RepositoryT* repository, DotsC_TypeId typeId)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">return</span> Safir::Dob::Typesystem::ToolSupport::Internal::BasicTypeOperations::TypeIdToTypeName(repository, typeId);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT, <span class="keyword">class</span> MemberDescriptionT&gt;</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="a00330.xhtml#adf2f0fe04fdcd94bdde2457ad8644251">   84</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00330.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">GetTypeName</a>(<span class="keyword">const</span> RepositoryT* repository, <span class="keyword">const</span> MemberDescriptionT* member)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        DotsC_MemberType mt=member-&gt;GetMemberType();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">if</span> (mt==EnumerationMemberType || mt==ObjectMemberType)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="a00330.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">GetTypeName</a>(repository, member-&gt;GetTypeId());</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00330.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">GetTypeName</a>(mt);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="a00330.xhtml#a1928edaf478a3686e07852ae051136ba">  103</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="a00330.xhtml#a1928edaf478a3686e07852ae051136ba">IsOfType</a>(<span class="keyword">const</span> RepositoryT* repository, DotsC_TypeId tid, DotsC_TypeId ofTid)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">if</span> (tid==ofTid)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="a00330.xhtml#a1928edaf478a3686e07852ae051136ba">Safir::Dob::Typesystem::ToolSupport::Internal::BasicTypeOperations::IsOfType</a>(repository, ObjectMemberType, tid, ObjectMemberType, ofTid);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> EnumDescriptionT&gt;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="a00330.xhtml#a420c982fbb9e46dea1db9114052e708e">  120</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="a00330.xhtml#a420c982fbb9e46dea1db9114052e708e">GetIndexOfEnumValue</a>(<span class="keyword">const</span> EnumDescriptionT* description, <span class="keyword">const</span> std::string&amp; valueName) <span class="comment">//Supports short name and fully qualified name. Ex: &#39;Monday&#39; and &#39;MyEnumType.Monday&#39;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordtype">size_t</span> pos=valueName.rfind(<span class="charliteral">&#39;.&#39;</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">if</span> (pos==std::string::npos)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;description-&gt;GetNumberOfValues(); ++i)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keywordflow">if</span> (valueName==description-&gt;GetValueName(i))</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            std::string strippedValueName=valueName.substr(pos+1);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;description-&gt;GetNumberOfValues(); ++i)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <span class="keywordflow">if</span> (strippedValueName==description-&gt;GetValueName(i))</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> PropertyDescriptionT, <span class="keyword">class</span> MemberDescriptionT&gt;</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="a00330.xhtml#a3dc9415ee907cd8cc17de042fb8f0340">  155</a></span>&#160;    DotsC_MemberIndex <a class="code" href="a00330.xhtml#a3dc9415ee907cd8cc17de042fb8f0340">GetPropertyMemberIndex</a>(<span class="keyword">const</span> PropertyDescriptionT* pd, <span class="keyword">const</span> std::string&amp; memberName)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;pd-&gt;GetNumberOfMembers(); ++i)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keyword">const</span> MemberDescriptionT* md=pd-&gt;GetMember(i);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">if</span> (memberName==md-&gt;GetName())</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>DotsC_MemberIndex<span class="keyword">&gt;</span>(i);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> ClassDescriptionT, <span class="keyword">class</span> ParameterDescriptionT&gt;</div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="a00330.xhtml#a6396e38b89d10bf048ef22a437bd3b2c">  177</a></span>&#160;    <span class="keyword">const</span> ParameterDescriptionT* <a class="code" href="a00330.xhtml#a6396e38b89d10bf048ef22a437bd3b2c">GetParameterByName</a>(<span class="keyword">const</span> ClassDescriptionT* cd, <span class="keyword">const</span> std::string&amp; paramName)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordtype">size_t</span> dot=paramName.rfind(<span class="charliteral">&#39;.&#39;</span>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">if</span> (dot==std::string::npos)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;cd-&gt;GetNumberOfParameters(); ++i)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="keyword">const</span> ParameterDescriptionT* pd=cd-&gt;GetParameter(i);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordflow">if</span> (paramName==pd-&gt;GetName())</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                    <span class="keywordflow">return</span> pd;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            std::string shortName=paramName.substr(dot+1);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;cd-&gt;GetNumberOfParameters(); ++i)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keyword">const</span> ParameterDescriptionT* pd=cd-&gt;GetParameter(i);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">if</span> (shortName==pd-&gt;GetName())</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                    <span class="keywordflow">return</span> pd;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepT, <span class="keyword">class</span> Traits=Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt;RepT&gt; &gt;</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="a00081.xhtml">  210</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="a00081.xhtml">GetParameterByFullName</a></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="a00081.xhtml#ac66f71342e43230b653bef403cae4b69">  212</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::RepositoryType <a class="code" href="a00081.xhtml#ac66f71342e43230b653bef403cae4b69">RepositoryType</a>;</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="a00081.xhtml#a42ae1959938eeb6fe0f88d71eaa8f04f">  213</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::ClassDescriptionType <a class="code" href="a00081.xhtml#a42ae1959938eeb6fe0f88d71eaa8f04f">ClassDescriptionType</a>;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="a00081.xhtml#a2161f2cbfe6dc06c5e546df1b6214d40">  214</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::ParameterDescriptionType <a class="code" href="a00081.xhtml#a2161f2cbfe6dc06c5e546df1b6214d40">ParameterDescriptionType</a>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="a00081.xhtml#a923f25c82bc7852612324829461238f5">  222</a></span>&#160;        <span class="keyword">const</span> ParameterDescriptionType* <a class="code" href="a00081.xhtml#a923f25c82bc7852612324829461238f5">operator()</a>(<span class="keyword">const</span> RepositoryType* rep, <span class="keyword">const</span> std::string&amp; parameterName)<span class="keyword"> const</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordtype">size_t</span> pos=parameterName.rfind(<span class="charliteral">&#39;.&#39;</span>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">if</span> (pos==std::string::npos)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            std::string className=parameterName.substr(0, pos);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keyword">const</span> ClassDescriptionType* cd=rep-&gt;GetClass(<a class="code" href="a00330.xhtml#a54cf0228354ca43329cc545a697ffe94">CalculateTypeId</a>(className));</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">if</span> (!cd)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keywordflow">return</span> GetParameterByName&lt;ClassDescriptionType, ParameterDescriptionType&gt;(cd, parameterName.substr(pos+1));</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    };</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416">  246</a></span>&#160;    <span class="keyword">inline</span> DotsC_Int64 <a class="code" href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416">ToUnifiedDictionaryKey</a>(DotsC_Int64 key) {<span class="keywordflow">return</span> key;}</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="a00330.xhtml#acb5f36fff11d07acbf3c09256d574574">  247</a></span>&#160;    <span class="keyword">inline</span> DotsC_Int64 <a class="code" href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416">ToUnifiedDictionaryKey</a>(DotsC_Int32 key) {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>DotsC_Int64<span class="keyword">&gt;</span>(key);}</div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="a00330.xhtml#a64915cf185c077afbf56deef31998682">  248</a></span>&#160;    <span class="keyword">inline</span> DotsC_Int64 <a class="code" href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416">ToUnifiedDictionaryKey</a>(<span class="keyword">const</span> std::string&amp; key) {<span class="keywordflow">return</span> LlufId_Generate64(key.c_str());}</div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="a00330.xhtml#ab4c300fc8ea11f31329aebd0b04e0616">  249</a></span>&#160;    <span class="keyword">inline</span> DotsC_Int64 <a class="code" href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416">ToUnifiedDictionaryKey</a>(<span class="keyword">const</span> DotsC_EntityId&amp; key)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        std::ostringstream os;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        os&lt;&lt;key.typeId&lt;&lt;key.instanceId;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">return</span> LlufId_Generate64(os.str().c_str());</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> ParameterDescriptionT, <span class="keyword">class</span> KeyT&gt;</div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="a00330.xhtml#af3cc5922f46d08966f8e7d1d93e4553d">  257</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="a00330.xhtml#af3cc5922f46d08966f8e7d1d93e4553d">GetDictionaryIndexFromKey</a>(<span class="keyword">const</span> ParameterDescriptionT* pd, <span class="keyword">const</span> KeyT&amp; key)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        assert(pd-&gt;GetCollectionType()==DictionaryCollectionType);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">return</span> pd-&gt;GetIndexByUnifiedKey(<a class="code" href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416">ToUnifiedDictionaryKey</a>(key));</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;}</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;}</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;} <span class="comment">//end namespace Safir::Dob::Typesystem::ToolSupport::TypeUtilities</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="a00330_xhtml_a516cda465896d2c7ca80f86d86e60416"><div class="ttname"><a href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::ToUnifiedDictionaryKey</a></div><div class="ttdeci">DotsC_Int64 ToUnifiedDictionaryKey(DotsC_Int64 key)</div><div class="ttdoc">ToUnifiedDictionaryKey - Convert all keys to an int64 that is the internal key format. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:246</div></div>
<div class="ttc" id="a00330_xhtml_a1928edaf478a3686e07852ae051136ba"><div class="ttname"><a href="a00330.xhtml#a1928edaf478a3686e07852ae051136ba">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::IsOfType</a></div><div class="ttdeci">bool IsOfType(const RepositoryT *repository, DotsC_TypeId tid, DotsC_TypeId ofTid)</div><div class="ttdoc">Check if a type is the same or a subtype of another type. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:103</div></div>
<div class="ttc" id="a00315_xhtml"><div class="ttname"><a href="a00315.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a00081_xhtml_ac66f71342e43230b653bef403cae4b69"><div class="ttname"><a href="a00081.xhtml#ac66f71342e43230b653bef403cae4b69">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByFullName::RepositoryType</a></div><div class="ttdeci">Traits::RepositoryType RepositoryType</div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:212</div></div>
<div class="ttc" id="a00081_xhtml_a42ae1959938eeb6fe0f88d71eaa8f04f"><div class="ttname"><a href="a00081.xhtml#a42ae1959938eeb6fe0f88d71eaa8f04f">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByFullName::ClassDescriptionType</a></div><div class="ttdeci">Traits::ClassDescriptionType ClassDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:213</div></div>
<div class="ttc" id="a00081_xhtml"><div class="ttname"><a href="a00081.xhtml">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByFullName</a></div><div class="ttdoc">Helper class to get ParameterDescription from a fully qualified name without having the ClassDescript...</div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:210</div></div>
<div class="ttc" id="a00081_xhtml_a923f25c82bc7852612324829461238f5"><div class="ttname"><a href="a00081.xhtml#a923f25c82bc7852612324829461238f5">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByFullName::operator()</a></div><div class="ttdeci">const ParameterDescriptionType * operator()(const RepositoryType *rep, const std::string &amp;parameterName) const </div><div class="ttdoc">Get ParameterDescription from a fully qualified name. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:222</div></div>
<div class="ttc" id="a00330_xhtml_a420c982fbb9e46dea1db9114052e708e"><div class="ttname"><a href="a00330.xhtml#a420c982fbb9e46dea1db9114052e708e">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetIndexOfEnumValue</a></div><div class="ttdeci">int GetIndexOfEnumValue(const EnumDescriptionT *description, const std::string &amp;valueName)</div><div class="ttdoc">Get the index (ordinal) of an enumeration value. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:120</div></div>
<div class="ttc" id="a00081_xhtml_a2161f2cbfe6dc06c5e546df1b6214d40"><div class="ttname"><a href="a00081.xhtml#a2161f2cbfe6dc06c5e546df1b6214d40">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByFullName::ParameterDescriptionType</a></div><div class="ttdeci">Traits::ParameterDescriptionType ParameterDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:214</div></div>
<div class="ttc" id="a00330_xhtml_a3dc9415ee907cd8cc17de042fb8f0340"><div class="ttname"><a href="a00330.xhtml#a3dc9415ee907cd8cc17de042fb8f0340">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetPropertyMemberIndex</a></div><div class="ttdeci">DotsC_MemberIndex GetPropertyMemberIndex(const PropertyDescriptionT *pd, const std::string &amp;memberName)</div><div class="ttdoc">Get index of a property member. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:155</div></div>
<div class="ttc" id="a00330_xhtml_a0a7086bcb56bbf36b4d8f9ebf44c4e9b"><div class="ttname"><a href="a00330.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetTypeName</a></div><div class="ttdeci">const char * GetTypeName(DotsC_MemberType memberType)</div><div class="ttdoc">Finds corresponding type name to a memberType. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:58</div></div>
<div class="ttc" id="a00330_xhtml_af3cc5922f46d08966f8e7d1d93e4553d"><div class="ttname"><a href="a00330.xhtml#af3cc5922f46d08966f8e7d1d93e4553d">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetDictionaryIndexFromKey</a></div><div class="ttdeci">int GetDictionaryIndexFromKey(const ParameterDescriptionT *pd, const KeyT &amp;key)</div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:257</div></div>
<div class="ttc" id="a00330_xhtml_a54cf0228354ca43329cc545a697ffe94"><div class="ttname"><a href="a00330.xhtml#a54cf0228354ca43329cc545a697ffe94">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::CalculateTypeId</a></div><div class="ttdeci">DotsC_TypeId CalculateTypeId(const std::string &amp;name)</div><div class="ttdoc">Calculates a typeId from a string. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:47</div></div>
<div class="ttc" id="a00330_xhtml_a6396e38b89d10bf048ef22a437bd3b2c"><div class="ttname"><a href="a00330.xhtml#a6396e38b89d10bf048ef22a437bd3b2c">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByName</a></div><div class="ttdeci">const ParameterDescriptionT * GetParameterByName(const ClassDescriptionT *cd, const std::string &amp;paramName)</div><div class="ttdoc">Get parameter by name when the classDesription is already retrieved. </div><div class="ttdef"><b>Definition:</b> TypeUtilities.h:177</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_875ab07fb1cd25b3d31af1761d81b996.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_28e0791bf104ac510bdaad4cfcc2d792.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_965bcf24b847a0d04e19ed0e967b330b.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_38f82b5b5f11e1b78c24b84f6d996dec.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="dir_306bae58642a319fe98b3d0ac6ff069e.xhtml">ToolSupport</a></li><li class="navelem"><a class="el" href="a00240.xhtml">TypeUtilities.h</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:34 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
