<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::Utilities Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00331.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::Utilities Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Utility functions for users of the DOB type system.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a590903d89625dc985b91ec3b195ef78b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00331.xhtml#a590903d89625dc985b91ec3b195ef78b">ToUtf8</a> (const std::wstring &amp;wstr)</td></tr>
<tr class="memdesc:a590903d89625dc985b91ec3b195ef78b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a std::wstring to UTF8-encoded std::string.  <a href="#a590903d89625dc985b91ec3b195ef78b">More...</a><br /></td></tr>
<tr class="separator:a590903d89625dc985b91ec3b195ef78b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe5d06e891197a48286cd5f724fd99d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00331.xhtml#abe5d06e891197a48286cd5f724fd99d0">ToWstring</a> (const std::string &amp;str)</td></tr>
<tr class="memdesc:abe5d06e891197a48286cd5f724fd99d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a UTF8-encoded std::string to std::wstring.  <a href="#abe5d06e891197a48286cd5f724fd99d0">More...</a><br /></td></tr>
<tr class="separator:abe5d06e891197a48286cd5f724fd99d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afef1cb76a2bfa9bd5ffbc593071dc339"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00331.xhtml#afef1cb76a2bfa9bd5ffbc593071dc339">MergeChanges</a> (<a class="el" href="a00322.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> into, const <a class="el" href="a00322.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> from)</td></tr>
<tr class="memdesc:afef1cb76a2bfa9bd5ffbc593071dc339"><td class="mdescLeft">&#160;</td><td class="mdescRight">Merge the changed members (recursively) from one object into another.  <a href="#afef1cb76a2bfa9bd5ffbc593071dc339">More...</a><br /></td></tr>
<tr class="separator:afef1cb76a2bfa9bd5ffbc593071dc339"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c4db12e3ed00b821bae2cad53c136bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00331.xhtml#a0c4db12e3ed00b821bae2cad53c136bd">BinaryToBase64</a> (char const *const binarySource, int sourceSize)</td></tr>
<tr class="memdesc:a0c4db12e3ed00b821bae2cad53c136bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts binary data to Base64.  <a href="#a0c4db12e3ed00b821bae2cad53c136bd">More...</a><br /></td></tr>
<tr class="separator:a0c4db12e3ed00b821bae2cad53c136bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad666b0abdf095010689ec3892c47d1cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00331.xhtml#ad666b0abdf095010689ec3892c47d1cc">BinaryToBase64</a> (const <a class="el" href="a00322.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Dob::Typesystem::Binary</a> &amp;bin)</td></tr>
<tr class="memdesc:ad666b0abdf095010689ec3892c47d1cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts binary data to Base64.  <a href="#ad666b0abdf095010689ec3892c47d1cc">More...</a><br /></td></tr>
<tr class="separator:ad666b0abdf095010689ec3892c47d1cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21eba57c6b1b8d22a3d0a2d4dc0d2b58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00331.xhtml#a21eba57c6b1b8d22a3d0a2d4dc0d2b58">Base64ToBinary</a> (const std::string &amp;base64Str, <a class="el" href="a00322.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Dob::Typesystem::Binary</a> &amp;binary)</td></tr>
<tr class="memdesc:a21eba57c6b1b8d22a3d0a2d4dc0d2b58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts data in Base64 format into binary data format.  <a href="#a21eba57c6b1b8d22a3d0a2d4dc0d2b58">More...</a><br /></td></tr>
<tr class="separator:a21eba57c6b1b8d22a3d0a2d4dc0d2b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Utility functions for users of the DOB type system. </p>
</div><h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a21eba57c6b1b8d22a3d0a2d4dc0d2b58"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> void Safir::Dob::Typesystem::Utilities::Base64ToBinary </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>base64Str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; char &gt; &amp;&#160;</td>
          <td class="paramname"><em>binary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts data in Base64 format into binary data format. </p>
<p>Will convert data from Base64 format to binary format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">base64Str</td><td>[in] - Base64 data to convert. </td></tr>
    <tr><td class="paramname">binary</td><td>[out] - binary serialization that will contain the result.</td></tr>
  </table>
  </dd>
</dl>
<p>Converts data in Base64 format into binary data format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">base64Str</td><td>[in] - String containing a valid base64 string. </td></tr>
    <tr><td class="paramname">binary</td><td>[out] - Binary result of conversion. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Safir::Dob::Typesystem::Parser:ParseError</td><td>if anything goes wrong. For example if base64Str is not well-formed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0c4db12e3ed00b821bae2cad53c136bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::string Safir::Dob::Typesystem::Utilities::BinaryToBase64 </td>
          <td>(</td>
          <td class="paramtype">char const *const&#160;</td>
          <td class="paramname"><em>binarySource</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sourceSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts binary data to Base64. </p>
<p>Will convert the binarySource to Base64 format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">binarySource</td><td>[in] - pointer to the binary data to be converted. </td></tr>
    <tr><td class="paramname">sourceSize</td><td>[in] - number of bytes to convert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The a string containing the Base64 representation of the binary source. </dd></dl>

</div>
</div>
<a class="anchor" id="ad666b0abdf095010689ec3892c47d1cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::string Safir::Dob::Typesystem::Utilities::BinaryToBase64 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00322.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Dob::Typesystem::Binary</a> &amp;&#160;</td>
          <td class="paramname"><em>bin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts binary data to Base64. </p>
<p>Will convert the binarySource to Base64 format.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bin</td><td>[in] - binary data to convert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A string containing the Base64 representation of the binary source. </dd></dl>

</div>
</div>
<a class="anchor" id="afef1cb76a2bfa9bd5ffbc593071dc339"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> void Safir::Dob::Typesystem::Utilities::MergeChanges </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00322.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a>&#160;</td>
          <td class="paramname"><em>into</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00322.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a>&#160;</td>
          <td class="paramname"><em>from</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Merge the changed members (recursively) from one object into another. </p>
<p>This function will recurse through the members of the "from" object and take all the members that have a change flag set and copy them into the "into" object.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">into</td><td>[in] - <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a> to merge into. </td></tr>
    <tr><td class="paramname">from</td><td>[in,out] - <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a> whose changes shall be merged into "into". </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a590903d89625dc985b91ec3b195ef78b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::string Safir::Dob::Typesystem::Utilities::ToUtf8 </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>wstr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert a std::wstring to UTF8-encoded std::string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">wstr</td><td>[in] - The wstring to convert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- The string in UTF8 format. </dd></dl>

<p>Referenced by <a class="el" href="a00083.xhtml#a8207b2c933fe8a19eb736a7031a5e37c">Safir::Dob::Typesystem::HandlerId::Utf8String()</a>, <a class="el" href="a00015.xhtml#af04a86767640288ef3f622714a06696d">Safir::Dob::Typesystem::ChannelId::Utf8String()</a>, <a class="el" href="a00090.xhtml#a047b5eb0d945e215946a66b6394e2f06">Safir::Dob::Typesystem::InstanceId::Utf8String()</a>, <a class="el" href="a00162.xhtml#a4ef0562363866747c4c89f5b7103c3a2">Safir::Dob::Typesystem::StringContainer::Utf8String()</a>, <a class="el" href="a00083.xhtml#a23d35c7fcf47f45786da8159849cbf5f">Safir::Dob::Typesystem::HandlerId::Utf8StringLength()</a>, <a class="el" href="a00015.xhtml#a382f260eed8ee926dd3b7f4e704e139f">Safir::Dob::Typesystem::ChannelId::Utf8StringLength()</a>, <a class="el" href="a00090.xhtml#ad9d72280e6817e711450563eb9056f14">Safir::Dob::Typesystem::InstanceId::Utf8StringLength()</a>, and <a class="el" href="a00162.xhtml#a5723eb1b12899e0a0977557d5479fd3f">Safir::Dob::Typesystem::StringContainer::Utf8StringLength()</a>.</p>

<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00331_a590903d89625dc985b91ec3b195ef78b_icgraph.svg" width="418" height="524"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="abe5d06e891197a48286cd5f724fd99d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> const std::wstring Safir::Dob::Typesystem::Utilities::ToWstring </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert a UTF8-encoded std::string to std::wstring. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>[in] - The string to convert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- The wide string. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00315.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00320.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00322.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00331.xhtml">Utilities</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:36 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
