<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: /home/lars/safir-sdk-core/include/Safir/Application/Tracer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00182_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Tracer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00182.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2007-2013 (http://safirsdkcore.com)</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Lars Hagstr√∂m / stlrha</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __SWRE_TRACER_H__</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __SWRE_TRACER_H__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;Safir/Application/Internal/SwReportExportDefs.h&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;Safir/Application/Internal/TraceStreamBuffer.h&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00199.xhtml">Safir/Dob/ConnectionBase.h</a>&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00315.xhtml">Safir</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>Application</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="a00171.xhtml">   39</a></span>&#160;    <span class="keyword">class </span>SWRE_INTERFACE_CPP_API <a class="code" href="a00171.xhtml">TracerBackdoor</a></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> Start(<span class="keyword">const</span> <a class="code" href="a00027.xhtml">Safir::Dob::ConnectionBase</a>&amp; connection);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> Stop();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    };</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a00170.xhtml">   69</a></span>&#160;    <span class="keyword">class </span>SWRE_INTERFACE_CPP_API <a class="code" href="a00170.xhtml">Tracer</a></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">typedef</span> std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; ios_type;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="a00170.xhtml#ae063cd80bb4b2b27d8a1ca8a394c75a4">   74</a></span>&#160;        <span class="keyword">typedef</span> std::basic_ostream&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; <a class="code" href="a00170.xhtml#ae063cd80bb4b2b27d8a1ca8a394c75a4">stream_type</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a00170.xhtml">Tracer</a>(<span class="keyword">const</span> std::wstring &amp; prefix);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        ~<a class="code" href="a00170.xhtml">Tracer</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="a00170.xhtml#a5bc847fb88fdb7a1c86ce52659c3b6e8">   93</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a00170.xhtml#a5bc847fb88fdb7a1c86ce52659c3b6e8">Enable</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> enabled) {<span class="keywordflow">if</span> (m_isEnabled == NULL) {InitializeEnabledHandling();} *m_isEnabled = enabled;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="a00170.xhtml#a0058371e8524ca01608d9686204dd568">  100</a></span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00170.xhtml#a0058371e8524ca01608d9686204dd568">IsEnabled</a>()<span class="keyword"> const </span>{<span class="keywordflow">if</span> (m_isEnabled == NULL) {InitializeEnabledHandling();} <span class="keywordflow">return</span> *m_isEnabled;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="a00170.xhtml#a2987967bc8c24b3b5acab97b206b450a">  106</a></span>&#160;        <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="a00170.xhtml">Tracer</a> &amp; <a class="code" href="a00322.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">operator &lt;&lt; </a>(stream_type &amp; (* _Pfn)(stream_type&amp;))<span class="keyword"> const</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">if</span> (IsEnabled())</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                (*_Pfn)(m_ostream);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="a00170.xhtml#a8159ee3533b2f85d3e80efbd0645e670">  119</a></span>&#160;        <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="a00170.xhtml">Tracer</a> &amp; <a class="code" href="a00322.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">operator &lt;&lt; </a>(std::ios_base &amp; (* _Pfn)(std::ios_base &amp;))<span class="keyword"> const</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">if</span> (IsEnabled())</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                (*_Pfn)(m_ostream);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="a00170.xhtml#aab24c99de807d32d3b90d81dc9307734">  132</a></span>&#160;        <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="a00170.xhtml">Tracer</a> &amp; <a class="code" href="a00170.xhtml#aab24c99de807d32d3b90d81dc9307734">operator&lt;&lt;</a>(ios_type &amp; (*_Pfn)(ios_type&amp;))<span class="keyword"> const</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">if</span> (IsEnabled())</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                (*_Pfn)(m_ostream);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="a00170.xhtml#a0d2e9d57a196ec8730baec05aefb214c">  146</a></span>&#160;        <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code" href="a00170.xhtml">Tracer</a> &amp; <a class="code" href="a00322.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">operator &lt;&lt; </a>(<span class="keyword">const</span> T &amp; data)<span class="keyword"> const</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">if</span> (IsEnabled())</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                m_ostream &lt;&lt; data;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="a00170.xhtml#acf511b13d83d038ccc690b3444c8333e">  167</a></span>&#160;        stream_type &amp; <a class="code" href="a00170.xhtml#acf511b13d83d038ccc690b3444c8333e">stream</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_ostream;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordtype">void</span> InitializeEnabledHandling() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keyword">mutable</span> stream_type m_ostream;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keyword">mutable</span> Internal::TraceStreamBuffer m_buf;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keyword">mutable</span> <span class="keyword">volatile</span> <span class="keywordtype">bool</span> * m_isEnabled;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    };</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="ttc" id="a00315_xhtml"><div class="ttname"><a href="a00315.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a00170_xhtml"><div class="ttname"><a href="a00170.xhtml">Safir::Application::Tracer</a></div><div class="ttdoc">A class for trace logging. </div><div class="ttdef"><b>Definition:</b> Tracer.h:69</div></div>
<div class="ttc" id="a00170_xhtml_ae063cd80bb4b2b27d8a1ca8a394c75a4"><div class="ttname"><a href="a00170.xhtml#ae063cd80bb4b2b27d8a1ca8a394c75a4">Safir::Application::Tracer::stream_type</a></div><div class="ttdeci">std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; stream_type</div><div class="ttdef"><b>Definition:</b> Tracer.h:74</div></div>
<div class="ttc" id="a00170_xhtml_a0058371e8524ca01608d9686204dd568"><div class="ttname"><a href="a00170.xhtml#a0058371e8524ca01608d9686204dd568">Safir::Application::Tracer::IsEnabled</a></div><div class="ttdeci">bool IsEnabled() const </div><div class="ttdoc">Check whether this prefix is enabled or not. </div><div class="ttdef"><b>Definition:</b> Tracer.h:100</div></div>
<div class="ttc" id="a00322_xhtml_a74434cdf7c582d37ccf33d83ec9561e6"><div class="ttname"><a href="a00322.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">Safir::Dob::Typesystem::operator&lt;&lt;</a></div><div class="ttdeci">static std::wostream &amp; operator&lt;&lt;(std::wostream &amp;out, const ChannelId &amp;channelId)</div><div class="ttdef"><b>Definition:</b> ChannelId.h:224</div></div>
<div class="ttc" id="a00171_xhtml"><div class="ttname"><a href="a00171.xhtml">Safir::Application::TracerBackdoor</a></div><div class="ttdoc">This class just contains two static methods, for starting and stopping the tracers backdoor...</div><div class="ttdef"><b>Definition:</b> Tracer.h:39</div></div>
<div class="ttc" id="a00170_xhtml_aab24c99de807d32d3b90d81dc9307734"><div class="ttname"><a href="a00170.xhtml#aab24c99de807d32d3b90d81dc9307734">Safir::Application::Tracer::operator&lt;&lt;</a></div><div class="ttdeci">const Tracer &amp; operator&lt;&lt;(ios_type &amp;(*_Pfn)(ios_type &amp;)) const </div><div class="ttdoc">Output operator for io manipulators. </div><div class="ttdef"><b>Definition:</b> Tracer.h:132</div></div>
<div class="ttc" id="a00027_xhtml"><div class="ttname"><a href="a00027.xhtml">Safir::Dob::ConnectionBase</a></div><div class="ttdoc">Common base class for connections to the DOB. </div><div class="ttdef"><b>Definition:</b> ConnectionBase.h:52</div></div>
<div class="ttc" id="a00170_xhtml_acf511b13d83d038ccc690b3444c8333e"><div class="ttname"><a href="a00170.xhtml#acf511b13d83d038ccc690b3444c8333e">Safir::Application::Tracer::stream</a></div><div class="ttdeci">stream_type &amp; stream() const </div><div class="ttdoc">Get the underlying ostream of the logger. </div><div class="ttdef"><b>Definition:</b> Tracer.h:167</div></div>
<div class="ttc" id="a00199_xhtml"><div class="ttname"><a href="a00199.xhtml">ConnectionBase.h</a></div></div>
<div class="ttc" id="a00170_xhtml_a5bc847fb88fdb7a1c86ce52659c3b6e8"><div class="ttname"><a href="a00170.xhtml#a5bc847fb88fdb7a1c86ce52659c3b6e8">Safir::Application::Tracer::Enable</a></div><div class="ttdeci">void Enable(const bool enabled)</div><div class="ttdoc">Turn logging of this prefix on or off. </div><div class="ttdef"><b>Definition:</b> Tracer.h:93</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_875ab07fb1cd25b3d31af1761d81b996.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_28e0791bf104ac510bdaad4cfcc2d792.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_dc07f85e13f6192afe65971b44b6712d.xhtml">Application</a></li><li class="navelem"><a class="el" href="a00182.xhtml">Tracer.h</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:34 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
