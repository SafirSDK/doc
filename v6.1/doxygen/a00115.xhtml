<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::ToolSupport::ParameterDescription Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00115.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a00899.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::ToolSupport::ParameterDescription Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Description of a parameter.  
 <a href="a00115.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00239_source.xhtml">Safir/Dob/Typesystem/ToolSupport/TypeRepository.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acdaa996df7961dfa86f733e6e3b1208f"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#acdaa996df7961dfa86f733e6e3b1208f">Summary</a> () const  =0</td></tr>
<tr class="memdesc:acdaa996df7961dfa86f733e6e3b1208f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a summary about this parameter.  <a href="#acdaa996df7961dfa86f733e6e3b1208f">More...</a><br /></td></tr>
<tr class="separator:acdaa996df7961dfa86f733e6e3b1208f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62e6b6394bff00e82e2fa5eefb8fd778"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a62e6b6394bff00e82e2fa5eefb8fd778">GetName</a> () const  =0</td></tr>
<tr class="memdesc:a62e6b6394bff00e82e2fa5eefb8fd778"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the parameter.  <a href="#a62e6b6394bff00e82e2fa5eefb8fd778">More...</a><br /></td></tr>
<tr class="separator:a62e6b6394bff00e82e2fa5eefb8fd778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8ef6d710038be9f5b119b85cdc90edd"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#ad8ef6d710038be9f5b119b85cdc90edd">GetQualifiedName</a> () const  =0</td></tr>
<tr class="memdesc:ad8ef6d710038be9f5b119b85cdc90edd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get fully qualified parameter name.  <a href="#ad8ef6d710038be9f5b119b85cdc90edd">More...</a><br /></td></tr>
<tr class="separator:ad8ef6d710038be9f5b119b85cdc90edd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92450310cd32d8b6feac9075cd14b261"><td class="memItemLeft" align="right" valign="top">virtual DotsC_MemberType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a92450310cd32d8b6feac9075cd14b261">GetMemberType</a> () const  =0</td></tr>
<tr class="memdesc:a92450310cd32d8b6feac9075cd14b261"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get member type of this parameter value.  <a href="#a92450310cd32d8b6feac9075cd14b261">More...</a><br /></td></tr>
<tr class="separator:a92450310cd32d8b6feac9075cd14b261"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ef6c56bc03aaa0a8c54b5f1342a502c"><td class="memItemLeft" align="right" valign="top">virtual DotsC_TypeId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a9ef6c56bc03aaa0a8c54b5f1342a502c">GetTypeId</a> () const  =0</td></tr>
<tr class="memdesc:a9ef6c56bc03aaa0a8c54b5f1342a502c"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this parameter has MemberType Enumeration or <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a>, the specific typeId of that type can be retrieved by this method.  <a href="#a9ef6c56bc03aaa0a8c54b5f1342a502c">More...</a><br /></td></tr>
<tr class="separator:a9ef6c56bc03aaa0a8c54b5f1342a502c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54d0a9b00ecf3d5e0d50f933facf76d8"><td class="memItemLeft" align="right" valign="top">virtual DotsC_CollectionType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a54d0a9b00ecf3d5e0d50f933facf76d8">GetCollectionType</a> () const  =0</td></tr>
<tr class="memdesc:a54d0a9b00ecf3d5e0d50f933facf76d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the collection type of this parameter.  <a href="#a54d0a9b00ecf3d5e0d50f933facf76d8">More...</a><br /></td></tr>
<tr class="separator:a54d0a9b00ecf3d5e0d50f933facf76d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55627848eef05f70fb3801d4decc4dee"><td class="memItemLeft" align="right" valign="top">virtual DotsC_MemberType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a55627848eef05f70fb3801d4decc4dee">GetKeyType</a> () const  =0</td></tr>
<tr class="memdesc:a55627848eef05f70fb3801d4decc4dee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get key type of this parameter.  <a href="#a55627848eef05f70fb3801d4decc4dee">More...</a><br /></td></tr>
<tr class="separator:a55627848eef05f70fb3801d4decc4dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb9066df129737937112c5eb34ede430"><td class="memItemLeft" align="right" valign="top">virtual DotsC_TypeId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#adb9066df129737937112c5eb34ede430">GetKeyTypeId</a> () const  =0</td></tr>
<tr class="memdesc:adb9066df129737937112c5eb34ede430"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this parameter has CollectionType Dictionary and KeyType Enumeration, the specific typeId of that enumeration can be retrieved by this method.  <a href="#adb9066df129737937112c5eb34ede430">More...</a><br /></td></tr>
<tr class="separator:adb9066df129737937112c5eb34ede430"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eed8a482d07b1e95fe3984ef8d6505c"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a3eed8a482d07b1e95fe3984ef8d6505c">GetNumberOfValues</a> () const  =0</td></tr>
<tr class="memdesc:a3eed8a482d07b1e95fe3984ef8d6505c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of values this parameter holds.  <a href="#a3eed8a482d07b1e95fe3984ef8d6505c">More...</a><br /></td></tr>
<tr class="separator:a3eed8a482d07b1e95fe3984ef8d6505c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a615213a4af2f3a68da680f68a8233e8a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a615213a4af2f3a68da680f68a8233e8a">IsHidden</a> () const  =0</td></tr>
<tr class="memdesc:a615213a4af2f3a68da680f68a8233e8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if this is a normal parameter defined explicitly in a dou-file or if it is a special hidden parameter that has been automatically generated.  <a href="#a615213a4af2f3a68da680f68a8233e8a">More...</a><br /></td></tr>
<tr class="separator:a615213a4af2f3a68da680f68a8233e8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6973d3a3262a7ccdd86575717d674c06"><td class="memItemLeft" align="right" valign="top">virtual DotsC_Int32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a6973d3a3262a7ccdd86575717d674c06">GetInt32Value</a> (int index) const  =0</td></tr>
<tr class="memdesc:a6973d3a3262a7ccdd86575717d674c06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get int32 parameter value.  <a href="#a6973d3a3262a7ccdd86575717d674c06">More...</a><br /></td></tr>
<tr class="separator:a6973d3a3262a7ccdd86575717d674c06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62d3ff3399e3e9fc7193652ed565ee93"><td class="memItemLeft" align="right" valign="top">virtual DotsC_Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a62d3ff3399e3e9fc7193652ed565ee93">GetInt64Value</a> (int index) const  =0</td></tr>
<tr class="memdesc:a62d3ff3399e3e9fc7193652ed565ee93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get int64 parameter value.  <a href="#a62d3ff3399e3e9fc7193652ed565ee93">More...</a><br /></td></tr>
<tr class="separator:a62d3ff3399e3e9fc7193652ed565ee93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a446fa188a6f4226bf81db1601fa1363e"><td class="memItemLeft" align="right" valign="top">virtual DotsC_Float32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a446fa188a6f4226bf81db1601fa1363e">GetFloat32Value</a> (int index) const  =0</td></tr>
<tr class="memdesc:a446fa188a6f4226bf81db1601fa1363e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get float32 parameter value.  <a href="#a446fa188a6f4226bf81db1601fa1363e">More...</a><br /></td></tr>
<tr class="separator:a446fa188a6f4226bf81db1601fa1363e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a062a980561aa85893deff06364efa38a"><td class="memItemLeft" align="right" valign="top">virtual DotsC_Float64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a062a980561aa85893deff06364efa38a">GetFloat64Value</a> (int index) const  =0</td></tr>
<tr class="memdesc:a062a980561aa85893deff06364efa38a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get float64 parameter value.  <a href="#a062a980561aa85893deff06364efa38a">More...</a><br /></td></tr>
<tr class="separator:a062a980561aa85893deff06364efa38a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a986427ff5b7c628df82d263a7185637d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a986427ff5b7c628df82d263a7185637d">GetBoolValue</a> (int index) const  =0</td></tr>
<tr class="memdesc:a986427ff5b7c628df82d263a7185637d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get bool parameter value.  <a href="#a986427ff5b7c628df82d263a7185637d">More...</a><br /></td></tr>
<tr class="separator:a986427ff5b7c628df82d263a7185637d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3c9b71596e191fa6ba5d77153419fe4"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#ab3c9b71596e191fa6ba5d77153419fe4">GetStringValue</a> (int index) const  =0</td></tr>
<tr class="memdesc:ab3c9b71596e191fa6ba5d77153419fe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get string parameter value.  <a href="#ab3c9b71596e191fa6ba5d77153419fe4">More...</a><br /></td></tr>
<tr class="separator:ab3c9b71596e191fa6ba5d77153419fe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04888b31607d00d2a1cf05f183f305e0"><td class="memItemLeft" align="right" valign="top">virtual std::pair&lt; const char *, DotsC_Int32 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a04888b31607d00d2a1cf05f183f305e0">GetObjectValue</a> (int index) const  =0</td></tr>
<tr class="memdesc:a04888b31607d00d2a1cf05f183f305e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get object parameter value.  <a href="#a04888b31607d00d2a1cf05f183f305e0">More...</a><br /></td></tr>
<tr class="separator:a04888b31607d00d2a1cf05f183f305e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a894381e47afa04260e478f8e56d3192d"><td class="memItemLeft" align="right" valign="top">virtual std::pair&lt; const char *, DotsC_Int32 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a894381e47afa04260e478f8e56d3192d">GetBinaryValue</a> (int index) const  =0</td></tr>
<tr class="memdesc:a894381e47afa04260e478f8e56d3192d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get binary parameter value.  <a href="#a894381e47afa04260e478f8e56d3192d">More...</a><br /></td></tr>
<tr class="separator:a894381e47afa04260e478f8e56d3192d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ad86025af148cb6ac0409fc37600fb"><td class="memItemLeft" align="right" valign="top">virtual std::pair&lt; DotsC_Int64, const char * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a39ad86025af148cb6ac0409fc37600fb">GetHashedValue</a> (int index) const  =0</td></tr>
<tr class="memdesc:a39ad86025af148cb6ac0409fc37600fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get hashed parameter value.  <a href="#a39ad86025af148cb6ac0409fc37600fb">More...</a><br /></td></tr>
<tr class="separator:a39ad86025af148cb6ac0409fc37600fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78d06a7a28ae905a8b333ec2f7d1c7d5"><td class="memItemLeft" align="right" valign="top">virtual DotsC_Int32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a78d06a7a28ae905a8b333ec2f7d1c7d5">GetInt32Key</a> (int index) const  =0</td></tr>
<tr class="memdesc:a78d06a7a28ae905a8b333ec2f7d1c7d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get int32 or enum key.  <a href="#a78d06a7a28ae905a8b333ec2f7d1c7d5">More...</a><br /></td></tr>
<tr class="separator:a78d06a7a28ae905a8b333ec2f7d1c7d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a470801bc1fcff00db5844ee9f32c85f4"><td class="memItemLeft" align="right" valign="top">virtual DotsC_Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a470801bc1fcff00db5844ee9f32c85f4">GetInt64Key</a> (int index) const  =0</td></tr>
<tr class="memdesc:a470801bc1fcff00db5844ee9f32c85f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get int64 or typeId key.  <a href="#a470801bc1fcff00db5844ee9f32c85f4">More...</a><br /></td></tr>
<tr class="separator:a470801bc1fcff00db5844ee9f32c85f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe6be53cafe5b921adfc7d395228ab00"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#abe6be53cafe5b921adfc7d395228ab00">GetStringKey</a> (int index) const  =0</td></tr>
<tr class="memdesc:abe6be53cafe5b921adfc7d395228ab00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get string key.  <a href="#abe6be53cafe5b921adfc7d395228ab00">More...</a><br /></td></tr>
<tr class="separator:abe6be53cafe5b921adfc7d395228ab00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61242c4f294a5cb6acafcfc7f11dc222"><td class="memItemLeft" align="right" valign="top">virtual std::pair&lt; DotsC_Int64, const char * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#a61242c4f294a5cb6acafcfc7f11dc222">GetHashedKey</a> (int index) const  =0</td></tr>
<tr class="memdesc:a61242c4f294a5cb6acafcfc7f11dc222"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get hashed key.  <a href="#a61242c4f294a5cb6acafcfc7f11dc222">More...</a><br /></td></tr>
<tr class="separator:a61242c4f294a5cb6acafcfc7f11dc222"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab84e39b78baa66e5d5c8762f68f074c7"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#ab84e39b78baa66e5d5c8762f68f074c7">GetIndexByUnifiedKey</a> (DotsC_Int64 unifiedKey) const  =0</td></tr>
<tr class="memdesc:ab84e39b78baa66e5d5c8762f68f074c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">GetIndexByUnifiedKey - Get corresponding index to a dictionary key.  <a href="#ab84e39b78baa66e5d5c8762f68f074c7">More...</a><br /></td></tr>
<tr class="separator:ab84e39b78baa66e5d5c8762f68f074c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add413ed7815f37d1bc181cc11137e751"><td class="memItemLeft" align="right" valign="top">virtual const std::map&lt; DotsC_Int64, int &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00115.xhtml#add413ed7815f37d1bc181cc11137e751">UnifiedKeyToIndexMap</a> () const  =0</td></tr>
<tr class="memdesc:add413ed7815f37d1bc181cc11137e751"><td class="mdescLeft">&#160;</td><td class="mdescRight">UnifiedKeyToIndexMap - FOR INTERNAL USAGE ONLY.  <a href="#add413ed7815f37d1bc181cc11137e751">More...</a><br /></td></tr>
<tr class="separator:add413ed7815f37d1bc181cc11137e751"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Description of a parameter. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a894381e47afa04260e478f8e56d3192d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::pair&lt;const char*, DotsC_Int32&gt; Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetBinaryValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get binary parameter value. </p>
<p>Only valid if MemberType is Binary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value as a pair containing a binary and a binary size. </dd></dl>

</div>
</div>
<a class="anchor" id="a986427ff5b7c628df82d263a7185637d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetBoolValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get bool parameter value. </p>
<p>Only valid if MemberType is Boolean. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value. </dd></dl>

</div>
</div>
<a class="anchor" id="a54d0a9b00ecf3d5e0d50f933facf76d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_CollectionType Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetCollectionType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the collection type of this parameter. </p>
<dl class="section return"><dt>Returns</dt><dd>Collection type. </dd></dl>

</div>
</div>
<a class="anchor" id="a446fa188a6f4226bf81db1601fa1363e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_Float32 Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetFloat32Value </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get float32 parameter value. </p>
<p>Only valid if MemberType is Float32 or any <a class="el" href="a00327.xhtml" title="32 bit SI-types. ">Si32</a> type. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value. </dd></dl>

</div>
</div>
<a class="anchor" id="a062a980561aa85893deff06364efa38a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_Float64 Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetFloat64Value </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get float64 parameter value. </p>
<p>Only valid if MemberType is Float64 or any <a class="el" href="a00328.xhtml" title="64 bit SI-types. ">Si64</a> type. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value. </dd></dl>

</div>
</div>
<a class="anchor" id="a61242c4f294a5cb6acafcfc7f11dc222"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::pair&lt;DotsC_Int64, const char*&gt; Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetHashedKey </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get hashed key. </p>
<p>Only valid if memer is DictionaryCollectionType and has keyType <a class="el" href="a00090.xhtml" title="Class containing the identity of an instance. ">InstanceId</a>, <a class="el" href="a00015.xhtml" title="Class containing the identity of a channel. ">ChannelId</a>, <a class="el" href="a00083.xhtml" title="Class containing the identity of a handler. ">HandlerId</a> </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter key as a pair containing a hash and optionally a string that can be NULL. </dd></dl>

</div>
</div>
<a class="anchor" id="a39ad86025af148cb6ac0409fc37600fb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::pair&lt;DotsC_Int64, const char*&gt; Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetHashedValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get hashed parameter value. </p>
<p>Only valid if MemberType is <a class="el" href="a00090.xhtml" title="Class containing the identity of an instance. ">InstanceId</a>, <a class="el" href="a00015.xhtml" title="Class containing the identity of a channel. ">ChannelId</a>, <a class="el" href="a00083.xhtml" title="Class containing the identity of a handler. ">HandlerId</a> </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value as a pair containing a hash value and optionally a string that can be NULL. </dd></dl>

</div>
</div>
<a class="anchor" id="ab84e39b78baa66e5d5c8762f68f074c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetIndexByUnifiedKey </td>
          <td>(</td>
          <td class="paramtype">DotsC_Int64&#160;</td>
          <td class="paramname"><em>unifiedKey</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>GetIndexByUnifiedKey - Get corresponding index to a dictionary key. </p>
<p>Only applicable when collectionType is Dictionary. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">unifiedKey</td><td>[in] - Dictionary key on unified format. See <a class="el" href="a00330.xhtml#a516cda465896d2c7ca80f86d86e60416" title="ToUnifiedDictionaryKey - Convert all keys to an int64 that is the internal key format. ">TypeUtilities::ToUnifiedDictionaryKey</a> for conversion. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Index of the parameter key/val. If key does not exist -1 is returned. </dd></dl>

</div>
</div>
<a class="anchor" id="a78d06a7a28ae905a8b333ec2f7d1c7d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_Int32 Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetInt32Key </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get int32 or enum key. </p>
<p>Only valid if memer is DictionaryCollectionType and has keyType Int32MemberType or EnumerationMemberType. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter key for specified dictionary entry. </dd></dl>

</div>
</div>
<a class="anchor" id="a6973d3a3262a7ccdd86575717d674c06"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_Int32 Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetInt32Value </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get int32 parameter value. </p>
<p>Only valid if MemberType is Int32. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value. </dd></dl>

</div>
</div>
<a class="anchor" id="a470801bc1fcff00db5844ee9f32c85f4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_Int64 Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetInt64Key </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get int64 or typeId key. </p>
<p>Only valid if memer is DictionaryCollectionType and has keyType Int64MemberType or TypeIdMemberType. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter key for specified dictionary entry. </dd></dl>

</div>
</div>
<a class="anchor" id="a62d3ff3399e3e9fc7193652ed565ee93"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_Int64 Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetInt64Value </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get int64 parameter value. </p>
<p>Only valid if MemberType is Int64 or TypeId </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value. </dd></dl>

</div>
</div>
<a class="anchor" id="a55627848eef05f70fb3801d4decc4dee"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_MemberType Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetKeyType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get key type of this parameter. </p>
<p>Only valid if CollectionType=DictionaryCollectionType, use <a class="el" href="a00115.xhtml#a54d0a9b00ecf3d5e0d50f933facf76d8" title="Get the collection type of this parameter. ">GetCollectionType()</a> method. </p><dl class="section return"><dt>Returns</dt><dd>Key member type. </dd></dl>

</div>
</div>
<a class="anchor" id="adb9066df129737937112c5eb34ede430"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_TypeId Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetKeyTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If this parameter has CollectionType Dictionary and KeyType Enumeration, the specific typeId of that enumeration can be retrieved by this method. </p>
<p>If KeyType is not Enum the result of this method is undefined. Hence always use this in conjunction with <a class="el" href="a00115.xhtml#a55627848eef05f70fb3801d4decc4dee" title="Get key type of this parameter. ">GetKeyType()</a>. </p><dl class="section return"><dt>Returns</dt><dd>TypeId of the enumeration type that is key type for this dictionary parameter. </dd></dl>

</div>
</div>
<a class="anchor" id="a92450310cd32d8b6feac9075cd14b261"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_MemberType Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetMemberType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get member type of this parameter value. </p>
<p>If member type is Enumeration or <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a>, use <a class="el" href="a00115.xhtml#a9ef6c56bc03aaa0a8c54b5f1342a502c" title="If this parameter has MemberType Enumeration or Object, the specific typeId of that type can be retri...">GetTypeId()</a> to determine specific type. </p><dl class="section return"><dt>Returns</dt><dd>Parameter value member type. </dd></dl>

</div>
</div>
<a class="anchor" id="a62e6b6394bff00e82e2fa5eefb8fd778"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the parameter. </p>
<p>Not including namespaces and class name. </p><dl class="section return"><dt>Returns</dt><dd>Parameter name. </dd></dl>

</div>
</div>
<a class="anchor" id="a3eed8a482d07b1e95fe3984ef8d6505c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetNumberOfValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the number of values this parameter holds. </p>
<p>If collectionType is SingelValueCollectionType 1 is returned. </p><dl class="section return"><dt>Returns</dt><dd>Number of values. </dd></dl>

</div>
</div>
<a class="anchor" id="a04888b31607d00d2a1cf05f183f305e0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::pair&lt;const char*, DotsC_Int32&gt; Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetObjectValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get object parameter value. </p>
<p>Only valid if MemberType is <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a>. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value as a pair containing a blob and a blob size. </dd></dl>

</div>
</div>
<a class="anchor" id="ad8ef6d710038be9f5b119b85cdc90edd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetQualifiedName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get fully qualified parameter name. </p>
<p>Example: MyNamespace.MyClass.MyParameter </p><dl class="section return"><dt>Returns</dt><dd>Qualified parameter name. </dd></dl>

</div>
</div>
<a class="anchor" id="abe6be53cafe5b921adfc7d395228ab00"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetStringKey </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get string key. </p>
<p>Only valid if memer is DictionaryCollectionType and has keyType StringMemberType. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter key for specified dictionary entry. </dd></dl>

</div>
</div>
<a class="anchor" id="ab3c9b71596e191fa6ba5d77153419fe4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetStringValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get string parameter value. </p>
<p>Only valid if MemberType is String. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Parameter index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Parameter value. </dd></dl>

</div>
</div>
<a class="anchor" id="a9ef6c56bc03aaa0a8c54b5f1342a502c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual DotsC_TypeId Safir::Dob::Typesystem::ToolSupport::ParameterDescription::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If this parameter has MemberType Enumeration or <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a>, the specific typeId of that type can be retrieved by this method. </p>
<p>If MemberType is not Enum or <a class="el" href="a00108.xhtml" title="The base class for all DOB objects. ">Object</a> the result of this method is undefined. Hence always use this in conjunction with <a class="el" href="a00115.xhtml#a92450310cd32d8b6feac9075cd14b261" title="Get member type of this parameter value. ">GetMemberType()</a>. </p><dl class="section return"><dt>Returns</dt><dd>TypeId of this parameter. Must always be a class or enumeration typeId. </dd></dl>

</div>
</div>
<a class="anchor" id="a615213a4af2f3a68da680f68a8233e8a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Safir::Dob::Typesystem::ToolSupport::ParameterDescription::IsHidden </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if this is a normal parameter defined explicitly in a dou-file or if it is a special hidden parameter that has been automatically generated. </p>
<dl class="section return"><dt>Returns</dt><dd>False if parameter is a normal parameter. True if parameter is a hidden autmatically generated parameter. </dd></dl>

</div>
</div>
<a class="anchor" id="acdaa996df7961dfa86f733e6e3b1208f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Safir::Dob::Typesystem::ToolSupport::ParameterDescription::Summary </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a summary about this parameter. </p>
<dl class="section return"><dt>Returns</dt><dd>Summary. </dd></dl>

</div>
</div>
<a class="anchor" id="add413ed7815f37d1bc181cc11137e751"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::map&lt;DotsC_Int64, int&gt;&amp; Safir::Dob::Typesystem::ToolSupport::ParameterDescription::UnifiedKeyToIndexMap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>UnifiedKeyToIndexMap - FOR INTERNAL USAGE ONLY. </p>
<p>Only needed by dots_kernel when copying localRepo to sharem memory. A dummy implementation should do if the repository is not going to be copied by dots_kernel. Normal usage should use GetIndexByUnifiedKey. </p><dl class="section return"><dt>Returns</dt><dd>Map from unified key to index. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00315.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00320.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00322.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00329.xhtml">ToolSupport</a></li><li class="navelem"><a class="el" href="a00115.xhtml">ParameterDescription</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:36 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
