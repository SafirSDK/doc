<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00045.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a00825.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Container class for dictionaries of key value pairs.  
 <a href="a00045.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00217_source.xhtml">Safir/Dob/Typesystem/DictionaryContainer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00826.svg" width="172" height="156"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00827.svg" width="172" height="156"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a34226fabf12cd438e682bf529b88459c"><td class="memItemLeft" align="right" valign="top">typedef KeyT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a></td></tr>
<tr class="separator:a34226fabf12cd438e682bf529b88459c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a839ef3ba3ee1c10f0bffe1c5e364b9ee"><td class="memItemLeft" align="right" valign="top">typedef ValT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">ValueContainerType</a></td></tr>
<tr class="separator:a839ef3ba3ee1c10f0bffe1c5e364b9ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f98bfdae8e0642ca9f5f73f09cb5d6a"><td class="memItemLeft" align="right" valign="top">typedef ValueContainerType::ContainedType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a2f98bfdae8e0642ca9f5f73f09cb5d6a">ContainedType</a></td></tr>
<tr class="separator:a2f98bfdae8e0642ca9f5f73f09cb5d6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a6e01a2ebf8573d35edf988e136c39b"><td class="memItemLeft" align="right" valign="top">typedef std::map&lt; <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a>, <a class="el" href="a00045.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">ValueContainerType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a1a6e01a2ebf8573d35edf988e136c39b">StorageType</a></td></tr>
<tr class="separator:a1a6e01a2ebf8573d35edf988e136c39b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3c43141d47c90ba2b527947fb625cb9"><td class="memItemLeft" align="right" valign="top">typedef StorageType::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a></td></tr>
<tr class="separator:ac3c43141d47c90ba2b527947fb625cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dd25ce311736be91af9491ab099dd36"><td class="memItemLeft" align="right" valign="top">typedef StorageType::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a></td></tr>
<tr class="separator:a6dd25ce311736be91af9491ab099dd36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af45825a3e244f8a854a95d8f104957e3"><td class="memItemLeft" align="right" valign="top">typedef StorageType::value_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#af45825a3e244f8a854a95d8f104957e3">value_type</a></td></tr>
<tr class="separator:af45825a3e244f8a854a95d8f104957e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0176c6935866a937d6ae74705ca48937"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a0176c6935866a937d6ae74705ca48937">DictionaryContainer</a> ()</td></tr>
<tr class="memdesc:a0176c6935866a937d6ae74705ca48937"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a0176c6935866a937d6ae74705ca48937">More...</a><br /></td></tr>
<tr class="separator:a0176c6935866a937d6ae74705ca48937"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb20c529d3cbc7f8eb25789c6a2bf179"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#afb20c529d3cbc7f8eb25789c6a2bf179">IsNull</a> () const </td></tr>
<tr class="memdesc:afb20c529d3cbc7f8eb25789c6a2bf179"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the container set to null?  <a href="#afb20c529d3cbc7f8eb25789c6a2bf179">More...</a><br /></td></tr>
<tr class="separator:afb20c529d3cbc7f8eb25789c6a2bf179"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74117176273d7ec895c53e4e1fc95931"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a74117176273d7ec895c53e4e1fc95931">SetNull</a> ()</td></tr>
<tr class="memdesc:a74117176273d7ec895c53e4e1fc95931"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the container to null.  <a href="#a74117176273d7ec895c53e4e1fc95931">More...</a><br /></td></tr>
<tr class="separator:a74117176273d7ec895c53e4e1fc95931"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a843692c26962643bab2edbb7689467b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a843692c26962643bab2edbb7689467b0">begin</a> ()</td></tr>
<tr class="separator:a843692c26962643bab2edbb7689467b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a459833d6c7839a0d198a4c002f16462a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a459833d6c7839a0d198a4c002f16462a">begin</a> () const </td></tr>
<tr class="separator:a459833d6c7839a0d198a4c002f16462a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7cadcf752710ca29fe05913df0bfc99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#ae7cadcf752710ca29fe05913df0bfc99">end</a> ()</td></tr>
<tr class="separator:ae7cadcf752710ca29fe05913df0bfc99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b9ec6ecfebdd6143305fc6cf8431f64"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a5b9ec6ecfebdd6143305fc6cf8431f64">end</a> () const </td></tr>
<tr class="separator:a5b9ec6ecfebdd6143305fc6cf8431f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48790ac76879a33d7865e19fa99399fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a48790ac76879a33d7865e19fa99399fc">find</a> (const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;key)</td></tr>
<tr class="separator:a48790ac76879a33d7865e19fa99399fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96d38a80932ad0a4031645b06acef5f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a96d38a80932ad0a4031645b06acef5f4">find</a> (const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;key) const </td></tr>
<tr class="separator:a96d38a80932ad0a4031645b06acef5f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8257413378f956b91c2fa7ba06d79354"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a8257413378f956b91c2fa7ba06d79354">size</a> () const </td></tr>
<tr class="separator:a8257413378f956b91c2fa7ba06d79354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfb5cd061768acadcf12c685c4600808"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#acfb5cd061768acadcf12c685c4600808">empty</a> () const </td></tr>
<tr class="separator:acfb5cd061768acadcf12c685c4600808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3d56a35f3cf22be970eacf18f477950"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#ae3d56a35f3cf22be970eacf18f477950">count</a> (const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;key) const </td></tr>
<tr class="separator:ae3d56a35f3cf22be970eacf18f477950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7d28ec05faebdb1248bfde3aed6aa27"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00045.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">ValueContainerType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#aa7d28ec05faebdb1248bfde3aed6aa27">operator[]</a> (const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;key)</td></tr>
<tr class="separator:aa7d28ec05faebdb1248bfde3aed6aa27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0f44a9d38e9596b9805523875c7b93c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#aa0f44a9d38e9596b9805523875c7b93c">IsChanged</a> () const </td></tr>
<tr class="memdesc:aa0f44a9d38e9596b9805523875c7b93c"><td class="mdescLeft">&#160;</td><td class="mdescRight">IsChanged - Check if the sequence has changed.  <a href="#aa0f44a9d38e9596b9805523875c7b93c">More...</a><br /></td></tr>
<tr class="separator:aa0f44a9d38e9596b9805523875c7b93c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a573bdcf1b991f969b31b5c24e923f9e7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a573bdcf1b991f969b31b5c24e923f9e7">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:a573bdcf1b991f969b31b5c24e923f9e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">SetChanged - Set the change state of the sequence.  <a href="#a573bdcf1b991f969b31b5c24e923f9e7">More...</a><br /></td></tr>
<tr class="separator:a573bdcf1b991f969b31b5c24e923f9e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa45150995bdee384da704907a621eba6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#aa45150995bdee384da704907a621eba6">clear</a> ()</td></tr>
<tr class="memdesc:aa45150995bdee384da704907a621eba6"><td class="mdescLeft">&#160;</td><td class="mdescRight">clear - Clear the sequence, i.e remove all values.  <a href="#aa45150995bdee384da704907a621eba6">More...</a><br /></td></tr>
<tr class="separator:aa45150995bdee384da704907a621eba6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02a5f3a9900d5cb325fe7a6c1c1d5773"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a02a5f3a9900d5cb325fe7a6c1c1d5773">Insert</a> (const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;key, const <a class="el" href="a00045.xhtml#a2f98bfdae8e0642ca9f5f73f09cb5d6a">ContainedType</a> &amp;val)</td></tr>
<tr class="separator:a02a5f3a9900d5cb325fe7a6c1c1d5773"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a888c248295d49ffaf556fca21fd7536d"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a888c248295d49ffaf556fca21fd7536d">erase</a> (const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;key)</td></tr>
<tr class="separator:a888c248295d49ffaf556fca21fd7536d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d1d5141efea99e85dc9ed11d28a108"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00045.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Copy</a> (const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;that)</td></tr>
<tr class="memdesc:a47d1d5141efea99e85dc9ed11d28a108"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy - Copy all the members from "that" into "this".  <a href="#a47d1d5141efea99e85dc9ed11d28a108">More...</a><br /></td></tr>
<tr class="separator:a47d1d5141efea99e85dc9ed11d28a108"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00031"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00031')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#aae0d1c859bb1addcd8abbe3353696192">ContainerBase</a> ()</td></tr>
<tr class="memdesc:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#aae0d1c859bb1addcd8abbe3353696192">More...</a><br /></td></tr>
<tr class="separator:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#adcc120535ba864a170f3f2b3cb7f03b5">~ContainerBase</a> ()</td></tr>
<tr class="memdesc:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#adcc120535ba864a170f3f2b3cb7f03b5">More...</a><br /></td></tr>
<tr class="separator:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_a00031"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a00031')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#a8c85f18095c92aeaa5283c18bac44d83">operator=</a> (const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;other)</td></tr>
<tr class="memdesc:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#a8c85f18095c92aeaa5283c18bac44d83">More...</a><br /></td></tr>
<tr class="separator:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_a00031"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_a00031')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a></td></tr>
<tr class="memdesc:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">The variable containing the change flag.  <a href="#a4257d6efb8b17e914896bf4ee9b1d7b8">More...</a><br /></td></tr>
<tr class="separator:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class KeyT, class ValT&gt;<br />
class Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;</h3>

<p>Container class for dictionaries of key value pairs. </p>
<p>A dictionary is a collection of values that can dynamically grow or shrink in size. The whole container has a change flag that will automatically be set when values are added, removed or changed. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="ac3c43141d47c90ba2b527947fb625cb9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef StorageType::const_iterator <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2f98bfdae8e0642ca9f5f73f09cb5d6a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef ValueContainerType::ContainedType <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml#a2f98bfdae8e0642ca9f5f73f09cb5d6a">ContainedType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6dd25ce311736be91af9491ab099dd36"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef StorageType::iterator <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a34226fabf12cd438e682bf529b88459c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef KeyT <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1a6e01a2ebf8573d35edf988e136c39b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::map&lt;<a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a>, <a class="el" href="a00045.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">ValueContainerType</a>&gt; <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml#a1a6e01a2ebf8573d35edf988e136c39b">StorageType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af45825a3e244f8a854a95d8f104957e3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef StorageType::value_type <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml#af45825a3e244f8a854a95d8f104957e3">value_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a839ef3ba3ee1c10f0bffe1c5e364b9ee"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef ValT <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">ValueContainerType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a0176c6935866a937d6ae74705ca48937"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::<a class="el" href="a00045.xhtml">DictionaryContainer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<p>Construct a container that is not changed and not null. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a843692c26962643bab2edbb7689467b0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a> <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="a00045.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::Copy()</a>.</p>

<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00045_a843692c26962643bab2edbb7689467b0_icgraph.svg" width="404" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a459833d6c7839a0d198a4c002f16462a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a> <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa45150995bdee384da704907a621eba6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>clear - Clear the sequence, i.e remove all values. </p>
<p>After a call to clear the sequence will be empty but not automatically set to null. </p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

<p>Referenced by <a class="el" href="a00045.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::Copy()</a>.</p>

<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00045_aa45150995bdee384da704907a621eba6_icgraph.svg" width="404" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a47d1d5141efea99e85dc9ed11d28a108"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::Copy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy - Copy all the members from "that" into "this". </p>
<p>Types must be the same for this to work! </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">that</td><td>[in] - The object to copy into this. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00157.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>If the types are not of the same kind. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="a00031.xhtml#a73ae69ffda7fa99f78eb73a85df8defa">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, <a class="el" href="a00045.xhtml#a843692c26962643bab2edbb7689467b0">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::begin()</a>, <a class="el" href="a00045.xhtml#aa45150995bdee384da704907a621eba6">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::clear()</a>, <a class="el" href="a00045.xhtml#ae7cadcf752710ca29fe05913df0bfc99">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::end()</a>, and <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00045_a47d1d5141efea99e85dc9ed11d28a108_cgraph.svg" width="418" height="212"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ae3d56a35f3cf22be970eacf18f477950"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::count </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="a00045.xhtml#a888c248295d49ffaf556fca21fd7536d">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::erase()</a>.</p>

<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00045_ae3d56a35f3cf22be970eacf18f477950_icgraph.svg" width="382" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="acfb5cd061768acadcf12c685c4600808"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae7cadcf752710ca29fe05913df0bfc99"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a> <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="a00045.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::Copy()</a>.</p>

<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00045_ae7cadcf752710ca29fe05913df0bfc99_icgraph.svg" width="418" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a5b9ec6ecfebdd6143305fc6cf8431f64"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a> <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a888c248295d49ffaf556fca21fd7536d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::erase </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="a00045.xhtml#ae3d56a35f3cf22be970eacf18f477950">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::count()</a>, and <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00045_a888c248295d49ffaf556fca21fd7536d_cgraph.svg" width="382" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a48790ac76879a33d7865e19fa99399fc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a> <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::find </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a96d38a80932ad0a4031645b06acef5f4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a> <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::find </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a02a5f3a9900d5cb325fe7a6c1c1d5773"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::Insert </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00045.xhtml#a2f98bfdae8e0642ca9f5f73f09cb5d6a">ContainedType</a> &amp;&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="aa0f44a9d38e9596b9805523875c7b93c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>IsChanged - Check if the sequence has changed. </p>
<dl class="section return"><dt>Returns</dt><dd>True if changed, else false. </dd></dl>

<p>Reimplemented from <a class="el" href="a00031.xhtml#ad152f5d1fee5701bb50cc64b3d0ff353">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="afb20c529d3cbc7f8eb25789c6a2bf179"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::IsNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Is the container set to null? </p>
<dl class="section return"><dt>Returns</dt><dd>True if the container is set to null. </dd></dl>

<p>Implements <a class="el" href="a00031.xhtml#a417592013345028fad091a293d1aaf7d">Safir::Dob::Typesystem::ContainerBase</a>.</p>

</div>
</div>
<a class="anchor" id="aa7d28ec05faebdb1248bfde3aed6aa27"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00045.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">ValueContainerType</a>&amp; <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00045.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a573bdcf1b991f969b31b5c24e923f9e7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::SetChanged </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>SetChanged - Set the change state of the sequence. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - If true, the sequence is set to changed, it is set to not changed. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a00031.xhtml#a5024cbf12afcd9670026e4ec5eb693f6">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a74117176273d7ec895c53e4e1fc95931"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::SetNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the container to null. </p>

<p>Implements <a class="el" href="a00031.xhtml#a12b07a1d91572b107f8a51c5a82ffa38">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>.</p>

</div>
</div>
<a class="anchor" id="a8257413378f956b91c2fa7ba06d79354"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class KeyT, class ValT&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="a00045.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a>&lt; KeyT, ValT &gt;::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00315.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00320.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00322.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00045.xhtml">DictionaryContainer</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:36 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
