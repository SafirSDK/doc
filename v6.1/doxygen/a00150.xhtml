<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::SequenceContainer&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00150.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a00871.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::SequenceContainer&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Container class for sequences of values.  
 <a href="a00150.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00232_source.xhtml">Safir/Dob/Typesystem/SequenceContainer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::SequenceContainer&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00872.svg" width="187" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::SequenceContainer&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00873.svg" width="187" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aff2ef2ba76264c37f8bacb618cbd6928"><td class="memItemLeft" align="right" valign="top">typedef T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a></td></tr>
<tr class="separator:aff2ef2ba76264c37f8bacb618cbd6928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96b58d5494e733987f2de72bb6394d8c"><td class="memItemLeft" align="right" valign="top">typedef boost::container::vector&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a96b58d5494e733987f2de72bb6394d8c">StorageType</a></td></tr>
<tr class="separator:a96b58d5494e733987f2de72bb6394d8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62c1858032dd7617c329662939a96c93"><td class="memItemLeft" align="right" valign="top">typedef StorageType::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a62c1858032dd7617c329662939a96c93">const_iterator</a></td></tr>
<tr class="separator:a62c1858032dd7617c329662939a96c93"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a12b93f6d8d6e30c53550255c88ca3f74"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a12b93f6d8d6e30c53550255c88ca3f74">SequenceContainer</a> ()</td></tr>
<tr class="memdesc:a12b93f6d8d6e30c53550255c88ca3f74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#a12b93f6d8d6e30c53550255c88ca3f74">More...</a><br /></td></tr>
<tr class="separator:a12b93f6d8d6e30c53550255c88ca3f74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8175baa9b8575a364cd18c9657f3e3e2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a8175baa9b8575a364cd18c9657f3e3e2">IsNull</a> () const </td></tr>
<tr class="memdesc:a8175baa9b8575a364cd18c9657f3e3e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the container set to null?  <a href="#a8175baa9b8575a364cd18c9657f3e3e2">More...</a><br /></td></tr>
<tr class="separator:a8175baa9b8575a364cd18c9657f3e3e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39535be5010ac7775fdb68bb0ff613fd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a39535be5010ac7775fdb68bb0ff613fd">SetNull</a> ()</td></tr>
<tr class="memdesc:a39535be5010ac7775fdb68bb0ff613fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the container to null.  <a href="#a39535be5010ac7775fdb68bb0ff613fd">More...</a><br /></td></tr>
<tr class="separator:a39535be5010ac7775fdb68bb0ff613fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4985dc2865e56a3b92a89dd8891fa398"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a4985dc2865e56a3b92a89dd8891fa398">IsChanged</a> () const </td></tr>
<tr class="memdesc:a4985dc2865e56a3b92a89dd8891fa398"><td class="mdescLeft">&#160;</td><td class="mdescRight">IsChanged - Check if the sequence has changed.  <a href="#a4985dc2865e56a3b92a89dd8891fa398">More...</a><br /></td></tr>
<tr class="separator:a4985dc2865e56a3b92a89dd8891fa398"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41eebbf76cbb7312c22c36f6761b542a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a41eebbf76cbb7312c22c36f6761b542a">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:a41eebbf76cbb7312c22c36f6761b542a"><td class="mdescLeft">&#160;</td><td class="mdescRight">SetChanged - Set the change state of the sequence.  <a href="#a41eebbf76cbb7312c22c36f6761b542a">More...</a><br /></td></tr>
<tr class="separator:a41eebbf76cbb7312c22c36f6761b542a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98eb95c9386e7692c49f43469e07f61f"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a98eb95c9386e7692c49f43469e07f61f">size</a> () const </td></tr>
<tr class="memdesc:a98eb95c9386e7692c49f43469e07f61f"><td class="mdescLeft">&#160;</td><td class="mdescRight">size - Get the size of the sequence, i.e number of contained values.  <a href="#a98eb95c9386e7692c49f43469e07f61f">More...</a><br /></td></tr>
<tr class="separator:a98eb95c9386e7692c49f43469e07f61f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16fe65db50a1d6133d9823a8f422ef42"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a16fe65db50a1d6133d9823a8f422ef42">empty</a> () const </td></tr>
<tr class="memdesc:a16fe65db50a1d6133d9823a8f422ef42"><td class="mdescLeft">&#160;</td><td class="mdescRight">empty - Check if sequence is empty.  <a href="#a16fe65db50a1d6133d9823a8f422ef42">More...</a><br /></td></tr>
<tr class="separator:a16fe65db50a1d6133d9823a8f422ef42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4a3c9e413d69731274d7878f237c317"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#ac4a3c9e413d69731274d7878f237c317">front</a> () const </td></tr>
<tr class="memdesc:ac4a3c9e413d69731274d7878f237c317"><td class="mdescLeft">&#160;</td><td class="mdescRight">front - Get a const reference to the first value in the sequence.  <a href="#ac4a3c9e413d69731274d7878f237c317">More...</a><br /></td></tr>
<tr class="separator:ac4a3c9e413d69731274d7878f237c317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed469ee8b81f380e256b10e8245cbda"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a3ed469ee8b81f380e256b10e8245cbda">back</a> () const </td></tr>
<tr class="memdesc:a3ed469ee8b81f380e256b10e8245cbda"><td class="mdescLeft">&#160;</td><td class="mdescRight">back - Get a const reference to the last value in the sequence.  <a href="#a3ed469ee8b81f380e256b10e8245cbda">More...</a><br /></td></tr>
<tr class="separator:a3ed469ee8b81f380e256b10e8245cbda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a075398c027b58a05d2735ae34f9030f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00150.xhtml#a62c1858032dd7617c329662939a96c93">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a075398c027b58a05d2735ae34f9030f2">begin</a> () const </td></tr>
<tr class="memdesc:a075398c027b58a05d2735ae34f9030f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">begin - Get const_iterator pointing to the first element in the sequence.  <a href="#a075398c027b58a05d2735ae34f9030f2">More...</a><br /></td></tr>
<tr class="separator:a075398c027b58a05d2735ae34f9030f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e5f7ea9980faa54522e1e656dcef8b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00150.xhtml#a62c1858032dd7617c329662939a96c93">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a3e5f7ea9980faa54522e1e656dcef8b5">end</a> () const </td></tr>
<tr class="memdesc:a3e5f7ea9980faa54522e1e656dcef8b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">end - Get const_iterator pointing past the last element in the sequence.  <a href="#a3e5f7ea9980faa54522e1e656dcef8b5">More...</a><br /></td></tr>
<tr class="separator:a3e5f7ea9980faa54522e1e656dcef8b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af11011e24d3c8dfa25ae0fe7779e068b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#af11011e24d3c8dfa25ae0fe7779e068b">clear</a> ()</td></tr>
<tr class="memdesc:af11011e24d3c8dfa25ae0fe7779e068b"><td class="mdescLeft">&#160;</td><td class="mdescRight">clear - Clear the sequence, i.e remove all values.  <a href="#af11011e24d3c8dfa25ae0fe7779e068b">More...</a><br /></td></tr>
<tr class="separator:af11011e24d3c8dfa25ae0fe7779e068b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfcbfb1595ceaa24530e3f52d7505f58"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#adfcbfb1595ceaa24530e3f52d7505f58">operator[]</a> (size_t index) const </td></tr>
<tr class="memdesc:adfcbfb1595ceaa24530e3f52d7505f58"><td class="mdescLeft">&#160;</td><td class="mdescRight">operator [] - Get const reference to the value with specified index.  <a href="#adfcbfb1595ceaa24530e3f52d7505f58">More...</a><br /></td></tr>
<tr class="separator:adfcbfb1595ceaa24530e3f52d7505f58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afee79994a29fdbbbb8cead84a6cad909"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#afee79994a29fdbbbb8cead84a6cad909">push_back</a> (const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;val)</td></tr>
<tr class="memdesc:afee79994a29fdbbbb8cead84a6cad909"><td class="mdescLeft">&#160;</td><td class="mdescRight">push_back - Insert a new value last in the sequence.  <a href="#afee79994a29fdbbbb8cead84a6cad909">More...</a><br /></td></tr>
<tr class="separator:afee79994a29fdbbbb8cead84a6cad909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26a2bb8d18497e3ce24db83da527edf6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a26a2bb8d18497e3ce24db83da527edf6">SetVal</a> (size_t index, const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;val)</td></tr>
<tr class="memdesc:a26a2bb8d18497e3ce24db83da527edf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">SetVal - Update a specific value.  <a href="#a26a2bb8d18497e3ce24db83da527edf6">More...</a><br /></td></tr>
<tr class="separator:a26a2bb8d18497e3ce24db83da527edf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e4f663e0b99e54de10c894bf4bdf6ac"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a1e4f663e0b99e54de10c894bf4bdf6ac">GetVal</a> (size_t index) const </td></tr>
<tr class="memdesc:a1e4f663e0b99e54de10c894bf4bdf6ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">GetVal - Get const reference to the value with specified index.  <a href="#a1e4f663e0b99e54de10c894bf4bdf6ac">More...</a><br /></td></tr>
<tr class="separator:a1e4f663e0b99e54de10c894bf4bdf6ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494e4dcf5bf9bd796f739d1facfd47d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a494e4dcf5bf9bd796f739d1facfd47d7">InsertAt</a> (size_t index, const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;value)</td></tr>
<tr class="memdesc:a494e4dcf5bf9bd796f739d1facfd47d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">InsertAt - Insert a new value at specified index.  <a href="#a494e4dcf5bf9bd796f739d1facfd47d7">More...</a><br /></td></tr>
<tr class="separator:a494e4dcf5bf9bd796f739d1facfd47d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64ce466317b325ebcb0a97b62116db63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a64ce466317b325ebcb0a97b62116db63">EraseAt</a> (size_t index)</td></tr>
<tr class="memdesc:a64ce466317b325ebcb0a97b62116db63"><td class="mdescLeft">&#160;</td><td class="mdescRight">EraseAt - Erase a value at specified index.  <a href="#a64ce466317b325ebcb0a97b62116db63">More...</a><br /></td></tr>
<tr class="separator:a64ce466317b325ebcb0a97b62116db63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ecf448cc2ea67ffd22db090c939073a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00150.xhtml#a6ecf448cc2ea67ffd22db090c939073a">Copy</a> (const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;that)</td></tr>
<tr class="memdesc:a6ecf448cc2ea67ffd22db090c939073a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy - Copy all the members from "that" into "this".  <a href="#a6ecf448cc2ea67ffd22db090c939073a">More...</a><br /></td></tr>
<tr class="separator:a6ecf448cc2ea67ffd22db090c939073a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00031"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00031')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#aae0d1c859bb1addcd8abbe3353696192">ContainerBase</a> ()</td></tr>
<tr class="memdesc:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="#aae0d1c859bb1addcd8abbe3353696192">More...</a><br /></td></tr>
<tr class="separator:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#adcc120535ba864a170f3f2b3cb7f03b5">~ContainerBase</a> ()</td></tr>
<tr class="memdesc:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#adcc120535ba864a170f3f2b3cb7f03b5">More...</a><br /></td></tr>
<tr class="separator:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_a00031"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a00031')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#a8c85f18095c92aeaa5283c18bac44d83">operator=</a> (const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;other)</td></tr>
<tr class="memdesc:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#a8c85f18095c92aeaa5283c18bac44d83">More...</a><br /></td></tr>
<tr class="separator:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_a00031"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_a00031')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a00031.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a></td></tr>
<tr class="memdesc:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="mdescLeft">&#160;</td><td class="mdescRight">The variable containing the change flag.  <a href="#a4257d6efb8b17e914896bf4ee9b1d7b8">More...</a><br /></td></tr>
<tr class="separator:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a00031"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class Safir::Dob::Typesystem::SequenceContainer&lt; T &gt;</h3>

<p>Container class for sequences of values. </p>
<p>A sequence is a collection of values that can dynamically grow or shrink in size. The whole container has a change flag that will automatically be set when values are added, removed or changed. Values in a sequence cannot be null and does not have change flags. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a62c1858032dd7617c329662939a96c93"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef StorageType::const_iterator <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::<a class="el" href="a00150.xhtml#a62c1858032dd7617c329662939a96c93">const_iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aff2ef2ba76264c37f8bacb618cbd6928"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef T <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::<a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a96b58d5494e733987f2de72bb6394d8c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef boost::container::vector&lt;T&gt; <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::<a class="el" href="a00150.xhtml#a96b58d5494e733987f2de72bb6394d8c">StorageType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a12b93f6d8d6e30c53550255c88ca3f74"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::<a class="el" href="a00150.xhtml">SequenceContainer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default Constructor. </p>
<p>Construct a container that is not changed and not null. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3ed469ee8b81f380e256b10e8245cbda"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a>&amp; <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::back </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>back - Get a const reference to the last value in the sequence. </p>
<dl class="section return"><dt>Returns</dt><dd>Reference to last value. </dd></dl>

</div>
</div>
<a class="anchor" id="a075398c027b58a05d2735ae34f9030f2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00150.xhtml#a62c1858032dd7617c329662939a96c93">const_iterator</a> <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>begin - Get const_iterator pointing to the first element in the sequence. </p>
<dl class="section return"><dt>Returns</dt><dd>const_iterator. </dd></dl>

</div>
</div>
<a class="anchor" id="af11011e24d3c8dfa25ae0fe7779e068b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>clear - Clear the sequence, i.e remove all values. </p>
<p>After a call to clear the sequence will be empty but not automatically set to null. </p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a6ecf448cc2ea67ffd22db090c939073a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::Copy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00031.xhtml">ContainerBase</a> &amp;&#160;</td>
          <td class="paramname"><em>that</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy - Copy all the members from "that" into "this". </p>
<p>Types must be the same for this to work! </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">that</td><td>[in] - The object to copy into this. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00157.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>If the types are not of the same kind. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="a00031.xhtml#a73ae69ffda7fa99f78eb73a85df8defa">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a16fe65db50a1d6133d9823a8f422ef42"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>empty - Check if sequence is empty. </p>
<dl class="section return"><dt>Returns</dt><dd>True if sequence is empty, else false. </dd></dl>

</div>
</div>
<a class="anchor" id="a3e5f7ea9980faa54522e1e656dcef8b5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00150.xhtml#a62c1858032dd7617c329662939a96c93">const_iterator</a> <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>end - Get const_iterator pointing past the last element in the sequence. </p>
<dl class="section return"><dt>Returns</dt><dd>const_iterator. </dd></dl>

</div>
</div>
<a class="anchor" id="a64ce466317b325ebcb0a97b62116db63"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::EraseAt </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>EraseAt - Erase a value at specified index. </p>
<p>The sequence will shrink. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Index of the value to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="ac4a3c9e413d69731274d7878f237c317"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a>&amp; <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::front </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>front - Get a const reference to the first value in the sequence. </p>
<dl class="section return"><dt>Returns</dt><dd>Reference to first value. </dd></dl>

</div>
</div>
<a class="anchor" id="a1e4f663e0b99e54de10c894bf4bdf6ac"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a>&amp; <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::GetVal </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GetVal - Get const reference to the value with specified index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Index of the value to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Const reference to a value. </dd></dl>

</div>
</div>
<a class="anchor" id="a494e4dcf5bf9bd796f739d1facfd47d7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::InsertAt </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>InsertAt - Insert a new value at specified index. </p>
<p>The sequence size will grow. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Index of the new value. </td></tr>
    <tr><td class="paramname">value</td><td>[in] - Value to insert. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4985dc2865e56a3b92a89dd8891fa398"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>IsChanged - Check if the sequence has changed. </p>
<dl class="section return"><dt>Returns</dt><dd>True if changed, else false. </dd></dl>

<p>Reimplemented from <a class="el" href="a00031.xhtml#ad152f5d1fee5701bb50cc64b3d0ff353">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a8175baa9b8575a364cd18c9657f3e3e2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::IsNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Is the container set to null? </p>
<dl class="section return"><dt>Returns</dt><dd>True if the container is set to null. </dd></dl>

<p>Implements <a class="el" href="a00031.xhtml#a417592013345028fad091a293d1aaf7d">Safir::Dob::Typesystem::ContainerBase</a>.</p>

</div>
</div>
<a class="anchor" id="adfcbfb1595ceaa24530e3f52d7505f58"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a>&amp; <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>operator [] - Get const reference to the value with specified index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Index of the value to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Const reference to a value. </dd></dl>

</div>
</div>
<a class="anchor" id="afee79994a29fdbbbb8cead84a6cad909"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::push_back </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>push_back - Insert a new value last in the sequence. </p>
<p>If the sequence was null before it will no longer be null after a call to push_back. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>[in] - Value to be inserted. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a41eebbf76cbb7312c22c36f6761b542a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::SetChanged </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>SetChanged - Set the change state of the sequence. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - If true, the sequence is set to changed, it is set to not changed. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a00031.xhtml#a5024cbf12afcd9670026e4ec5eb693f6">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a39535be5010ac7775fdb68bb0ff613fd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::SetNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the container to null. </p>

<p>Implements <a class="el" href="a00031.xhtml#a12b07a1d91572b107f8a51c5a82ffa38">Safir::Dob::Typesystem::ContainerBase</a>.</p>

<p>References <a class="el" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>.</p>

</div>
</div>
<a class="anchor" id="a26a2bb8d18497e3ce24db83da527edf6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::SetVal </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00150.xhtml#aff2ef2ba76264c37f8bacb618cbd6928">ContainedType</a> &amp;&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>SetVal - Update a specific value. </p>
<p>Will not add new values. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>[in] - Index of the value to set. </td></tr>
    <tr><td class="paramname">val</td><td>[in] - Value to set. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00031.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

</div>
</div>
<a class="anchor" id="a98eb95c9386e7692c49f43469e07f61f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="a00150.xhtml">Safir::Dob::Typesystem::SequenceContainer</a>&lt; T &gt;::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>size - Get the size of the sequence, i.e number of contained values. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of values in the sequence. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00315.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00320.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00322.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00150.xhtml">SequenceContainer</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:36 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
