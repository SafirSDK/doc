<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: /home/lars/safir-sdk-core/include/Safir/Dob/ConsumerBase.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00201_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ConsumerBase.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00201.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2006-2013 (http://safirsdkcore.com)</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Anders Wid√©n / stawi</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef _SAFIR_DOB_CONSUMER_BASE_H</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define _SAFIR_DOB_CONSUMER_BASE_H</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00202.xhtml">Safir/Dob/DoseCppExportDefs.h</a>&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00187.xhtml">Safir/Dob/Defs.h</a>&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00210.xhtml">Safir/Dob/ResponseSender.h</a>&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00204.xhtml">Safir/Dob/EntityProxy.h</a>&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00206.xhtml">Safir/Dob/InjectedEntityProxy.h</a>&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00205.xhtml">Safir/Dob/EntityRequestProxy.h</a>&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00212.xhtml">Safir/Dob/ServiceRequestProxy.h</a>&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00188.xhtml">Safir/Dob/Typesystem/Defs.h</a>&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00221.xhtml">Safir/Dob/Typesystem/HandlerId.h</a>&gt;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00220.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">//we need to disable the warning about inheriting by dominance, it is intended to be this way,</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">//and there is no way to produce code that does not give this warning, unfortunately.</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">//see also the comment on ConsumerBase</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#pragma warning (disable: 4250)</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00315.xhtml">Safir</a></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace </span>Dob</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">//Forward declarations:</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">class </span>RevokedRegistrationBase;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">class </span>CompletedRegistrationBase;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">class </span>EntityRequestBase;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">class </span>EntityInjectionBase;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">class </span>ServiceRequestBase;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">class </span>StopHandler;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">class </span>Dispatcher;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">class </span>EntityHandler;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">class </span>EntityHandlerInjection;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">class </span>EntityHandlerPending;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">class </span>ServiceHandler;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">class </span>ServiceHandlerPending;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">class </span>Requestor;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">class </span>MessageSender;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">class </span>RegistrationSubscriber;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">class </span>MessageSubscriber;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">class </span>EntitySubscriber;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a00321.xhtml">   69</a></span>&#160;    <span class="keyword">namespace </span>Internal</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment">//forward declaration</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">class </span>Callbacks;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="a00030.xhtml">   84</a></span>&#160;        <span class="keyword">class </span><a class="code" href="a00202.xhtml#a99e604d4480a926555b44a1598e2b647">DOSE_CPP_API</a> <a class="code" href="a00030.xhtml">ConsumerBase</a></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="a00030.xhtml#ac8c0bf7dd7446b5ddf96d0b201826c94">   87</a></span>&#160;            <span class="keyword">virtual</span> <a class="code" href="a00030.xhtml#ac8c0bf7dd7446b5ddf96d0b201826c94">~ConsumerBase</a>() {}</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">private</span>:</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="a00030.xhtml#a597b6684c55d2c10ac7644d4c2ac000f">   90</a></span>&#160;            <span class="keyword">friend</span> <span class="keyword">class </span>Safir::Dob::Internal::Callbacks;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keyword">virtual</span> <a class="code" href="a00147.xhtml">RevokedRegistrationBase</a> * ToRevokedRegistrationBase()</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            {<span class="keywordflow">throw</span> <a class="code" href="a00157.xhtml">Dob::Typesystem::SoftwareViolationException</a></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToRevokedRegistrationBase is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keyword">virtual</span> <a class="code" href="a00019.xhtml">CompletedRegistrationBase</a> * ToCompletedRegistrationBase()</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            {<span class="keywordflow">throw</span> <a class="code" href="a00157.xhtml">Dob::Typesystem::SoftwareViolationException</a></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToCompletedRegistrationBase is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keyword">virtual</span> <a class="code" href="a00060.xhtml">EntityRequestBase</a> * ToEntityRequestBase()</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            {<span class="keywordflow">throw</span> <a class="code" href="a00157.xhtml">Dob::Typesystem::SoftwareViolationException</a></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToEntityRequestBase is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keyword">virtual</span> EntityInjectionBase * ToEntityInjectionBase()</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            {<span class="keywordflow">throw</span> <a class="code" href="a00157.xhtml">Dob::Typesystem::SoftwareViolationException</a></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToEntityInjectionBase is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keyword">virtual</span> ServiceRequestBase * ToServiceRequestBase()</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToServiceRequestBase is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keyword">virtual</span> StopHandler * ToStopHandler()</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToStopHandler is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keyword">virtual</span> Dispatcher * ToDispatcher()</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToDispatcher is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keyword">virtual</span> EntityHandler * ToEntityHandler()</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToEntityHandler is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keyword">virtual</span> EntityHandlerInjection * ToEntityHandlerInjection()</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToEntityHandlerInjection is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keyword">virtual</span> EntityHandlerPending * ToEntityHandlerPending()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToEntityHandlerPending is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keyword">virtual</span> ServiceHandler * ToServiceHandler()</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToServiceHandler is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keyword">virtual</span> ServiceHandlerPending * ToServiceHandlerPending()</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToServiceHandlerPending is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keyword">virtual</span> Requestor * ToRequestor()</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToRequestor is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keyword">virtual</span> MessageSender * ToMessageSender()</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToMessageSender is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keyword">virtual</span> RegistrationSubscriber * ToRegistrationSubscriber()</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToRegistrationSubscriber is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keyword">virtual</span> MessageSubscriber * ToMessageSubscriber()</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToMessageSubscriber is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keyword">virtual</span> EntitySubscriber * ToEntitySubscriber()</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            {<span class="keywordflow">throw</span> Dob::Typesystem::SoftwareViolationException</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    (L<span class="stringliteral">&quot;Call to ConsumerBase::ToEntitySubscriber is illegal. Method must be overridden!&quot;</span>,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                     <a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="comment">//These functions take a void ptr and call the desired version of the above methods</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keyword">static</span> RevokedRegistrationBase * ToRevokedRegistrationBase(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToRevokedRegistrationBase();}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keyword">static</span> CompletedRegistrationBase * ToCompletedRegistrationBase(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToCompletedRegistrationBase();}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keyword">static</span> EntityRequestBase * ToEntityRequestBase(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToEntityRequestBase();}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keyword">static</span> EntityInjectionBase * ToEntityInjectionBase(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToEntityInjectionBase();}</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keyword">static</span> ServiceRequestBase * ToServiceRequestBase(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToServiceRequestBase();}</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keyword">static</span> StopHandler * ToStopHandler(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToStopHandler();}</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keyword">static</span> Dispatcher * ToDispatcher(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToDispatcher();}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keyword">static</span> EntityHandler * ToEntityHandler(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToEntityHandler();}</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keyword">static</span> EntityHandlerInjection * ToEntityHandlerInjection(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToEntityHandlerInjection();}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keyword">static</span> EntityHandlerPending * ToEntityHandlerPending(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToEntityHandlerPending();}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keyword">static</span> ServiceHandler * ToServiceHandler(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToServiceHandler();}</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keyword">static</span> ServiceHandlerPending * ToServiceHandlerPending(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToServiceHandlerPending();}</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keyword">static</span> Requestor * ToRequestor(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToRequestor();}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keyword">static</span> MessageSender * ToMessageSender(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToMessageSender();}</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keyword">static</span> RegistrationSubscriber * ToRegistrationSubscriber(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToRegistrationSubscriber();}</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keyword">static</span> MessageSubscriber * ToMessageSubscriber(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToMessageSubscriber();}</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keyword">static</span> EntitySubscriber * ToEntitySubscriber(<span class="keywordtype">void</span> * consumerBase)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            {<span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ConsumerBase*<span class="keyword">&gt;</span>(consumerBase)-&gt;ToEntitySubscriber();}</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        };</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="a00147.xhtml">  205</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00202.xhtml#a99e604d4480a926555b44a1598e2b647">DOSE_CPP_API</a> <a class="code" href="a00147.xhtml">RevokedRegistrationBase</a>:</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keyword">public</span> <span class="keyword">virtual</span> <a class="code" href="a00030.xhtml">Internal::ConsumerBase</a></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="a00147.xhtml#a344edcd7502e43249066c91cae671a36">  210</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00147.xhtml#a344edcd7502e43249066c91cae671a36">~RevokedRegistrationBase</a>() {}</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnRevokedRegistration(<span class="keyword">const</span> <a class="code" href="a00322.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>     typeId,</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="a00083.xhtml">Safir::Dob::Typesystem::HandlerId</a>&amp; handlerId) = 0;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00147.xhtml">RevokedRegistrationBase</a> * ToRevokedRegistrationBase() {<span class="keywordflow">return</span> <span class="keyword">this</span>;}</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    };</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="a00019.xhtml">  230</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00202.xhtml#a99e604d4480a926555b44a1598e2b647">DOSE_CPP_API</a> <a class="code" href="a00019.xhtml">CompletedRegistrationBase</a> : <span class="keyword">public</span> <span class="keyword">virtual</span> <a class="code" href="a00147.xhtml">RevokedRegistrationBase</a></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnCompletedRegistration(<span class="keyword">const</span> <a class="code" href="a00322.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>     typeId,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="a00083.xhtml">Safir::Dob::Typesystem::HandlerId</a>&amp; handlerId) = 0;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00019.xhtml">CompletedRegistrationBase</a> * ToCompletedRegistrationBase() {<span class="keywordflow">return</span> <span class="keyword">this</span>;}</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    };</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="a00060.xhtml">  251</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00202.xhtml#a99e604d4480a926555b44a1598e2b647">DOSE_CPP_API</a> <a class="code" href="a00060.xhtml">EntityRequestBase</a>:</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keyword">public</span> <span class="keyword">virtual</span> <a class="code" href="a00030.xhtml">Internal::ConsumerBase</a></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="a00060.xhtml#a99f8a8d48e97f3b2cf7ef3ededc75f96">  256</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00060.xhtml#a99f8a8d48e97f3b2cf7ef3ededc75f96">~EntityRequestBase</a>() {}</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnCreateRequest(<span class="keyword">const</span> <a class="code" href="a00061.xhtml">Safir::Dob::EntityRequestProxy</a> entityRequestProxy,</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                                     <a class="code" href="a00320.xhtml#a5973604a3bd2beaa376e4b2c9979e392">Safir::Dob::ResponseSenderPtr</a>        responseSender) = 0;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnUpdateRequest(<span class="keyword">const</span> <a class="code" href="a00061.xhtml">Safir::Dob::EntityRequestProxy</a> entityRequestProxy,</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                     <a class="code" href="a00320.xhtml#a5973604a3bd2beaa376e4b2c9979e392">Safir::Dob::ResponseSenderPtr</a>        responseSender) = 0;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnDeleteRequest(<span class="keyword">const</span> <a class="code" href="a00061.xhtml">Safir::Dob::EntityRequestProxy</a> entityRequestProxy,</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                                     <a class="code" href="a00320.xhtml#a5973604a3bd2beaa376e4b2c9979e392">Safir::Dob::ResponseSenderPtr</a>        responseSender) = 0;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00060.xhtml">EntityRequestBase</a> * ToEntityRequestBase() {<span class="keywordflow">return</span> <span class="keyword">this</span>;}</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    };</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="a00057.xhtml">  344</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00202.xhtml#a99e604d4480a926555b44a1598e2b647">DOSE_CPP_API</a> <a class="code" href="a00057.xhtml">EntityInjectionBase</a> : <span class="keyword">public</span> <span class="keyword">virtual</span> <a class="code" href="a00060.xhtml">EntityRequestBase</a></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="a00057.xhtml#a4ef8e79e21ea2322aa2aff86b1ca3c03">  353</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00057.xhtml#a4ef8e79e21ea2322aa2aff86b1ca3c03">OnInjectedNewEntity</a>(<span class="keyword">const</span> <a class="code" href="a00086.xhtml">Safir::Dob::InjectedEntityProxy</a> injectedEntityProxy) {}</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="a00057.xhtml#a9ecdd9d03745d92e8dd13166bb94a10a">  361</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00057.xhtml#a9ecdd9d03745d92e8dd13166bb94a10a">OnInjectedUpdatedEntity</a>(<span class="keyword">const</span> <a class="code" href="a00086.xhtml">Safir::Dob::InjectedEntityProxy</a> injectedEntityProxy) {}</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="a00057.xhtml#a06c8360f65f225ca20e9265dc486b9be">  369</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00057.xhtml#a06c8360f65f225ca20e9265dc486b9be">OnInjectedDeletedEntity</a>(<span class="keyword">const</span> <a class="code" href="a00086.xhtml">Safir::Dob::InjectedEntityProxy</a> injectedEntityProxy) {}</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="a00057.xhtml#a6f3e0b332aa8e02666f7e7e80d4ada77">  387</a></span>&#160;         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00057.xhtml#a6f3e0b332aa8e02666f7e7e80d4ada77">OnInitialInjectionsDone</a>(<span class="keyword">const</span> <a class="code" href="a00322.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> typeId,</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="a00083.xhtml">Dob::Typesystem::HandlerId</a>&amp; handlerId)</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;         { <span class="comment">//This is an empty implementation, but we have this little bit to avoid MSVC++ warnings</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;             typeId;handlerId;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;         }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00057.xhtml">EntityInjectionBase</a> * ToEntityInjectionBase() {<span class="keywordflow">return</span> <span class="keyword">this</span>;}</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    };</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="a00155.xhtml">  405</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00202.xhtml#a99e604d4480a926555b44a1598e2b647">DOSE_CPP_API</a> <a class="code" href="a00155.xhtml">ServiceRequestBase</a>:</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keyword">public</span> <span class="keyword">virtual</span> <a class="code" href="a00030.xhtml">Internal::ConsumerBase</a></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="a00155.xhtml#af2bcbdc5a4382c5dfc859e90ffc171d6">  410</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00155.xhtml#af2bcbdc5a4382c5dfc859e90ffc171d6">~ServiceRequestBase</a>() {}</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnServiceRequest(<span class="keyword">const</span> <a class="code" href="a00156.xhtml">Safir::Dob::ServiceRequestProxy</a> serviceRequestProxy,</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                      <a class="code" href="a00320.xhtml#a5973604a3bd2beaa376e4b2c9979e392">Safir::Dob::ResponseSenderPtr</a>         responseSender ) = 0;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00155.xhtml">ServiceRequestBase</a> * ToServiceRequestBase() {<span class="keywordflow">return</span> <span class="keyword">this</span>;}</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    };</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;}</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;}</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div>
<div class="ttc" id="a00057_xhtml_a6f3e0b332aa8e02666f7e7e80d4ada77"><div class="ttname"><a href="a00057.xhtml#a6f3e0b332aa8e02666f7e7e80d4ada77">Safir::Dob::EntityInjectionBase::OnInitialInjectionsDone</a></div><div class="ttdeci">virtual void OnInitialInjectionsDone(const Safir::Dob::Typesystem::TypeId typeId, const Dob::Typesystem::HandlerId &amp;handlerId)</div><div class="ttdoc">Indicates that all initial injection data has been transfered to the handler. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:387</div></div>
<div class="ttc" id="a00147_xhtml"><div class="ttname"><a href="a00147.xhtml">Safir::Dob::RevokedRegistrationBase</a></div><div class="ttdoc">Base class used when composing more elaborated interfaces. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:205</div></div>
<div class="ttc" id="a00204_xhtml"><div class="ttname"><a href="a00204.xhtml">EntityProxy.h</a></div></div>
<div class="ttc" id="a00187_xhtml"><div class="ttname"><a href="a00187.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a00157_xhtml"><div class="ttname"><a href="a00157.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:360</div></div>
<div class="ttc" id="a00202_xhtml_a99e604d4480a926555b44a1598e2b647"><div class="ttname"><a href="a00202.xhtml#a99e604d4480a926555b44a1598e2b647">DOSE_CPP_API</a></div><div class="ttdeci">#define DOSE_CPP_API</div><div class="ttdef"><b>Definition:</b> DoseCppExportDefs.h:33</div></div>
<div class="ttc" id="a00322_xhtml_add598341f70c143ad35a701a65884214"><div class="ttname"><a href="a00322.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a></div><div class="ttdeci">DotsC_TypeId TypeId</div><div class="ttdoc">A unique type identifier. </div><div class="ttdef"><b>Definition:</b> Defs.h:218</div></div>
<div class="ttc" id="a00030_xhtml"><div class="ttname"><a href="a00030.xhtml">Safir::Dob::Internal::ConsumerBase</a></div><div class="ttdoc">Base class used when composing more elaborated interfaces. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:84</div></div>
<div class="ttc" id="a00060_xhtml"><div class="ttname"><a href="a00060.xhtml">Safir::Dob::EntityRequestBase</a></div><div class="ttdoc">Interface to receive entity requests. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:251</div></div>
<div class="ttc" id="a00220_xhtml_aa50218d805518247edfff3d9328be684"><div class="ttname"><a href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a></div><div class="ttdeci">#define __WFILE__</div><div class="ttdef"><b>Definition:</b> Exceptions.h:31</div></div>
<div class="ttc" id="a00315_xhtml"><div class="ttname"><a href="a00315.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a00083_xhtml"><div class="ttname"><a href="a00083.xhtml">Safir::Dob::Typesystem::HandlerId</a></div><div class="ttdoc">Class containing the identity of a handler. </div><div class="ttdef"><b>Definition:</b> HandlerId.h:45</div></div>
<div class="ttc" id="a00202_xhtml"><div class="ttname"><a href="a00202.xhtml">DoseCppExportDefs.h</a></div></div>
<div class="ttc" id="a00147_xhtml_a344edcd7502e43249066c91cae671a36"><div class="ttname"><a href="a00147.xhtml#a344edcd7502e43249066c91cae671a36">Safir::Dob::RevokedRegistrationBase::~RevokedRegistrationBase</a></div><div class="ttdeci">virtual ~RevokedRegistrationBase()</div><div class="ttdoc">Virtual destructor is needed since we have virtual member functions. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:210</div></div>
<div class="ttc" id="a00212_xhtml"><div class="ttname"><a href="a00212.xhtml">ServiceRequestProxy.h</a></div></div>
<div class="ttc" id="a00155_xhtml"><div class="ttname"><a href="a00155.xhtml">Safir::Dob::ServiceRequestBase</a></div><div class="ttdoc">Interface to receive service requests. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:405</div></div>
<div class="ttc" id="a00205_xhtml"><div class="ttname"><a href="a00205.xhtml">EntityRequestProxy.h</a></div></div>
<div class="ttc" id="a00030_xhtml_ac8c0bf7dd7446b5ddf96d0b201826c94"><div class="ttname"><a href="a00030.xhtml#ac8c0bf7dd7446b5ddf96d0b201826c94">Safir::Dob::Internal::ConsumerBase::~ConsumerBase</a></div><div class="ttdeci">virtual ~ConsumerBase()</div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:87</div></div>
<div class="ttc" id="a00057_xhtml_a9ecdd9d03745d92e8dd13166bb94a10a"><div class="ttname"><a href="a00057.xhtml#a9ecdd9d03745d92e8dd13166bb94a10a">Safir::Dob::EntityInjectionBase::OnInjectedUpdatedEntity</a></div><div class="ttdeci">virtual void OnInjectedUpdatedEntity(const Safir::Dob::InjectedEntityProxy injectedEntityProxy)</div><div class="ttdoc">Called when an updated entity is about to be injected in the system. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:361</div></div>
<div class="ttc" id="a00220_xhtml"><div class="ttname"><a href="a00220.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a00210_xhtml"><div class="ttname"><a href="a00210.xhtml">ResponseSender.h</a></div></div>
<div class="ttc" id="a00057_xhtml_a06c8360f65f225ca20e9265dc486b9be"><div class="ttname"><a href="a00057.xhtml#a06c8360f65f225ca20e9265dc486b9be">Safir::Dob::EntityInjectionBase::OnInjectedDeletedEntity</a></div><div class="ttdeci">virtual void OnInjectedDeletedEntity(const Safir::Dob::InjectedEntityProxy injectedEntityProxy)</div><div class="ttdoc">Called when an entity delete is about to be injected in the system. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:369</div></div>
<div class="ttc" id="a00061_xhtml"><div class="ttname"><a href="a00061.xhtml">Safir::Dob::EntityRequestProxy</a></div><div class="ttdoc">Proxy class for an entity request. </div><div class="ttdef"><b>Definition:</b> EntityRequestProxy.h:53</div></div>
<div class="ttc" id="a00320_xhtml_a5973604a3bd2beaa376e4b2c9979e392"><div class="ttname"><a href="a00320.xhtml#a5973604a3bd2beaa376e4b2c9979e392">Safir::Dob::ResponseSenderPtr</a></div><div class="ttdeci">boost::shared_ptr&lt; ResponseSender &gt; ResponseSenderPtr</div><div class="ttdef"><b>Definition:</b> ResponseSender.h:107</div></div>
<div class="ttc" id="a00155_xhtml_af2bcbdc5a4382c5dfc859e90ffc171d6"><div class="ttname"><a href="a00155.xhtml#af2bcbdc5a4382c5dfc859e90ffc171d6">Safir::Dob::ServiceRequestBase::~ServiceRequestBase</a></div><div class="ttdeci">virtual ~ServiceRequestBase()</div><div class="ttdoc">Virtual destructor is needed since we have virtual member functions. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:410</div></div>
<div class="ttc" id="a00086_xhtml"><div class="ttname"><a href="a00086.xhtml">Safir::Dob::InjectedEntityProxy</a></div><div class="ttdoc">Proxy class for entity injections. </div><div class="ttdef"><b>Definition:</b> InjectedEntityProxy.h:52</div></div>
<div class="ttc" id="a00221_xhtml"><div class="ttname"><a href="a00221.xhtml">HandlerId.h</a></div></div>
<div class="ttc" id="a00188_xhtml"><div class="ttname"><a href="a00188.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a00060_xhtml_a99f8a8d48e97f3b2cf7ef3ededc75f96"><div class="ttname"><a href="a00060.xhtml#a99f8a8d48e97f3b2cf7ef3ededc75f96">Safir::Dob::EntityRequestBase::~EntityRequestBase</a></div><div class="ttdeci">virtual ~EntityRequestBase()</div><div class="ttdoc">Virtual destructor is needed since we have virtual member functions. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:256</div></div>
<div class="ttc" id="a00156_xhtml"><div class="ttname"><a href="a00156.xhtml">Safir::Dob::ServiceRequestProxy</a></div><div class="ttdoc">Proxy class for a service request. </div><div class="ttdef"><b>Definition:</b> ServiceRequestProxy.h:52</div></div>
<div class="ttc" id="a00206_xhtml"><div class="ttname"><a href="a00206.xhtml">InjectedEntityProxy.h</a></div></div>
<div class="ttc" id="a00057_xhtml_a4ef8e79e21ea2322aa2aff86b1ca3c03"><div class="ttname"><a href="a00057.xhtml#a4ef8e79e21ea2322aa2aff86b1ca3c03">Safir::Dob::EntityInjectionBase::OnInjectedNewEntity</a></div><div class="ttdeci">virtual void OnInjectedNewEntity(const Safir::Dob::InjectedEntityProxy injectedEntityProxy)</div><div class="ttdoc">Called when a new entity is about to be injected in the system. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:353</div></div>
<div class="ttc" id="a00019_xhtml"><div class="ttname"><a href="a00019.xhtml">Safir::Dob::CompletedRegistrationBase</a></div><div class="ttdoc">Base class used when composing more elaborated interfaces. </div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:230</div></div>
<div class="ttc" id="a00057_xhtml"><div class="ttname"><a href="a00057.xhtml">Safir::Dob::EntityInjectionBase</a></div><div class="ttdoc">This Consumer Base class contains callback methods that can be overridden by an entity handler that r...</div><div class="ttdef"><b>Definition:</b> ConsumerBase.h:344</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_875ab07fb1cd25b3d31af1761d81b996.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_28e0791bf104ac510bdaad4cfcc2d792.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_965bcf24b847a0d04e19ed0e967b330b.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00201.xhtml">ConsumerBase.h</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:34 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
