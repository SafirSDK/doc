<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>Safir SDK Core: /home/lars/safir-sdk-core/include/Safir/Dob/Typesystem/ChannelId.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00214_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ChannelId.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00214.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2008-2013 (http://safirsdkcore.com)</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">* </span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Lars Hagstr√∂m / stlrha</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __DOTS_CHANNEL_ID_H__</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define __DOTS_CHANNEL_ID_H__</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;boost/functional/hash.hpp&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00188.xhtml">Safir/Dob/Typesystem/Defs.h</a>&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00241.xhtml">Safir/Dob/Typesystem/Utilities.h</a>&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00220.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/Internal/InternalOperations.h&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00315.xhtml">Safir</a></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>Dob</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>Typesystem</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="a00015.xhtml">   45</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00015.xhtml">ChannelId</a></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="a00015.xhtml#a041bc531067838f924960cd6c0df2ca4">   49</a></span>&#160;        <span class="keyword">static</span> <a class="code" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <span class="keyword">const</span> <a class="code" href="a00015.xhtml">ChannelId</a> <a class="code" href="a00015.xhtml#a041bc531067838f924960cd6c0df2ca4">ALL_CHANNELS</a>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="a00015.xhtml#a2dcbef3d75931eeeaa0e533bdbbf3e43">   56</a></span>&#160;        <a class="code" href="a00015.xhtml#a2dcbef3d75931eeeaa0e533bdbbf3e43">ChannelId</a>():</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            m_channelId(Internal::DEFAULT_CHANNEL_ID),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            m_channelIdStr(L<span class="stringliteral">&quot;DEFAULT_CHANNEL&quot;</span>)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        {}</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="a00015.xhtml#aee07ad74cd0c47bb87435c4f1c654ca1">   68</a></span>&#160;        <a class="code" href="a00015.xhtml#aee07ad74cd0c47bb87435c4f1c654ca1">ChannelId</a>(<span class="keyword">const</span> std::wstring&amp; <span class="keywordtype">id</span>):</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            m_channelId(Internal::Generate64BitHash(id)),</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            m_channelIdStr(id)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        {}</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="a00015.xhtml#ac5ff9b3fa2b86149ea1e83d96bb0b36a">   81</a></span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a00015.xhtml#ac5ff9b3fa2b86149ea1e83d96bb0b36a">ChannelId</a>(<span class="keyword">const</span> <a class="code" href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Int64</a> <span class="keywordtype">id</span>):</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            m_channelId(id)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        {}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="a00015.xhtml#a2bdd6e1471aa396d81f56b65fb09d533">   94</a></span>&#160;        <a class="code" href="a00015.xhtml#a2bdd6e1471aa396d81f56b65fb09d533">ChannelId</a>(<span class="keyword">const</span> <a class="code" href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Int64</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> std::wstring &amp; idStr):</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            m_channelId(id),</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            m_channelIdStr(idStr)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#ifndef NDEBUG</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">if</span> (!m_channelIdStr.empty() &amp;&amp; m_channelId != Internal::Generate64BitHash(idStr))</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                std::wostringstream ostr;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                ostr &lt;&lt; <span class="stringliteral">&quot;ChannelId two-argument constructor got an inconsistent id. Got (&quot;</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    &lt;&lt; <span class="keywordtype">id</span> &lt;&lt; <span class="stringliteral">&quot;, &#39;&quot;</span> &lt;&lt; idStr &lt;&lt; <span class="stringliteral">&quot;&#39;), but the string evaluates to &quot;</span> &lt;&lt; Internal::Generate64BitHash(idStr) &lt;&lt; <span class="stringliteral">&quot;.&quot;</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="a00157.xhtml">SoftwareViolationException</a>(ostr.str(),<a class="code" href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="a00015.xhtml#aea125efd8444136d17fa805bb32af367">  118</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a00015.xhtml#aea125efd8444136d17fa805bb32af367">RemoveString</a>() {m_channelIdStr.clear(); m_CachedUtf8String.clear();}</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="a00015.xhtml#a20fcc1e0f51f57c593902dc4fba1cf32">  125</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00015.xhtml#a20fcc1e0f51f57c593902dc4fba1cf32">operator ==</a>(<span class="keyword">const</span> <a class="code" href="a00015.xhtml">ChannelId</a> &amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">return</span> m_channelId == other.m_channelId;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="a00015.xhtml#a10ef96292744b6133bc77b9bd1b7282c">  135</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00015.xhtml#a10ef96292744b6133bc77b9bd1b7282c">operator !=</a>(<span class="keyword">const</span> <a class="code" href="a00015.xhtml">ChannelId</a> &amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">return</span> !(*<span class="keyword">this</span>==other);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="a00015.xhtml#a5660336150049e14f8f7cd918b6012a1">  146</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00015.xhtml#a5660336150049e14f8f7cd918b6012a1">operator &lt; </a>(<span class="keyword">const</span> <a class="code" href="a00015.xhtml">ChannelId</a> &amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">return</span> m_channelId &lt; other.m_channelId;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <a class="code" href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <span class="keyword">const</span> std::wstring <a class="code" href="a00015.xhtml#a7a9122c82da447f2ec3d358fe487ac0a">ToString</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="a00015.xhtml#a17e27b474fa69e4448acf74d3c3d09b8">  160</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Int64</a> <a class="code" href="a00015.xhtml#a17e27b474fa69e4448acf74d3c3d09b8">UnderlyingType</a>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="a00015.xhtml#aac4fce12180bc36b0ffd6f1492fe32cf">  167</a></span>&#160;        UnderlyingType <a class="code" href="a00015.xhtml#aac4fce12180bc36b0ffd6f1492fe32cf">GetRawValue</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_channelId;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="a00015.xhtml#ab5a79b7fe52ac8d23634088eb5ef8ff4">  176</a></span>&#160;        <span class="keyword">const</span> std::wstring &amp; <a class="code" href="a00015.xhtml#ab5a79b7fe52ac8d23634088eb5ef8ff4">GetRawString</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_channelIdStr;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="a00015.xhtml#a382f260eed8ee926dd3b7f4e704e139f">  184</a></span>&#160;        <a class="code" href="a00322.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> <a class="code" href="a00015.xhtml#a382f260eed8ee926dd3b7f4e704e139f">Utf8StringLength</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordflow">if</span> (m_channelIdStr.empty())</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">if</span> (m_CachedUtf8String.empty())</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                m_CachedUtf8String = <a class="code" href="a00331.xhtml#a590903d89625dc985b91ec3b195ef78b">Utilities::ToUtf8</a>(m_channelIdStr);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="a00322.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a><span class="keyword">&gt;</span>(m_CachedUtf8String.length() + 1);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="a00015.xhtml#af04a86767640288ef3f622714a06696d">  206</a></span>&#160;        <span class="keyword">const</span> std::string &amp; <a class="code" href="a00015.xhtml#af04a86767640288ef3f622714a06696d">Utf8String</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">if</span> (!m_channelIdStr.empty() &amp;&amp; m_CachedUtf8String.empty())</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                m_CachedUtf8String = <a class="code" href="a00331.xhtml#a590903d89625dc985b91ec3b195ef78b">Utilities::ToUtf8</a>(m_channelIdStr);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">return</span> m_CachedUtf8String;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        UnderlyingType m_channelId;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        std::wstring   m_channelIdStr;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keyword">mutable</span> std::string m_CachedUtf8String;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    };</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="a00322.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">  224</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> std::wostream &amp; <a class="code" href="a00322.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">operator &lt;&lt; </a>(std::wostream&amp; out, <span class="keyword">const</span> <a class="code" href="a00015.xhtml">ChannelId</a>&amp; channelId)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    {<span class="keywordflow">return</span> out &lt;&lt; channelId.<a class="code" href="a00015.xhtml#a7a9122c82da447f2ec3d358fe487ac0a">ToString</a>();}</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="comment">//Make it possible to use ChannelId as key in a dictionaries.</span></div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="a00322.xhtml#a46ffb6f2e58b47f1ef097bb3ddc3e33f">  228</a></span>&#160;    <span class="keyword">inline</span> std::size_t <a class="code" href="a00322.xhtml#a46ffb6f2e58b47f1ef097bb3ddc3e33f">hash_value</a>(<span class="keyword">const</span> <a class="code" href="a00015.xhtml">Safir::Dob::Typesystem::ChannelId</a>&amp; val)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {<span class="keywordflow">return</span> boost::hash&lt;Int64&gt;()(val.<a class="code" href="a00015.xhtml#aac4fce12180bc36b0ffd6f1492fe32cf">GetRawValue</a>());}</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;}</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="ttc" id="a00322_xhtml_a82357c789f9fee9d69beaf1993e4f20c"><div class="ttname"><a href="a00322.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a></div><div class="ttdeci">DotsC_Int64 Int64</div><div class="ttdoc">64 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:69</div></div>
<div class="ttc" id="a00015_xhtml"><div class="ttname"><a href="a00015.xhtml">Safir::Dob::Typesystem::ChannelId</a></div><div class="ttdoc">Class containing the identity of a channel. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:45</div></div>
<div class="ttc" id="a00015_xhtml_a10ef96292744b6133bc77b9bd1b7282c"><div class="ttname"><a href="a00015.xhtml#a10ef96292744b6133bc77b9bd1b7282c">Safir::Dob::Typesystem::ChannelId::operator!=</a></div><div class="ttdeci">bool operator!=(const ChannelId &amp;other) const </div><div class="ttdoc">Inequality operator. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:135</div></div>
<div class="ttc" id="a00157_xhtml"><div class="ttname"><a href="a00157.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:360</div></div>
<div class="ttc" id="a00015_xhtml_a041bc531067838f924960cd6c0df2ca4"><div class="ttname"><a href="a00015.xhtml#a041bc531067838f924960cd6c0df2ca4">Safir::Dob::Typesystem::ChannelId::ALL_CHANNELS</a></div><div class="ttdeci">static DOTS_CPP_API const ChannelId ALL_CHANNELS</div><div class="ttdoc">Constant representing all channels. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:49</div></div>
<div class="ttc" id="a00220_xhtml_aa50218d805518247edfff3d9328be684"><div class="ttname"><a href="a00220.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a></div><div class="ttdeci">#define __WFILE__</div><div class="ttdef"><b>Definition:</b> Exceptions.h:31</div></div>
<div class="ttc" id="a00015_xhtml_a382f260eed8ee926dd3b7f4e704e139f"><div class="ttname"><a href="a00015.xhtml#a382f260eed8ee926dd3b7f4e704e139f">Safir::Dob::Typesystem::ChannelId::Utf8StringLength</a></div><div class="ttdeci">Int32 Utf8StringLength() const </div><div class="ttdoc">Get the length of the string when converted to UTF-8 encoding. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:184</div></div>
<div class="ttc" id="a00315_xhtml"><div class="ttname"><a href="a00315.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a00015_xhtml_a20fcc1e0f51f57c593902dc4fba1cf32"><div class="ttname"><a href="a00015.xhtml#a20fcc1e0f51f57c593902dc4fba1cf32">Safir::Dob::Typesystem::ChannelId::operator==</a></div><div class="ttdeci">bool operator==(const ChannelId &amp;other) const </div><div class="ttdoc">Equality operator. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:125</div></div>
<div class="ttc" id="a00015_xhtml_a5660336150049e14f8f7cd918b6012a1"><div class="ttname"><a href="a00015.xhtml#a5660336150049e14f8f7cd918b6012a1">Safir::Dob::Typesystem::ChannelId::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const ChannelId &amp;other) const </div><div class="ttdoc">Less-than operator. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:146</div></div>
<div class="ttc" id="a00220_xhtml"><div class="ttname"><a href="a00220.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a00015_xhtml_a7a9122c82da447f2ec3d358fe487ac0a"><div class="ttname"><a href="a00015.xhtml#a7a9122c82da447f2ec3d358fe487ac0a">Safir::Dob::Typesystem::ChannelId::ToString</a></div><div class="ttdeci">DOTS_CPP_API const std::wstring ToString() const </div><div class="ttdoc">Return a string representation of the channel id. </div></div>
<div class="ttc" id="a00188_xhtml_a75f4ad2b9223b1c7783ec9303a67ec6e"><div class="ttname"><a href="a00188.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a></div><div class="ttdeci">#define DOTS_CPP_API</div><div class="ttdef"><b>Definition:</b> Defs.h:33</div></div>
<div class="ttc" id="a00322_xhtml_a46ffb6f2e58b47f1ef097bb3ddc3e33f"><div class="ttname"><a href="a00322.xhtml#a46ffb6f2e58b47f1ef097bb3ddc3e33f">Safir::Dob::Typesystem::hash_value</a></div><div class="ttdeci">std::size_t hash_value(const Safir::Dob::Typesystem::ChannelId &amp;val)</div><div class="ttdef"><b>Definition:</b> ChannelId.h:228</div></div>
<div class="ttc" id="a00015_xhtml_a2dcbef3d75931eeeaa0e533bdbbf3e43"><div class="ttname"><a href="a00015.xhtml#a2dcbef3d75931eeeaa0e533bdbbf3e43">Safir::Dob::Typesystem::ChannelId::ChannelId</a></div><div class="ttdeci">ChannelId()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:56</div></div>
<div class="ttc" id="a00015_xhtml_a17e27b474fa69e4448acf74d3c3d09b8"><div class="ttname"><a href="a00015.xhtml#a17e27b474fa69e4448acf74d3c3d09b8">Safir::Dob::Typesystem::ChannelId::UnderlyingType</a></div><div class="ttdeci">Int64 UnderlyingType</div><div class="ttdef"><b>Definition:</b> ChannelId.h:160</div></div>
<div class="ttc" id="a00015_xhtml_aea125efd8444136d17fa805bb32af367"><div class="ttname"><a href="a00015.xhtml#aea125efd8444136d17fa805bb32af367">Safir::Dob::Typesystem::ChannelId::RemoveString</a></div><div class="ttdeci">void RemoveString()</div><div class="ttdoc">Remove the included string from the channel id. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:118</div></div>
<div class="ttc" id="a00015_xhtml_ac5ff9b3fa2b86149ea1e83d96bb0b36a"><div class="ttname"><a href="a00015.xhtml#ac5ff9b3fa2b86149ea1e83d96bb0b36a">Safir::Dob::Typesystem::ChannelId::ChannelId</a></div><div class="ttdeci">ChannelId(const Int64 id)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:81</div></div>
<div class="ttc" id="a00322_xhtml_a74434cdf7c582d37ccf33d83ec9561e6"><div class="ttname"><a href="a00322.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">Safir::Dob::Typesystem::operator&lt;&lt;</a></div><div class="ttdeci">static std::wostream &amp; operator&lt;&lt;(std::wostream &amp;out, const ChannelId &amp;channelId)</div><div class="ttdef"><b>Definition:</b> ChannelId.h:224</div></div>
<div class="ttc" id="a00015_xhtml_a2bdd6e1471aa396d81f56b65fb09d533"><div class="ttname"><a href="a00015.xhtml#a2bdd6e1471aa396d81f56b65fb09d533">Safir::Dob::Typesystem::ChannelId::ChannelId</a></div><div class="ttdeci">ChannelId(const Int64 id, const std::wstring &amp;idStr)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:94</div></div>
<div class="ttc" id="a00015_xhtml_af04a86767640288ef3f622714a06696d"><div class="ttname"><a href="a00015.xhtml#af04a86767640288ef3f622714a06696d">Safir::Dob::Typesystem::ChannelId::Utf8String</a></div><div class="ttdeci">const std::string &amp; Utf8String() const </div><div class="ttdoc">Convert the string to UTF-8. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:206</div></div>
<div class="ttc" id="a00241_xhtml"><div class="ttname"><a href="a00241.xhtml">Utilities.h</a></div></div>
<div class="ttc" id="a00188_xhtml"><div class="ttname"><a href="a00188.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a00322_xhtml_a77c8a9fabe66e72ccbc66c729540b9b6"><div class="ttname"><a href="a00322.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a></div><div class="ttdeci">DotsC_Int32 Int32</div><div class="ttdoc">32 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:66</div></div>
<div class="ttc" id="a00015_xhtml_aac4fce12180bc36b0ffd6f1492fe32cf"><div class="ttname"><a href="a00015.xhtml#aac4fce12180bc36b0ffd6f1492fe32cf">Safir::Dob::Typesystem::ChannelId::GetRawValue</a></div><div class="ttdeci">UnderlyingType GetRawValue() const </div><div class="ttdoc">Get the raw 64 bit integer identifier. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:167</div></div>
<div class="ttc" id="a00015_xhtml_ab5a79b7fe52ac8d23634088eb5ef8ff4"><div class="ttname"><a href="a00015.xhtml#ab5a79b7fe52ac8d23634088eb5ef8ff4">Safir::Dob::Typesystem::ChannelId::GetRawString</a></div><div class="ttdeci">const std::wstring &amp; GetRawString() const </div><div class="ttdoc">Get the string that was used to create this id. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:176</div></div>
<div class="ttc" id="a00015_xhtml_aee07ad74cd0c47bb87435c4f1c654ca1"><div class="ttname"><a href="a00015.xhtml#aee07ad74cd0c47bb87435c4f1c654ca1">Safir::Dob::Typesystem::ChannelId::ChannelId</a></div><div class="ttdeci">ChannelId(const std::wstring &amp;id)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:68</div></div>
<div class="ttc" id="a00331_xhtml_a590903d89625dc985b91ec3b195ef78b"><div class="ttname"><a href="a00331.xhtml#a590903d89625dc985b91ec3b195ef78b">Safir::Dob::Typesystem::Utilities::ToUtf8</a></div><div class="ttdeci">DOTS_CPP_API const std::string ToUtf8(const std::wstring &amp;wstr)</div><div class="ttdoc">Convert a std::wstring to UTF8-encoded std::string. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_875ab07fb1cd25b3d31af1761d81b996.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_28e0791bf104ac510bdaad4cfcc2d792.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_965bcf24b847a0d04e19ed0e967b330b.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_38f82b5b5f11e1b78c24b84f6d996dec.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00214.xhtml">ChannelId.h</a></li>
    <li class="footer">Generated on Tue Nov 10 2015 09:34:34 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
