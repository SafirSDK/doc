digraph "Safir::Dob::Typesystem::FundamentalException"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="Safir::Dob::Typesystem\l::FundamentalException",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="This is the base class of all Fundamental Exceptions."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="Safir::Dob::Typesystem\l::Internal::CommonExceptionBase",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01447.html",tooltip="Common functionality for the exception hierarchy of the DOB typesystem."];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="std::exception",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="Safir::Dob::AccessDenied\lException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01711.html",tooltip="Thrown when not owner tries to set/delete an entity."];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="Safir::Dob::GhostExistsException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01779.html",tooltip="Thrown when an injection handler tries to set/delete an entity for which there is a ghost instance th..."];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="Safir::Dob::NotOpenException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01851.html",tooltip="Exception thrown if dose_main has terminated in an unexpected way, or the application has not yet con..."];
  Node1 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="Safir::Dob::Typesystem\l::ConfigurationErrorException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01467.html",tooltip="Used when there is an error that implies that there is something wrong in the configuration."];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="Safir::Dob::Typesystem\l::IllegalValueException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01459.html",tooltip="A parameter in the call was invalid."];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="Safir::Dob::Typesystem\l::IncompatibleTypesException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01463.html",tooltip="This exception is thrown if a class cannot be cast to the expected type."];
  Node1 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node10 [label="Safir::Dob::Typesystem\l::NullException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01475.html",tooltip="Thrown when an application attempts to get the value of a member that is null."];
  Node1 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node11 [label="Safir::Dob::Typesystem\l::ReadOnlyException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01479.html",tooltip="Used when someone tries to set a property that is mapped to something that cannot be changed."];
  Node1 -> Node12 [dir="back",color="steelblue1",style="solid"];
  Node12 [label="Safir::Dob::Typesystem\l::SoftwareViolationException",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01471.html",tooltip="Meant to be used when something goes very wrong."];
}
