<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Safir SDK Core: Safir::Dob::Connection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00024.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a00603.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Connection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A connection to the DOB.  
 <a href="a00024.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00187_source.xhtml">Safir/Dob/Connection.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Connection:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00604.svg" width="196" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Connection:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00605.svg" width="196" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6881eb377b31c2b34a3200cfba54337c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.xhtml#a6881eb377b31c2b34a3200cfba54337c">Connection</a> ()</td></tr>
<tr class="memdesc:a6881eb377b31c2b34a3200cfba54337c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a6881eb377b31c2b34a3200cfba54337c">More...</a><br /></td></tr>
<tr class="separator:a6881eb377b31c2b34a3200cfba54337c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0f07cda835b1374a9d8eee7b776b4b4"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.xhtml#af0f07cda835b1374a9d8eee7b776b4b4">~Connection</a> ()</td></tr>
<tr class="memdesc:af0f07cda835b1374a9d8eee7b776b4b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#af0f07cda835b1374a9d8eee7b776b4b4">More...</a><br /></td></tr>
<tr class="separator:af0f07cda835b1374a9d8eee7b776b4b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa19cfc24f0122fed1b1b41f755ed25cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.xhtml#aa19cfc24f0122fed1b1b41f755ed25cd">Open</a> (const std::wstring &amp;connectionNameCommonPart, const std::wstring &amp;connectionNameInstancePart, const <a class="el" href="a00324.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Dob::Typesystem::Int32</a> context, <a class="el" href="a00163.xhtml">StopHandler</a> *const stopHandler, <a class="el" href="a00048.xhtml">Dispatcher</a> *const dispatcher)</td></tr>
<tr class="memdesc:aa19cfc24f0122fed1b1b41f755ed25cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a connection to the DOB.  <a href="#aa19cfc24f0122fed1b1b41f755ed25cd">More...</a><br /></td></tr>
<tr class="separator:aa19cfc24f0122fed1b1b41f755ed25cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9995eec74f3e949c307c6cdde3c1c617"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.xhtml#a9995eec74f3e949c307c6cdde3c1c617">Close</a> ()</td></tr>
<tr class="memdesc:a9995eec74f3e949c307c6cdde3c1c617"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close the connection to the DOB.  <a href="#a9995eec74f3e949c307c6cdde3c1c617">More...</a><br /></td></tr>
<tr class="separator:a9995eec74f3e949c307c6cdde3c1c617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3271fe5ffd1973cf9b143317c6ae0236"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.xhtml#a3271fe5ffd1973cf9b143317c6ae0236">IsOpen</a> () const </td></tr>
<tr class="memdesc:a3271fe5ffd1973cf9b143317c6ae0236"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if this <a class="el" href="a00024.xhtml" title="A connection to the DOB. ">Connection</a> instance is open.  <a href="#a3271fe5ffd1973cf9b143317c6ae0236">More...</a><br /></td></tr>
<tr class="separator:a3271fe5ffd1973cf9b143317c6ae0236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fd063d3b943849ec90f525d819fe593"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.xhtml#a0fd063d3b943849ec90f525d819fe593">Dispatch</a> () const </td></tr>
<tr class="memdesc:a0fd063d3b943849ec90f525d819fe593"><td class="mdescLeft">&#160;</td><td class="mdescRight">When the dispatch event or callback is signalled, the application MUST call this method.  <a href="#a0fd063d3b943849ec90f525d819fe593">More...</a><br /></td></tr>
<tr class="separator:a0fd063d3b943849ec90f525d819fe593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a00029"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a00029')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a00029.xhtml">Safir::Dob::ConnectionBase</a></td></tr>
<tr class="memitem:a1ea3315feba4e5901666b95c77b05de5 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a1ea3315feba4e5901666b95c77b05de5">ConnectionBase</a> ()</td></tr>
<tr class="memdesc:a1ea3315feba4e5901666b95c77b05de5 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a1ea3315feba4e5901666b95c77b05de5">More...</a><br /></td></tr>
<tr class="separator:a1ea3315feba4e5901666b95c77b05de5 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e38491c4598c50cacdfa127942a8fcd inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a4e38491c4598c50cacdfa127942a8fcd">~ConnectionBase</a> ()</td></tr>
<tr class="memdesc:a4e38491c4598c50cacdfa127942a8fcd inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a4e38491c4598c50cacdfa127942a8fcd">More...</a><br /></td></tr>
<tr class="separator:a4e38491c4598c50cacdfa127942a8fcd inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226dbf99c1a48a45716dd7ef3c169c89 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a226dbf99c1a48a45716dd7ef3c169c89">RegisterEntityHandler</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const <a class="el" href="a00093.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a> instanceIdPolicy, <a class="el" href="a00054.xhtml">Dob::EntityHandler</a> *const entityHandler) const </td></tr>
<tr class="memdesc:a226dbf99c1a48a45716dd7ef3c169c89 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registration of an entity handler for a given type.  <a href="#a226dbf99c1a48a45716dd7ef3c169c89">More...</a><br /></td></tr>
<tr class="separator:a226dbf99c1a48a45716dd7ef3c169c89 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb921429d22daec5b4e0972274952be inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#abcb921429d22daec5b4e0972274952be">RegisterEntityHandlerInjection</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const <a class="el" href="a00093.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a> instanceIdPolicy, <a class="el" href="a00055.xhtml">Dob::EntityHandlerInjection</a> *const entityHandlerInjection) const </td></tr>
<tr class="memdesc:abcb921429d22daec5b4e0972274952be inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register an entity handler that also gets informed about injected entities.  <a href="#abcb921429d22daec5b4e0972274952be">More...</a><br /></td></tr>
<tr class="separator:abcb921429d22daec5b4e0972274952be inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a064b89bcd382c58554a71ed16af0260e inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a064b89bcd382c58554a71ed16af0260e">RegisterEntityHandlerPending</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const <a class="el" href="a00093.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a> instanceIdPolicy, <a class="el" href="a00056.xhtml">Dob::EntityHandlerPending</a> *const entityHandlerPending) const </td></tr>
<tr class="memdesc:a064b89bcd382c58554a71ed16af0260e inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pending registration of a handler for a given entity type.  <a href="#a064b89bcd382c58554a71ed16af0260e">More...</a><br /></td></tr>
<tr class="separator:a064b89bcd382c58554a71ed16af0260e inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a542aaf7887a8f67e8a2ac84721b65cfc inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a542aaf7887a8f67e8a2ac84721b65cfc">RegisterServiceHandler</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a00155.xhtml">Dob::ServiceHandler</a> *const serviceHandler) const </td></tr>
<tr class="memdesc:a542aaf7887a8f67e8a2ac84721b65cfc inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a service handler for a given type.  <a href="#a542aaf7887a8f67e8a2ac84721b65cfc">More...</a><br /></td></tr>
<tr class="separator:a542aaf7887a8f67e8a2ac84721b65cfc inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70ee8157958a05e597702ccf7ff5236f inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a70ee8157958a05e597702ccf7ff5236f">RegisterServiceHandlerPending</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a00156.xhtml">Dob::ServiceHandlerPending</a> *const serviceHandlerPending) const </td></tr>
<tr class="memdesc:a70ee8157958a05e597702ccf7ff5236f inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pending registration of a handler for a given service type.  <a href="#a70ee8157958a05e597702ccf7ff5236f">More...</a><br /></td></tr>
<tr class="separator:a70ee8157958a05e597702ccf7ff5236f inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6677d6f683221b9864acb2d810fa4ad0 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a6677d6f683221b9864acb2d810fa4ad0">UnregisterHandler</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const </td></tr>
<tr class="memdesc:a6677d6f683221b9864acb2d810fa4ad0 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unregister of an entity handler or a service handler.  <a href="#a6677d6f683221b9864acb2d810fa4ad0">More...</a><br /></td></tr>
<tr class="separator:a6677d6f683221b9864acb2d810fa4ad0 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa20825d84c6fc421dc4c0dbfab28d511 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#aa20825d84c6fc421dc4c0dbfab28d511">SubscribeMessage</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00017.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, <a class="el" href="a00103.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const </td></tr>
<tr class="memdesc:aa20825d84c6fc421dc4c0dbfab28d511 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for messages of a certain type and its subclasses.  <a href="#aa20825d84c6fc421dc4c0dbfab28d511">More...</a><br /></td></tr>
<tr class="separator:aa20825d84c6fc421dc4c0dbfab28d511 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55c84f440d16a43c2e95b5ba21240add inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a55c84f440d16a43c2e95b5ba21240add">SubscribeMessage</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00017.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, const bool includeSubclasses, <a class="el" href="a00103.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const </td></tr>
<tr class="memdesc:a55c84f440d16a43c2e95b5ba21240add inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for messages of a certain type (additional parameters).  <a href="#a55c84f440d16a43c2e95b5ba21240add">More...</a><br /></td></tr>
<tr class="separator:a55c84f440d16a43c2e95b5ba21240add inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a748cf1069826d78f1e207ad6bd0183d7 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a748cf1069826d78f1e207ad6bd0183d7">UnsubscribeMessage</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00017.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, <a class="el" href="a00103.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const </td></tr>
<tr class="memdesc:a748cf1069826d78f1e207ad6bd0183d7 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove a message subscription made by the given subscriber.  <a href="#a748cf1069826d78f1e207ad6bd0183d7">More...</a><br /></td></tr>
<tr class="separator:a748cf1069826d78f1e207ad6bd0183d7 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb88906c3b0a7adeef13fe8bde39fc87 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#afb88906c3b0a7adeef13fe8bde39fc87">UnsubscribeMessage</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00017.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, const bool includeSubclasses, <a class="el" href="a00103.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const </td></tr>
<tr class="memdesc:afb88906c3b0a7adeef13fe8bde39fc87 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove a message subscription made by the given subscriber (additional parameters).  <a href="#afb88906c3b0a7adeef13fe8bde39fc87">More...</a><br /></td></tr>
<tr class="separator:afb88906c3b0a7adeef13fe8bde39fc87 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462f6ef64ce8b2b4fb37e76abe6dd820 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a462f6ef64ce8b2b4fb37e76abe6dd820">SubscribeEntity</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, <a class="el" href="a00064.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const </td></tr>
<tr class="memdesc:a462f6ef64ce8b2b4fb37e76abe6dd820 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for instances of an entity type and its subclasses.  <a href="#a462f6ef64ce8b2b4fb37e76abe6dd820">More...</a><br /></td></tr>
<tr class="separator:a462f6ef64ce8b2b4fb37e76abe6dd820 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80622d84d0bcbdb31afba469952cfeb6 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a80622d84d0bcbdb31afba469952cfeb6">SubscribeEntity</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const bool includeUpdates, const bool includeSubclasses, const bool restartSubscription, <a class="el" href="a00064.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const </td></tr>
<tr class="memdesc:a80622d84d0bcbdb31afba469952cfeb6 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subscription for an entity type (additional parameters).  <a href="#a80622d84d0bcbdb31afba469952cfeb6">More...</a><br /></td></tr>
<tr class="separator:a80622d84d0bcbdb31afba469952cfeb6 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a069b17f51d0308d22175456206437867 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a069b17f51d0308d22175456206437867">SubscribeEntity</a> (const <a class="el" href="a00057.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, const bool includeUpdates, const bool restartSubscription, <a class="el" href="a00064.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const </td></tr>
<tr class="memdesc:a069b17f51d0308d22175456206437867 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for a specific instance of an entity type.  <a href="#a069b17f51d0308d22175456206437867">More...</a><br /></td></tr>
<tr class="separator:a069b17f51d0308d22175456206437867 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8893dd30472347e4be8d0e8a1890c25e inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a8893dd30472347e4be8d0e8a1890c25e">UnsubscribeEntity</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, <a class="el" href="a00064.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const </td></tr>
<tr class="memdesc:a8893dd30472347e4be8d0e8a1890c25e inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove an entity subscription made by the given subscriber.  <a href="#a8893dd30472347e4be8d0e8a1890c25e">More...</a><br /></td></tr>
<tr class="separator:a8893dd30472347e4be8d0e8a1890c25e inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97b38492e63cab36c1668d65e194ac8d inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a97b38492e63cab36c1668d65e194ac8d">UnsubscribeEntity</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const bool includeSubclasses, <a class="el" href="a00064.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const </td></tr>
<tr class="memdesc:a97b38492e63cab36c1668d65e194ac8d inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove an entity subscription made by the given subscriber (additional parameters).  <a href="#a97b38492e63cab36c1668d65e194ac8d">More...</a><br /></td></tr>
<tr class="separator:a97b38492e63cab36c1668d65e194ac8d inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc52830ef581191ed5f8b9a073ca1b2b inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#acc52830ef581191ed5f8b9a073ca1b2b">UnsubscribeEntity</a> (const <a class="el" href="a00057.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, <a class="el" href="a00064.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const </td></tr>
<tr class="memdesc:acc52830ef581191ed5f8b9a073ca1b2b inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove an entity instance subscription made by the given subscriber.  <a href="#acc52830ef581191ed5f8b9a073ca1b2b">More...</a><br /></td></tr>
<tr class="separator:acc52830ef581191ed5f8b9a073ca1b2b inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa70096b5bc078fc061dd73298dc8e6b6 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#aa70096b5bc078fc061dd73298dc8e6b6">SubscribeRegistration</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const bool includeSubclasses, const bool restartSubscription, <a class="el" href="a00138.xhtml">Dob::RegistrationSubscriber</a> *const registrationSubscriber) const </td></tr>
<tr class="memdesc:aa70096b5bc078fc061dd73298dc8e6b6 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for notifications about when a specific handler for an entity type or a service type is registered and unregistered.  <a href="#aa70096b5bc078fc061dd73298dc8e6b6">More...</a><br /></td></tr>
<tr class="separator:aa70096b5bc078fc061dd73298dc8e6b6 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52b5d9a13cba2ed9a1d32752dea8d9b9 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a52b5d9a13cba2ed9a1d32752dea8d9b9">UnsubscribeRegistration</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const bool includeSubclasses, <a class="el" href="a00138.xhtml">Dob::RegistrationSubscriber</a> *const registrationSubscriber) const </td></tr>
<tr class="memdesc:a52b5d9a13cba2ed9a1d32752dea8d9b9 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a registration subscription.  <a href="#a52b5d9a13cba2ed9a1d32752dea8d9b9">More...</a><br /></td></tr>
<tr class="separator:a52b5d9a13cba2ed9a1d32752dea8d9b9 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0330ffbebcf68c1cc92fcbee9c50cc4 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#aa0330ffbebcf68c1cc92fcbee9c50cc4">Send</a> (const <a class="el" href="a00322.xhtml#a1533a0e21d4871452b98112f9df219e2">Dob::MessagePtr</a> &amp;message, const <a class="el" href="a00017.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, <a class="el" href="a00102.xhtml">Dob::MessageSender</a> *const messageSender) const </td></tr>
<tr class="memdesc:aa0330ffbebcf68c1cc92fcbee9c50cc4 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a message on the specified channel.  <a href="#aa0330ffbebcf68c1cc92fcbee9c50cc4">More...</a><br /></td></tr>
<tr class="separator:aa0330ffbebcf68c1cc92fcbee9c50cc4 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42975a43297f334877d5a6f48c3b5769 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00322.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a42975a43297f334877d5a6f48c3b5769">CreateRequest</a> (const <a class="el" href="a00322.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;request, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a00139.xhtml">Dob::Requestor</a> *const requestor) const </td></tr>
<tr class="memdesc:a42975a43297f334877d5a6f48c3b5769 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request to a handler to create an entity instance without specifying the instanceId.  <a href="#a42975a43297f334877d5a6f48c3b5769">More...</a><br /></td></tr>
<tr class="separator:a42975a43297f334877d5a6f48c3b5769 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e3daeb3fc2589a36411176d5b65d01b inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00322.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a6e3daeb3fc2589a36411176d5b65d01b">CreateRequest</a> (const <a class="el" href="a00322.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;request, const <a class="el" href="a00092.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a00139.xhtml">Dob::Requestor</a> *const requestor) const </td></tr>
<tr class="memdesc:a6e3daeb3fc2589a36411176d5b65d01b inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request to a handler to create a specific entity instance.  <a href="#a6e3daeb3fc2589a36411176d5b65d01b">More...</a><br /></td></tr>
<tr class="separator:a6e3daeb3fc2589a36411176d5b65d01b inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23d228c1801eda79159687d5a9685963 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00322.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a23d228c1801eda79159687d5a9685963">UpdateRequest</a> (const <a class="el" href="a00322.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;request, const <a class="el" href="a00092.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, <a class="el" href="a00139.xhtml">Dob::Requestor</a> *const requestor) const </td></tr>
<tr class="memdesc:a23d228c1801eda79159687d5a9685963 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send an update request on an existing entity instance.  <a href="#a23d228c1801eda79159687d5a9685963">More...</a><br /></td></tr>
<tr class="separator:a23d228c1801eda79159687d5a9685963 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca191e4e933b3c20a2e303f340a255c8 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00322.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#aca191e4e933b3c20a2e303f340a255c8">DeleteRequest</a> (const <a class="el" href="a00057.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, <a class="el" href="a00139.xhtml">Dob::Requestor</a> *const requestor) const </td></tr>
<tr class="memdesc:aca191e4e933b3c20a2e303f340a255c8 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a delete request on an existing entity instance.  <a href="#aca191e4e933b3c20a2e303f340a255c8">More...</a><br /></td></tr>
<tr class="separator:aca191e4e933b3c20a2e303f340a255c8 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a669b5f791ef9b3aec8772fef7438cc89 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00322.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a669b5f791ef9b3aec8772fef7438cc89">ServiceRequest</a> (const <a class="el" href="a00322.xhtml#aa2ef0209c77f52caf77d0a1252c3500a">Dob::ServicePtr</a> &amp;request, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a00139.xhtml">Dob::Requestor</a> *const requestor) const </td></tr>
<tr class="memdesc:a669b5f791ef9b3aec8772fef7438cc89 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a request to the given service handler.  <a href="#a669b5f791ef9b3aec8772fef7438cc89">More...</a><br /></td></tr>
<tr class="separator:a669b5f791ef9b3aec8772fef7438cc89 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ae7aafd9b118cb67d7c2902472e0b38 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a6ae7aafd9b118cb67d7c2902472e0b38">SetChanges</a> (const <a class="el" href="a00322.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;entity, const <a class="el" href="a00092.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const </td></tr>
<tr class="memdesc:a6ae7aafd9b118cb67d7c2902472e0b38 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Merge the changed members of an entity straight into the pool (the given handler must be the owner).  <a href="#a6ae7aafd9b118cb67d7c2902472e0b38">More...</a><br /></td></tr>
<tr class="separator:a6ae7aafd9b118cb67d7c2902472e0b38 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13d42f58c4bfdcb7948888511d38a684 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a13d42f58c4bfdcb7948888511d38a684">SetAll</a> (const <a class="el" href="a00322.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;entity, const <a class="el" href="a00092.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const </td></tr>
<tr class="memdesc:a13d42f58c4bfdcb7948888511d38a684 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows an entity handler to create or update an entity.  <a href="#a13d42f58c4bfdcb7948888511d38a684">More...</a><br /></td></tr>
<tr class="separator:a13d42f58c4bfdcb7948888511d38a684 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae350be8d40a3d312ea727decfae37f32 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#ae350be8d40a3d312ea727decfae37f32">Delete</a> (const <a class="el" href="a00057.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const </td></tr>
<tr class="memdesc:ae350be8d40a3d312ea727decfae37f32 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows an entity handler to delete a specific owned entity instance.  <a href="#ae350be8d40a3d312ea727decfae37f32">More...</a><br /></td></tr>
<tr class="separator:ae350be8d40a3d312ea727decfae37f32 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2020dc98de6c647a4eff86123794f13e inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a2020dc98de6c647a4eff86123794f13e">DeleteAllInstances</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const </td></tr>
<tr class="memdesc:a2020dc98de6c647a4eff86123794f13e inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows an entity handler to delete all owned instances.  <a href="#a2020dc98de6c647a4eff86123794f13e">More...</a><br /></td></tr>
<tr class="separator:a2020dc98de6c647a4eff86123794f13e inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cb4a094727a4090b111ee5ab0976f95 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00060.xhtml">Dob::EntityIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a2cb4a094727a4090b111ee5ab0976f95">GetEntityIterator</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const bool includeSubclasses) const </td></tr>
<tr class="memdesc:a2cb4a094727a4090b111ee5ab0976f95 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retreives an STL compliant iterator to iterate over created instances.  <a href="#a2cb4a094727a4090b111ee5ab0976f95">More...</a><br /></td></tr>
<tr class="separator:a2cb4a094727a4090b111ee5ab0976f95 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6324804f12ec65f3bf10a08dc3ac906 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00061.xhtml">Dob::EntityProxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#ac6324804f12ec65f3bf10a08dc3ac906">Read</a> (const <a class="el" href="a00057.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId) const </td></tr>
<tr class="memdesc:ac6324804f12ec65f3bf10a08dc3ac906 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read an entity from the distributed object pool.  <a href="#ac6324804f12ec65f3bf10a08dc3ac906">More...</a><br /></td></tr>
<tr class="separator:ac6324804f12ec65f3bf10a08dc3ac906 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7223140c5503aa801013ee734a8b1564 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a7223140c5503aa801013ee734a8b1564">IsCreated</a> (const <a class="el" href="a00057.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId) const </td></tr>
<tr class="memdesc:a7223140c5503aa801013ee734a8b1564 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an instance of an entity is created or not.  <a href="#a7223140c5503aa801013ee734a8b1564">More...</a><br /></td></tr>
<tr class="separator:a7223140c5503aa801013ee734a8b1564 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d079f15892425be9bba1b90602d9417 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a7d079f15892425be9bba1b90602d9417">GetNumberOfInstances</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const bool includeSubclasses) const </td></tr>
<tr class="memdesc:a7d079f15892425be9bba1b90602d9417 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is used to get the number of instances of an entity that exists.  <a href="#a7d079f15892425be9bba1b90602d9417">More...</a><br /></td></tr>
<tr class="separator:a7d079f15892425be9bba1b90602d9417 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fe8b9a9604408d1180c33eb2b3b1b92 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00093.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#a0fe8b9a9604408d1180c33eb2b3b1b92">GetInstanceIdPolicy</a> (const <a class="el" href="a00324.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a00085.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const </td></tr>
<tr class="memdesc:a0fe8b9a9604408d1180c33eb2b3b1b92 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is used to get the instanceIdPolicy for a specific class and handler.  <a href="#a0fe8b9a9604408d1180c33eb2b3b1b92">More...</a><br /></td></tr>
<tr class="separator:a0fe8b9a9604408d1180c33eb2b3b1b92 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa3d36d36de10aa929e45555a0e1c369 inherit pub_methods_a00029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00029.xhtml#aaa3d36d36de10aa929e45555a0e1c369">ExitDispatch</a> () const </td></tr>
<tr class="memdesc:aaa3d36d36de10aa929e45555a0e1c369 inherit pub_methods_a00029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interrupt the ongoing Dispatch even if all data to the application have not been distpatched.  <a href="#aaa3d36d36de10aa929e45555a0e1c369">More...</a><br /></td></tr>
<tr class="separator:aaa3d36d36de10aa929e45555a0e1c369 inherit pub_methods_a00029"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A connection to the DOB. </p>
<p>This class represents a "real" (as opposed to <a class="el" href="a00151.xhtml" title="A secondary connection attached to a &quot;real&quot; connection. ">SecondaryConnection</a>) connection to the dob. Each DOB application must have at least one connection. Connections are not thread safe. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a6881eb377b31c2b34a3200cfba54337c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::Connection::Connection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a class="anchor" id="af0f07cda835b1374a9d8eee7b776b4b4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Safir::Dob::Connection::~Connection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a9995eec74f3e949c307c6cdde3c1c617"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::Connection::Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Close the connection to the DOB. </p>
<p>Closes the connection to the DOB and deallocates all resources. All subscriptions and registrations will automatically be deleted and there is no need to call Unsubscribe and Unregister before calling Close. Note that all connections that were set up using Attach will also be closed after a call to this method. </p>

</div>
</div>
<a class="anchor" id="a0fd063d3b943849ec90f525d819fe593"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::Connection::Dispatch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>When the dispatch event or callback is signalled, the application MUST call this method. </p>
<p>A call to Dispatch will result in that all queues for this connection are emptied and that each message in the queues are passed to the associated consumer. Calls to dispatch from connection instances that are not open will be ignored. </p>

<p>Referenced by <a class="el" href="a00004.xhtml#a278d45a9ef9d7783b7ec8c0bad91f107">Safir::Utilities::AceDispatcher::AceDispatcher()</a>.</p>

<p><div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00024_a0fd063d3b943849ec90f525d819fe593_icgraph.svg" width="408" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a3271fe5ffd1973cf9b143317c6ae0236"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Safir::Dob::Connection::IsOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if this <a class="el" href="a00024.xhtml" title="A connection to the DOB. ">Connection</a> instance is open. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the connection is open, otherwise false. </dd></dl>

<p>Implements <a class="el" href="a00029.xhtml#a3f75bb234da260aa156fa1a04b00ec0f">Safir::Dob::ConnectionBase</a>.</p>

</div>
</div>
<a class="anchor" id="aa19cfc24f0122fed1b1b41f755ed25cd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::Connection::Open </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>connectionNameCommonPart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>connectionNameInstancePart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00324.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Dob::Typesystem::Int32</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00163.xhtml">StopHandler</a> *const&#160;</td>
          <td class="paramname"><em>stopHandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00048.xhtml">Dispatcher</a> *const&#160;</td>
          <td class="paramname"><em>dispatcher</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Open a connection to the DOB. </p>
<p>The connection uses the OnDoDispatch callback to signal that there is incoming data available. When OnDoDispatch is called the application shall set an event or similar and then call <a class="el" href="a00024.xhtml#a0fd063d3b943849ec90f525d819fe593" title="When the dispatch event or callback is signalled, the application MUST call this method. ">Dispatch()</a> in this class from the thread that owns (has called Open) the connection.</p>
<p>There can be a number of contexts in the DOB. A connection is linked to the context specified in Open. All operations using a connection is affecting only the context linked to that connection. The intended primary usage is for recording/replay functionality. 0 is defined as the default context.</p>
<p>Note that connectionNameCommonPart together with connectionNameInstancePart must be unique in the node.</p>
<p>If NULL is passed as the stopHandler argument the connection will not receive a stop order. Normally only the main thread of an application should pass a non-NULL stopHandler, and it should then tell other parts of the application to exit. If multiple stop handlers are specified there is NO guaranteed order between which gets called first when a process receives a stop signal.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">connectionNameCommonPart</td><td>Name that identifies the program but not any particular program instance. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">connectionNameInstancePart</td><td>Name that identifies a particular program instance. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Context </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">stopHandler</td><td>Object that implements the <a class="el" href="a00163.xhtml" title="Interface for reception of a stop order. ">StopHandler</a> interface. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dispatcher</td><td>Object that implements the <a class="el" href="a00048.xhtml" title="Interface for reception of a dispatch order. ">Dispatcher</a> interface.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00108.xhtml" title="Exception thrown if dose_main has terminated in an unexpected way, or the application has not yet con...">Safir::Dob::NotOpenException</a></td><td>The connection name is already used by someone else. Try another! </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00317.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00322.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00024.xhtml">Connection</a></li>
    <li class="footer">Generated on Sat Apr 30 2016 20:20:03 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
