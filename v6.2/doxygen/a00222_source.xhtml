<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/Exceptions.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00222_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Exceptions.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00222.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2005-2013 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">* </span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Joel Ottosson / stjoot</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef _dots_exception_h</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define _dots_exception_h</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">//Definition of __WFILE__ which is the wide-string equivalent of __FILE__</span></div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="a00222.xhtml#ad36399393da65b6f3b338cccfa4bb831">   29</a></span>&#160;<span class="preprocessor">#define WIDEN2(x) L ## x</span></div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="a00222.xhtml#a91d933cd369a295f1299a8eec2f6ef60">   30</a></span>&#160;<span class="preprocessor">#define WIDEN(x) WIDEN2(x)</span></div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">   31</a></span>&#160;<span class="preprocessor">#define __WFILE__ WIDEN(__FILE__)</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00190.xhtml">Safir/Dob/Typesystem/Defs.h</a>&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;boost/static_assert.hpp&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00317.xhtml">Safir</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">namespace </span>Internal</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#pragma warning (push)</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#pragma warning (disable:4251)</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#pragma warning (disable:4275)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="a00020.xhtml">   64</a></span>&#160;        <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00020.xhtml">CommonExceptionBase</a>:</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keyword">public</span> std::exception</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">public</span>:</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <a class="code" href="a00020.xhtml">CommonExceptionBase</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                <span class="keyword">const</span> std::wstring &amp; fileName, <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber); <span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keyword">virtual</span> ~<a class="code" href="a00020.xhtml">CommonExceptionBase</a>() <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keyword">const</span> std::wstring GetExceptionInfo() <span class="keyword">const</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="a00020.xhtml#a8b486a052d06e3e4fa52d2db34f7c689">  112</a></span>&#160;            <span class="keyword">const</span> std::wstring &amp; <a class="code" href="a00020.xhtml#a8b486a052d06e3e4fa52d2db34f7c689">GetMessage</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_Message;}</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keyword">virtual</span> <span class="keyword">const</span> std::wstring <a class="code" href="a00326.xhtml#a4072b311dc5af208a3fe1134ab67c911">GetName</a>() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="a00020.xhtml#a0c0a3e4239873d269b94a4b8f7269b8e">  126</a></span>&#160;            <span class="keyword">const</span> std::wstring &amp; <a class="code" href="a00020.xhtml#a0c0a3e4239873d269b94a4b8f7269b8e">GetFileName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_FileName;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="a00020.xhtml#adfeeee0b5e6627634a54de151f5ad072">  133</a></span>&#160;            <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> <a class="code" href="a00020.xhtml#adfeeee0b5e6627634a54de151f5ad072">GetLineNumber</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_LineNumber;}</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * what() <span class="keyword">const</span> <span class="keywordflow">throw</span>();</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00326.xhtml#aef42299b0702e8f4edcab47112786a00">GetTypeId</a>() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keyword">private</span>:</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> m_LineNumber;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            std::wstring m_FileName;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            std::wstring m_Message;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keyword">mutable</span> std::string m_ConvertedMessage;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        };</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">#pragma warning (pop)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="a00082.xhtml">  191</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00082.xhtml">FundamentalException</a> :</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00020.xhtml">Internal::CommonExceptionBase</a></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="a00082.xhtml">FundamentalException</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                             <span class="keyword">const</span> std::wstring &amp; fileName,            <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                             <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber); <span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="a00082.xhtml#aab6eeed5d199eae5240ec039623f5a07">  212</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = 5177142987005172374LL;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="a00082.xhtml#ad0d89087eb551de87385a58d24d65201">  215</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00082.xhtml#ad0d89087eb551de87385a58d24d65201">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    };</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="a00079.xhtml">  224</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00079.xhtml">Exception</a> :</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00020.xhtml">Internal::CommonExceptionBase</a></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <a class="code" href="a00079.xhtml">Exception</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                  <span class="keyword">const</span> std::wstring &amp; fileName,            <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                  <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber); <span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="a00079.xhtml#a5688b900a631863d8515eb96ed0664ff">  245</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = 8409897425067168944LL;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="a00079.xhtml#a6f08db4b86b8bb49a4e2924de9534f69">  248</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00079.xhtml#a6f08db4b86b8bb49a4e2924de9534f69">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    };</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="a00086.xhtml">  255</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00086.xhtml">IllegalValueException</a> :</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00082.xhtml">FundamentalException</a></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="a00086.xhtml#a2f03b501256738b4bbdf4f833f1e3ff8">  271</a></span>&#160;        <a class="code" href="a00086.xhtml#a2f03b501256738b4bbdf4f833f1e3ff8">IllegalValueException</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                              <span class="keyword">const</span> std::wstring &amp; fileName,           <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                              <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber):<span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <a class="code" href="a00082.xhtml">FundamentalException</a>(message,fileName,lineNumber) {}</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetName</span></div><div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="a00086.xhtml#a37746253a484312a6d55f8521ae09466">  277</a></span>&#160;        <span class="keyword">const</span> std::wstring <a class="code" href="a00086.xhtml#a37746253a484312a6d55f8521ae09466">GetName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> L<span class="stringliteral">&quot;Safir.Dob.Typesystem.IllegalValueException&quot;</span>;}</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno"><a class="line" href="a00086.xhtml#a172fd4f8847a1e87f379e5c101a62aff">  280</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = -3653935143986901894LL;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="a00086.xhtml#a1911da9fd4c08c3b3951a3d6a8b6758c">  283</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00086.xhtml#a1911da9fd4c08c3b3951a3d6a8b6758c">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    };</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="a00087.xhtml">  290</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00087.xhtml">IncompatibleTypesException</a> :</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00082.xhtml">FundamentalException</a></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    {</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="a00087.xhtml#acda9244c3e5bb0c655a6e63297187fa0">  306</a></span>&#160;        <a class="code" href="a00087.xhtml#acda9244c3e5bb0c655a6e63297187fa0">IncompatibleTypesException</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                   <span class="keyword">const</span> std::wstring &amp; fileName,           <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber):<span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <a class="code" href="a00082.xhtml">FundamentalException</a>(message,fileName,lineNumber) {}</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetName</span></div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="a00087.xhtml#a1aeddd6e28e2eb818680fae309b04af9">  312</a></span>&#160;        <span class="keyword">const</span> std::wstring <a class="code" href="a00087.xhtml#a1aeddd6e28e2eb818680fae309b04af9">GetName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> L<span class="stringliteral">&quot;Safir.Dob.Typesystem.IncompatibleTypesException&quot;</span>;}</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="a00087.xhtml#a1fe6a98fe70ece55baff65303c2ba890">  315</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = -5150658527844777416LL;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="a00087.xhtml#adeaa7b1168d3a47e9c399c0a8c186eb7">  318</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00087.xhtml#adeaa7b1168d3a47e9c399c0a8c186eb7">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    };</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="a00022.xhtml">  325</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00022.xhtml">ConfigurationErrorException</a> :</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00082.xhtml">FundamentalException</a></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    {</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="a00022.xhtml#a076ee55a72986f1db68960519927fc2a">  341</a></span>&#160;        <a class="code" href="a00022.xhtml#a076ee55a72986f1db68960519927fc2a">ConfigurationErrorException</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                    <span class="keyword">const</span> std::wstring &amp; fileName,           <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber):<span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <a class="code" href="a00082.xhtml">FundamentalException</a>(message,fileName,lineNumber) {}</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetName</span></div><div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="a00022.xhtml#a47fd62b66e062a9c5e256581dc65bf80">  347</a></span>&#160;        <span class="keyword">const</span> std::wstring <a class="code" href="a00022.xhtml#a47fd62b66e062a9c5e256581dc65bf80">GetName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> L<span class="stringliteral">&quot;Safir.Dob.Typesystem.ConfigurationErrorException&quot;</span>;}</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="a00022.xhtml#a1ce53b6e1a89fb16c49339fb2ff6767b">  350</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = 2909620812590558895LL;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="a00022.xhtml#a2b817c8b73790df9fd9c6a0ad6515403">  353</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00022.xhtml#a2b817c8b73790df9fd9c6a0ad6515403">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    };</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="a00159.xhtml">  361</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00159.xhtml">SoftwareViolationException</a> :</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00082.xhtml">FundamentalException</a></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    {</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="a00159.xhtml#a705114526b3bbd24de821db31a85bf95">  377</a></span>&#160;        <a class="code" href="a00159.xhtml#a705114526b3bbd24de821db31a85bf95">SoftwareViolationException</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                                   <span class="keyword">const</span> std::wstring &amp; fileName,           <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber):<span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <a class="code" href="a00082.xhtml">FundamentalException</a>(message,fileName,lineNumber) {}</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetName</span></div><div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="a00159.xhtml#a2bc6513b7cb3aa2b0084af535f42c20c">  383</a></span>&#160;        <span class="keyword">const</span> std::wstring <a class="code" href="a00159.xhtml#a2bc6513b7cb3aa2b0084af535f42c20c">GetName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> L<span class="stringliteral">&quot;Safir.Dob.Typesystem.SoftwareViolationException&quot;</span>;}</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="a00159.xhtml#adb809df2e62536158d4e3b0cf4bd0899">  386</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = -2318636033853590373LL;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="a00159.xhtml#a8d619a5818b92818ca09ad4785da19b5">  389</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00159.xhtml#a8d619a5818b92818ca09ad4785da19b5">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    };</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="a00109.xhtml">  395</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00109.xhtml">NullException</a> :</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00082.xhtml">FundamentalException</a></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00411"></a><span class="lineno"><a class="line" href="a00109.xhtml#a7c95da2a2f9b2d285bcce8c7767ee075">  411</a></span>&#160;        <a class="code" href="a00109.xhtml#a7c95da2a2f9b2d285bcce8c7767ee075">NullException</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                      <span class="keyword">const</span> std::wstring &amp; fileName,           <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                      <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber):<span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            <a class="code" href="a00082.xhtml">FundamentalException</a>(message,fileName,lineNumber) {}</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetName</span></div><div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="a00109.xhtml#abc4bb9b8aaa52c3a8967608b81942021">  417</a></span>&#160;        <span class="keyword">const</span> std::wstring <a class="code" href="a00109.xhtml#abc4bb9b8aaa52c3a8967608b81942021">GetName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> L<span class="stringliteral">&quot;Safir.Dob.Typesystem.NullException&quot;</span>;}</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="a00109.xhtml#a6341dfb7f45c0e21c698ffb74571e6ac">  420</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = -6392953138294149211LL;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="a00109.xhtml#a3b5b4b14783b5932431e076266ba8420">  423</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00109.xhtml#a3b5b4b14783b5932431e076266ba8420">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    };</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="a00136.xhtml">  431</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <a class="code" href="a00136.xhtml">ReadOnlyException</a> :</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="keyword">public</span> <a class="code" href="a00082.xhtml">FundamentalException</a></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    {</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="a00136.xhtml#ae8be7ebb3d6f74ee09eabb371193c86b">  447</a></span>&#160;        <a class="code" href="a00136.xhtml#ae8be7ebb3d6f74ee09eabb371193c86b">ReadOnlyException</a>(<span class="keyword">const</span> std::wstring &amp; message,</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                          <span class="keyword">const</span> std::wstring &amp; fileName,           <span class="comment">//Use the __WFILE__ macro</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                          <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber):<span class="comment">//Use the __LINE__ macro</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <a class="code" href="a00082.xhtml">FundamentalException</a>(message,fileName,lineNumber) {}</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetName</span></div><div class="line"><a name="l00453"></a><span class="lineno"><a class="line" href="a00136.xhtml#ac29dba845d3ed08dced8c6b41e298000">  453</a></span>&#160;        <span class="keyword">const</span> std::wstring <a class="code" href="a00136.xhtml#ac29dba845d3ed08dced8c6b41e298000">GetName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> L<span class="stringliteral">&quot;Safir.Dob.Typesystem.ReadOnlyException&quot;</span>;}</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno"><a class="line" href="a00136.xhtml#a61d5f5e2503614d5b700af2e6578be10">  456</a></span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> ExceptionTypeId = -4804695341042352897LL;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="comment">//override of CommonExceptionBase::GetTypeId</span></div><div class="line"><a name="l00459"></a><span class="lineno"><a class="line" href="a00136.xhtml#a14f987ca3c2d06fc150704ad90e43cbd">  459</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00324.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> <a class="code" href="a00136.xhtml#a14f987ca3c2d06fc150704ad90e43cbd">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> ExceptionTypeId;}</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    };</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;}</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;}</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;}</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="a00159_xhtml_a705114526b3bbd24de821db31a85bf95"><div class="ttname"><a href="a00159.xhtml#a705114526b3bbd24de821db31a85bf95">Safir::Dob::Typesystem::SoftwareViolationException::SoftwareViolationException</a></div><div class="ttdeci">SoftwareViolationException(const std::wstring &amp;message, const std::wstring &amp;fileName, const Dob::Typesystem::Int64 lineNumber)</div><div class="ttdoc">Constructor with exception information. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:377</div></div>
<div class="ttc" id="a00086_xhtml_a37746253a484312a6d55f8521ae09466"><div class="ttname"><a href="a00086.xhtml#a37746253a484312a6d55f8521ae09466">Safir::Dob::Typesystem::IllegalValueException::GetName</a></div><div class="ttdeci">const std::wstring GetName() const </div><div class="ttdoc">Get the exception name. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:277</div></div>
<div class="ttc" id="a00087_xhtml_adeaa7b1168d3a47e9c399c0a8c186eb7"><div class="ttname"><a href="a00087.xhtml#adeaa7b1168d3a47e9c399c0a8c186eb7">Safir::Dob::Typesystem::IncompatibleTypesException::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:318</div></div>
<div class="ttc" id="a00020_xhtml"><div class="ttname"><a href="a00020.xhtml">Safir::Dob::Typesystem::Internal::CommonExceptionBase</a></div><div class="ttdoc">Common functionality for the exception hierarchy of the DOB typesystem. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:64</div></div>
<div class="ttc" id="a00324_xhtml_a82357c789f9fee9d69beaf1993e4f20c"><div class="ttname"><a href="a00324.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a></div><div class="ttdeci">DotsC_Int64 Int64</div><div class="ttdoc">64 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:69</div></div>
<div class="ttc" id="a00086_xhtml_a1911da9fd4c08c3b3951a3d6a8b6758c"><div class="ttname"><a href="a00086.xhtml#a1911da9fd4c08c3b3951a3d6a8b6758c">Safir::Dob::Typesystem::IllegalValueException::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:283</div></div>
<div class="ttc" id="a00109_xhtml_abc4bb9b8aaa52c3a8967608b81942021"><div class="ttname"><a href="a00109.xhtml#abc4bb9b8aaa52c3a8967608b81942021">Safir::Dob::Typesystem::NullException::GetName</a></div><div class="ttdeci">const std::wstring GetName() const </div><div class="ttdoc">Get the exception name. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:417</div></div>
<div class="ttc" id="a00086_xhtml_a2f03b501256738b4bbdf4f833f1e3ff8"><div class="ttname"><a href="a00086.xhtml#a2f03b501256738b4bbdf4f833f1e3ff8">Safir::Dob::Typesystem::IllegalValueException::IllegalValueException</a></div><div class="ttdeci">IllegalValueException(const std::wstring &amp;message, const std::wstring &amp;fileName, const Dob::Typesystem::Int64 lineNumber)</div><div class="ttdoc">Constructor with exception information. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:271</div></div>
<div class="ttc" id="a00190_xhtml"><div class="ttname"><a href="a00190.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a00109_xhtml_a7c95da2a2f9b2d285bcce8c7767ee075"><div class="ttname"><a href="a00109.xhtml#a7c95da2a2f9b2d285bcce8c7767ee075">Safir::Dob::Typesystem::NullException::NullException</a></div><div class="ttdeci">NullException(const std::wstring &amp;message, const std::wstring &amp;fileName, const Dob::Typesystem::Int64 lineNumber)</div><div class="ttdoc">Constructor with exception information. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:411</div></div>
<div class="ttc" id="a00109_xhtml_a3b5b4b14783b5932431e076266ba8420"><div class="ttname"><a href="a00109.xhtml#a3b5b4b14783b5932431e076266ba8420">Safir::Dob::Typesystem::NullException::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:423</div></div>
<div class="ttc" id="a00079_xhtml_a6f08db4b86b8bb49a4e2924de9534f69"><div class="ttname"><a href="a00079.xhtml#a6f08db4b86b8bb49a4e2924de9534f69">Safir::Dob::Typesystem::Exception::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:248</div></div>
<div class="ttc" id="a00020_xhtml_a0c0a3e4239873d269b94a4b8f7269b8e"><div class="ttname"><a href="a00020.xhtml#a0c0a3e4239873d269b94a4b8f7269b8e">Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetFileName</a></div><div class="ttdeci">const std::wstring &amp; GetFileName() const </div><div class="ttdoc">Get the name of the file where the exception occurred. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:126</div></div>
<div class="ttc" id="a00087_xhtml_a1aeddd6e28e2eb818680fae309b04af9"><div class="ttname"><a href="a00087.xhtml#a1aeddd6e28e2eb818680fae309b04af9">Safir::Dob::Typesystem::IncompatibleTypesException::GetName</a></div><div class="ttdeci">const std::wstring GetName() const </div><div class="ttdoc">Get the exception name. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:312</div></div>
<div class="ttc" id="a00159_xhtml_a8d619a5818b92818ca09ad4785da19b5"><div class="ttname"><a href="a00159.xhtml#a8d619a5818b92818ca09ad4785da19b5">Safir::Dob::Typesystem::SoftwareViolationException::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:389</div></div>
<div class="ttc" id="a00136_xhtml_ae8be7ebb3d6f74ee09eabb371193c86b"><div class="ttname"><a href="a00136.xhtml#ae8be7ebb3d6f74ee09eabb371193c86b">Safir::Dob::Typesystem::ReadOnlyException::ReadOnlyException</a></div><div class="ttdeci">ReadOnlyException(const std::wstring &amp;message, const std::wstring &amp;fileName, const Dob::Typesystem::Int64 lineNumber)</div><div class="ttdoc">Constructor with exception information. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:447</div></div>
<div class="ttc" id="a00022_xhtml_a076ee55a72986f1db68960519927fc2a"><div class="ttname"><a href="a00022.xhtml#a076ee55a72986f1db68960519927fc2a">Safir::Dob::Typesystem::ConfigurationErrorException::ConfigurationErrorException</a></div><div class="ttdeci">ConfigurationErrorException(const std::wstring &amp;message, const std::wstring &amp;fileName, const Dob::Typesystem::Int64 lineNumber)</div><div class="ttdoc">Constructor with exception information. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:341</div></div>
<div class="ttc" id="a00086_xhtml"><div class="ttname"><a href="a00086.xhtml">Safir::Dob::Typesystem::IllegalValueException</a></div><div class="ttdoc">A parameter in the call was invalid. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:255</div></div>
<div class="ttc" id="a00022_xhtml_a47fd62b66e062a9c5e256581dc65bf80"><div class="ttname"><a href="a00022.xhtml#a47fd62b66e062a9c5e256581dc65bf80">Safir::Dob::Typesystem::ConfigurationErrorException::GetName</a></div><div class="ttdeci">const std::wstring GetName() const </div><div class="ttdoc">Get the exception name. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:347</div></div>
<div class="ttc" id="a00159_xhtml_a2bc6513b7cb3aa2b0084af535f42c20c"><div class="ttname"><a href="a00159.xhtml#a2bc6513b7cb3aa2b0084af535f42c20c">Safir::Dob::Typesystem::SoftwareViolationException::GetName</a></div><div class="ttdeci">const std::wstring GetName() const </div><div class="ttdoc">Get the exception name. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:383</div></div>
<div class="ttc" id="a00136_xhtml"><div class="ttname"><a href="a00136.xhtml">Safir::Dob::Typesystem::ReadOnlyException</a></div><div class="ttdoc">Used when someone tries to set a property that is mapped to something that cannot be changed...</div><div class="ttdef"><b>Definition:</b> Exceptions.h:431</div></div>
<div class="ttc" id="a00326_xhtml_a4072b311dc5af208a3fe1134ab67c911"><div class="ttname"><a href="a00326.xhtml#a4072b311dc5af208a3fe1134ab67c911">Safir::Dob::Typesystem::Members::GetName</a></div><div class="ttdeci">DOTS_CPP_API std::wstring GetName(const Dob::Typesystem::TypeId typeId, const Dob::Typesystem::MemberIndex member)</div><div class="ttdoc">Get the name of the specified member as it was defined in the xml description. </div></div>
<div class="ttc" id="a00022_xhtml_a2b817c8b73790df9fd9c6a0ad6515403"><div class="ttname"><a href="a00022.xhtml#a2b817c8b73790df9fd9c6a0ad6515403">Safir::Dob::Typesystem::ConfigurationErrorException::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:353</div></div>
<div class="ttc" id="a00082_xhtml_ad0d89087eb551de87385a58d24d65201"><div class="ttname"><a href="a00082.xhtml#ad0d89087eb551de87385a58d24d65201">Safir::Dob::Typesystem::FundamentalException::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:215</div></div>
<div class="ttc" id="a00087_xhtml_acda9244c3e5bb0c655a6e63297187fa0"><div class="ttname"><a href="a00087.xhtml#acda9244c3e5bb0c655a6e63297187fa0">Safir::Dob::Typesystem::IncompatibleTypesException::IncompatibleTypesException</a></div><div class="ttdeci">IncompatibleTypesException(const std::wstring &amp;message, const std::wstring &amp;fileName, const Dob::Typesystem::Int64 lineNumber)</div><div class="ttdoc">Constructor with exception information. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:306</div></div>
<div class="ttc" id="a00324_xhtml_add598341f70c143ad35a701a65884214"><div class="ttname"><a href="a00324.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a></div><div class="ttdeci">DotsC_TypeId TypeId</div><div class="ttdoc">A unique type identifier. </div><div class="ttdef"><b>Definition:</b> Defs.h:218</div></div>
<div class="ttc" id="a00079_xhtml"><div class="ttname"><a href="a00079.xhtml">Safir::Dob::Typesystem::Exception</a></div><div class="ttdoc">This is the base class of all (non-Fundamental) Exceptions. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:224</div></div>
<div class="ttc" id="a00020_xhtml_a8b486a052d06e3e4fa52d2db34f7c689"><div class="ttname"><a href="a00020.xhtml#a8b486a052d06e3e4fa52d2db34f7c689">Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetMessage</a></div><div class="ttdeci">const std::wstring &amp; GetMessage() const </div><div class="ttdoc">Get the message about why the exception occurred. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:112</div></div>
<div class="ttc" id="a00020_xhtml_adfeeee0b5e6627634a54de151f5ad072"><div class="ttname"><a href="a00020.xhtml#adfeeee0b5e6627634a54de151f5ad072">Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetLineNumber</a></div><div class="ttdeci">const Dob::Typesystem::Int64 GetLineNumber() const </div><div class="ttdoc">Get the line number that the exception occurred on. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:133</div></div>
<div class="ttc" id="a00190_xhtml_a75f4ad2b9223b1c7783ec9303a67ec6e"><div class="ttname"><a href="a00190.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a></div><div class="ttdeci">#define DOTS_CPP_API</div><div class="ttdef"><b>Definition:</b> Defs.h:33</div></div>
<div class="ttc" id="a00136_xhtml_ac29dba845d3ed08dced8c6b41e298000"><div class="ttname"><a href="a00136.xhtml#ac29dba845d3ed08dced8c6b41e298000">Safir::Dob::Typesystem::ReadOnlyException::GetName</a></div><div class="ttdeci">const std::wstring GetName() const </div><div class="ttdoc">Get the exception name. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:453</div></div>
<div class="ttc" id="a00087_xhtml"><div class="ttname"><a href="a00087.xhtml">Safir::Dob::Typesystem::IncompatibleTypesException</a></div><div class="ttdoc">This exception is thrown if a class cannot be cast to the expected type. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:290</div></div>
<div class="ttc" id="a00109_xhtml"><div class="ttname"><a href="a00109.xhtml">Safir::Dob::Typesystem::NullException</a></div><div class="ttdoc">Thrown when an application attempts to get the value of a member that is null. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:395</div></div>
<div class="ttc" id="a00326_xhtml_aef42299b0702e8f4edcab47112786a00"><div class="ttname"><a href="a00326.xhtml#aef42299b0702e8f4edcab47112786a00">Safir::Dob::Typesystem::Members::GetTypeId</a></div><div class="ttdeci">DOTS_CPP_API Dob::Typesystem::TypeId GetTypeId(const Dob::Typesystem::TypeId typeId, const Dob::Typesystem::MemberIndex member)</div><div class="ttdoc">Get type id of object or enumeration member. </div></div>
<div class="ttc" id="a00159_xhtml"><div class="ttname"><a href="a00159.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:361</div></div>
<div class="ttc" id="a00136_xhtml_a14f987ca3c2d06fc150704ad90e43cbd"><div class="ttname"><a href="a00136.xhtml#a14f987ca3c2d06fc150704ad90e43cbd">Safir::Dob::Typesystem::ReadOnlyException::GetTypeId</a></div><div class="ttdeci">virtual TypeId GetTypeId() const </div><div class="ttdoc">Get the type id of this exception. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:459</div></div>
<div class="ttc" id="a00022_xhtml"><div class="ttname"><a href="a00022.xhtml">Safir::Dob::Typesystem::ConfigurationErrorException</a></div><div class="ttdoc">Used when there is an error that implies that there is something wrong in the configuration. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:325</div></div>
<div class="ttc" id="a00082_xhtml"><div class="ttname"><a href="a00082.xhtml">Safir::Dob::Typesystem::FundamentalException</a></div><div class="ttdoc">This is the base class of all Fundamental Exceptions. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:191</div></div>
<div class="ttc" id="a00317_xhtml"><div class="ttname"><a href="a00317.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00222.xhtml">Exceptions.h</a></li>
    <li class="footer">Generated on Sat Apr 30 2016 20:20:01 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
