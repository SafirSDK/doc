<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Safir SDK Core: Safir::Databases::Odbc::Statement Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00161.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="a00584.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Databases::Odbc::Statement Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="a00161.xhtml" title="The Statement class models a statement made to the database engine and one statement object should be...">Statement</a> class models a statement made to the database engine and one statement object should be made for each statement or query to the database.  
 <a href="a00161.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00196_source.xhtml">Safir/Databases/Odbc/Statement.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Databases::Odbc::Statement:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00585.svg" width="170" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Databases::Odbc::Statement:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00586.svg" width="170" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab49e80acab4499d533e47e7906e4b528"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#ab49e80acab4499d533e47e7906e4b528">Statement</a> ()</td></tr>
<tr class="memdesc:ab49e80acab4499d533e47e7906e4b528"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#ab49e80acab4499d533e47e7906e4b528">More...</a><br /></td></tr>
<tr class="separator:ab49e80acab4499d533e47e7906e4b528"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bce360d6b9adcb3458ed42f41bdc702"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a9bce360d6b9adcb3458ed42f41bdc702">~Statement</a> ()</td></tr>
<tr class="memdesc:a9bce360d6b9adcb3458ed42f41bdc702"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a9bce360d6b9adcb3458ed42f41bdc702">More...</a><br /></td></tr>
<tr class="separator:a9bce360d6b9adcb3458ed42f41bdc702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea0ea8941717716540115e36500580e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a3ea0ea8941717716540115e36500580e">Alloc</a> (<a class="el" href="a00023.xhtml">Connection</a> &amp;pConnection)</td></tr>
<tr class="memdesc:a3ea0ea8941717716540115e36500580e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates a new statement in a connection.  <a href="#a3ea0ea8941717716540115e36500580e">More...</a><br /></td></tr>
<tr class="separator:a3ea0ea8941717716540115e36500580e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72738ba6dc95901633078df3a571af9b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a72738ba6dc95901633078df3a571af9b">Free</a> ()</td></tr>
<tr class="memdesc:a72738ba6dc95901633078df3a571af9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees the statement previously allocated to the database.  <a href="#a72738ba6dc95901633078df3a571af9b">More...</a><br /></td></tr>
<tr class="separator:a72738ba6dc95901633078df3a571af9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19b1545da517f816aa17f5d62605ebb8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a19b1545da517f816aa17f5d62605ebb8">CloseCursor</a> ()</td></tr>
<tr class="memdesc:a19b1545da517f816aa17f5d62605ebb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes a recordset returned by an <a class="el" href="a00161.xhtml#a9e5316a0cd1a33dfaee541a9eec0d535" title="Executes an already prepared statement. ">Execute()</a> or <a class="el" href="a00161.xhtml#a49c9233b9657c54d9225fe3e45ba15ca" title="Prepares and executes an statement. ">ExecDirect()</a>.  <a href="#a19b1545da517f816aa17f5d62605ebb8">More...</a><br /></td></tr>
<tr class="separator:a19b1545da517f816aa17f5d62605ebb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e5316a0cd1a33dfaee541a9eec0d535"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a9e5316a0cd1a33dfaee541a9eec0d535">Execute</a> ()</td></tr>
<tr class="memdesc:a9e5316a0cd1a33dfaee541a9eec0d535"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes an already prepared statement.  <a href="#a9e5316a0cd1a33dfaee541a9eec0d535">More...</a><br /></td></tr>
<tr class="separator:a9e5316a0cd1a33dfaee541a9eec0d535"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd35bb193ce66815d23a3db459d94433"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#afd35bb193ce66815d23a3db459d94433">Prepare</a> (const std::wstring &amp;wszSqlCommand)</td></tr>
<tr class="memdesc:afd35bb193ce66815d23a3db459d94433"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares a statement for later execution.  <a href="#afd35bb193ce66815d23a3db459d94433">More...</a><br /></td></tr>
<tr class="separator:afd35bb193ce66815d23a3db459d94433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49c9233b9657c54d9225fe3e45ba15ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a49c9233b9657c54d9225fe3e45ba15ca">ExecDirect</a> (const std::wstring &amp;wszSqlCommand)</td></tr>
<tr class="memdesc:a49c9233b9657c54d9225fe3e45ba15ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares and executes an statement.  <a href="#a49c9233b9657c54d9225fe3e45ba15ca">More...</a><br /></td></tr>
<tr class="separator:a49c9233b9657c54d9225fe3e45ba15ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affd0b4c012986f64e23ee6bb92670b5a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#affd0b4c012986f64e23ee6bb92670b5a">Fetch</a> ()</td></tr>
<tr class="memdesc:affd0b4c012986f64e23ee6bb92670b5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads one row in an recordset into the columns bound to this query.  <a href="#affd0b4c012986f64e23ee6bb92670b5a">More...</a><br /></td></tr>
<tr class="separator:affd0b4c012986f64e23ee6bb92670b5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e41f384cd26177c18cd79c6d93866cb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a3e41f384cd26177c18cd79c6d93866cb">MoreResults</a> ()</td></tr>
<tr class="memdesc:a3e41f384cd26177c18cd79c6d93866cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves more results (resultsets or parameters) from the database.  <a href="#a3e41f384cd26177c18cd79c6d93866cb">More...</a><br /></td></tr>
<tr class="separator:a3e41f384cd26177c18cd79c6d93866cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dda3756276025b7f18f56f0b330a4ea"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a6dda3756276025b7f18f56f0b330a4ea">GetNumberOfColumns</a> () const </td></tr>
<tr class="memdesc:a6dda3756276025b7f18f56f0b330a4ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of columns generated from a query.  <a href="#a6dda3756276025b7f18f56f0b330a4ea">More...</a><br /></td></tr>
<tr class="separator:a6dda3756276025b7f18f56f0b330a4ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac05c8996478fd0428285107c3bd4926"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#aac05c8996478fd0428285107c3bd4926">SetStmtAttr</a> (long lAttribute, long lValue)</td></tr>
<tr class="memdesc:aac05c8996478fd0428285107c3bd4926"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a value for a ODBC statement attribute.  <a href="#aac05c8996478fd0428285107c3bd4926">More...</a><br /></td></tr>
<tr class="separator:aac05c8996478fd0428285107c3bd4926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cdfb4f6d623475c93e6d80cec81d7c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a2cdfb4f6d623475c93e6d80cec81d7c2">SetStmtAttr</a> (long lAttribute, const std::wstring &amp;wszValue)</td></tr>
<tr class="memdesc:a2cdfb4f6d623475c93e6d80cec81d7c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a value for a ODBC statement attribute.  <a href="#a2cdfb4f6d623475c93e6d80cec81d7c2">More...</a><br /></td></tr>
<tr class="separator:a2cdfb4f6d623475c93e6d80cec81d7c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e939525e4bf540b2af10d2cb16bfe0b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a9e939525e4bf540b2af10d2cb16bfe0b">GetStmtAttr</a> (long lAttribute, long &amp;lValue) const </td></tr>
<tr class="memdesc:a9e939525e4bf540b2af10d2cb16bfe0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value for a ODBC statement attribute.  <a href="#a9e939525e4bf540b2af10d2cb16bfe0b">More...</a><br /></td></tr>
<tr class="separator:a9e939525e4bf540b2af10d2cb16bfe0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7a962aa60879694bdab5ea1d3ae74de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#aa7a962aa60879694bdab5ea1d3ae74de">GetStmtAttr</a> (long lAttribute, wchar_t *wszValue, unsigned long ulLength) const </td></tr>
<tr class="memdesc:aa7a962aa60879694bdab5ea1d3ae74de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value for a ODBC statement attribute.  <a href="#aa7a962aa60879694bdab5ea1d3ae74de">More...</a><br /></td></tr>
<tr class="separator:aa7a962aa60879694bdab5ea1d3ae74de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8da4b39816ab109e782f51f004d9bd8a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a8da4b39816ab109e782f51f004d9bd8a">ParamData</a> (unsigned short &amp;lParameter) const </td></tr>
<tr class="memdesc:a8da4b39816ab109e782f51f004d9bd8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes <a class="el" href="a00161.xhtml#a6195945181f5002d7a0da5942110672b" title="Put data into a parameter. ">PutData()</a> to add data to next parameter.  <a href="#a8da4b39816ab109e782f51f004d9bd8a">More...</a><br /></td></tr>
<tr class="separator:a8da4b39816ab109e782f51f004d9bd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80498e2e62d8c7bf5983100beb7bf14f"><td class="memTemplParams" colspan="2">template&lt;short sCType, short sSqlType, class Type , short sInputOutputType, unsigned long lColumnSize&gt; </td></tr>
<tr class="memitem:a80498e2e62d8c7bf5983100beb7bf14f"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a80498e2e62d8c7bf5983100beb7bf14f">BindParameter</a> (unsigned short usParameterNumber, Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;param)</td></tr>
<tr class="memdesc:a80498e2e62d8c7bf5983100beb7bf14f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds a parameter to a statement.  <a href="#a80498e2e62d8c7bf5983100beb7bf14f">More...</a><br /></td></tr>
<tr class="separator:a80498e2e62d8c7bf5983100beb7bf14f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05731dc5ed19a3eb4d2c1f267d6bb092"><td class="memTemplParams" colspan="2">template&lt;short sSqlType, short sInputOutputType&gt; </td></tr>
<tr class="memitem:a05731dc5ed19a3eb4d2c1f267d6bb092"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a05731dc5ed19a3eb4d2c1f267d6bb092">BindParameter</a> (unsigned short usParameterNumber, Internal::NonBufferedWideStringParameter&lt; sSqlType, sInputOutputType &gt; &amp;param)</td></tr>
<tr class="separator:a05731dc5ed19a3eb4d2c1f267d6bb092"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d81aab962b1c84fcec0d420ca009e54"><td class="memTemplParams" colspan="2">template&lt;short sCType, short sSqlType, class Type , short sInputOutputType, unsigned long lColumnSize&gt; </td></tr>
<tr class="memitem:a5d81aab962b1c84fcec0d420ca009e54"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a5d81aab962b1c84fcec0d420ca009e54">BindLongParameter</a> (unsigned short usParameterNumber, Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;param)</td></tr>
<tr class="memdesc:a5d81aab962b1c84fcec0d420ca009e54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds a long parameter to a statement.  <a href="#a5d81aab962b1c84fcec0d420ca009e54">More...</a><br /></td></tr>
<tr class="separator:a5d81aab962b1c84fcec0d420ca009e54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a084ff1ca2c5033e440a4bf3ca15af65d"><td class="memTemplParams" colspan="2">template&lt;short sValueType, class Type &gt; </td></tr>
<tr class="memitem:a084ff1ca2c5033e440a4bf3ca15af65d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a084ff1ca2c5033e440a4bf3ca15af65d">BindColumn</a> (unsigned short usColumnNumber, Internal::Column&lt; sValueType, Type &gt; &amp;column)</td></tr>
<tr class="memdesc:a084ff1ca2c5033e440a4bf3ca15af65d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds a column to a statement.  <a href="#a084ff1ca2c5033e440a4bf3ca15af65d">More...</a><br /></td></tr>
<tr class="separator:a084ff1ca2c5033e440a4bf3ca15af65d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d6ffee4d4cdc80513813e54b805a3d0"><td class="memTemplParams" colspan="2">template&lt;short sValueType, class Type &gt; </td></tr>
<tr class="memitem:a5d6ffee4d4cdc80513813e54b805a3d0"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a5d6ffee4d4cdc80513813e54b805a3d0">GetData</a> (unsigned short usColumnNumber, Internal::Column&lt; sValueType, Type &gt; &amp;column)</td></tr>
<tr class="memdesc:a5d6ffee4d4cdc80513813e54b805a3d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get data from a column.  <a href="#a5d6ffee4d4cdc80513813e54b805a3d0">More...</a><br /></td></tr>
<tr class="separator:a5d6ffee4d4cdc80513813e54b805a3d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6195945181f5002d7a0da5942110672b"><td class="memTemplParams" colspan="2">template&lt;short sCType, short sSqlType, class Type , short sInputOutputType, unsigned long lColumnSize&gt; </td></tr>
<tr class="memitem:a6195945181f5002d7a0da5942110672b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a6195945181f5002d7a0da5942110672b">PutData</a> (Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;param)</td></tr>
<tr class="memdesc:a6195945181f5002d7a0da5942110672b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put data into a parameter.  <a href="#a6195945181f5002d7a0da5942110672b">More...</a><br /></td></tr>
<tr class="separator:a6195945181f5002d7a0da5942110672b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a556d85aaa8bf04d2e96db41de2e46e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#a6a556d85aaa8bf04d2e96db41de2e46e">GetDiagRec</a> (short sRecNumber, std::wstring &amp;SqlState, boost::int32_t &amp;NativeError, std::wstring &amp;MessageText, bool &amp;bDataRead) const </td></tr>
<tr class="memdesc:a6a556d85aaa8bf04d2e96db41de2e46e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a diagnostics record.  <a href="#a6a556d85aaa8bf04d2e96db41de2e46e">More...</a><br /></td></tr>
<tr class="separator:a6a556d85aaa8bf04d2e96db41de2e46e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5351d140ccdf7f1e537a5a2a1f4061"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#abd5351d140ccdf7f1e537a5a2a1f4061">IsValid</a> () const </td></tr>
<tr class="memdesc:abd5351d140ccdf7f1e537a5a2a1f4061"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if this statement is a valid allocated statement.  <a href="#abd5351d140ccdf7f1e537a5a2a1f4061">More...</a><br /></td></tr>
<tr class="separator:abd5351d140ccdf7f1e537a5a2a1f4061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab173576dd678005c2713d817b0e6d7ed"><td class="memItemLeft" align="right" valign="top">SQLHDBC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#ab173576dd678005c2713d817b0e6d7ed">Handle</a> () const </td></tr>
<tr class="memdesc:ab173576dd678005c2713d817b0e6d7ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the ODBC Handle of the statement.  <a href="#ab173576dd678005c2713d817b0e6d7ed">More...</a><br /></td></tr>
<tr class="separator:ab173576dd678005c2713d817b0e6d7ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:afa87764833ef1f53fd7dd6f69f8c60a3"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00161.xhtml#afa87764833ef1f53fd7dd6f69f8c60a3">Safir::Databases::Odbc::Connection</a></td></tr>
<tr class="separator:afa87764833ef1f53fd7dd6f69f8c60a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="a00161.xhtml" title="The Statement class models a statement made to the database engine and one statement object should be...">Statement</a> class models a statement made to the database engine and one statement object should be made for each statement or query to the database. </p>
<p>All statements needs to be Allocated and Deallocated at connect and disconnect.</p>
<dl class="deprecated"><dt><b><a class="el" href="a00001.xhtml#_deprecated000004">Deprecated:</a></b></dt><dd>All functionality in the <a class="el" href="a00321.xhtml" title="This namespace contains ODBC database support for Safir SDK Core. ">Safir::Databases::Odbc</a> namespace is deprecated. </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab49e80acab4499d533e47e7906e4b528"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Databases::Odbc::Statement::Statement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a class="anchor" id="a9bce360d6b9adcb3458ed42f41bdc702"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Databases::Odbc::Statement::~Statement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3ea0ea8941717716540115e36500580e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::Alloc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00023.xhtml">Connection</a> &amp;&#160;</td>
          <td class="paramname"><em>pConnection</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocates a new statement in a connection. </p>
<p>See SQLAllocHandle in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pConnection</td><td>- the connection the statement is made through. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLAllocHandle failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a084ff1ca2c5033e440a4bf3ca15af65d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;short sValueType, class Type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::BindColumn </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>usColumnNumber</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Internal::Column&lt; sValueType, Type &gt; &amp;&#160;</td>
          <td class="paramname"><em>column</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Binds a column to a statement. </p>
<p>Columns are unbound when connection is disconnected. See SQLBindColumn in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">usColumnNumber</td><td>- the position of this column as returned by the query. Starts at 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">column</td><td>- an instance of the column class. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- The operation cannot succeed without reconnecting to the RDBMS </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00023.xhtml#a6095ae32fde6921f0ec6a4f0698245d6">Safir::Databases::Odbc::Connection::IsValid()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00161_a084ff1ca2c5033e440a4bf3ca15af65d_cgraph.svg" width="387" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a5d81aab962b1c84fcec0d420ca009e54"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;short sCType, short sSqlType, class Type , short sInputOutputType, unsigned long lColumnSize&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::BindLongParameter </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>usParameterNumber</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Binds a long parameter to a statement. </p>
<p>Parameters are unbound when connection is disconnected. See SQLBindParameter in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">usParameterNumber</td><td>- the position of this parameter in the parameter list. Starts at 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>- an instance of the parameter class. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- The operation cannot succeed without reconnecting to the RDBMS </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00023.xhtml#a6095ae32fde6921f0ec6a4f0698245d6">Safir::Databases::Odbc::Connection::IsValid()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00161_a5d81aab962b1c84fcec0d420ca009e54_cgraph.svg" width="430" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a80498e2e62d8c7bf5983100beb7bf14f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;short sCType, short sSqlType, class Type , short sInputOutputType, unsigned long lColumnSize&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::BindParameter </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>usParameterNumber</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Binds a parameter to a statement. </p>
<p>Parameters are unbound when connection is disconnected. See SQLBindParameter in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">usParameterNumber</td><td>- the position of this parameter in the parameter list. Starts at 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>- an instance of the parameter class. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- The operation cannot succeed without reconnecting to the RDBMS </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00023.xhtml#a6095ae32fde6921f0ec6a4f0698245d6">Safir::Databases::Odbc::Connection::IsValid()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00161_a80498e2e62d8c7bf5983100beb7bf14f_cgraph.svg" width="402" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a05731dc5ed19a3eb4d2c1f267d6bb092"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;short sSqlType, short sInputOutputType&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::BindParameter </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>usParameterNumber</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Internal::NonBufferedWideStringParameter&lt; sSqlType, sInputOutputType &gt; &amp;&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>.</p>

</div>
</div>
<a class="anchor" id="a19b1545da517f816aa17f5d62605ebb8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::CloseCursor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Closes a recordset returned by an <a class="el" href="a00161.xhtml#a9e5316a0cd1a33dfaee541a9eec0d535" title="Executes an already prepared statement. ">Execute()</a> or <a class="el" href="a00161.xhtml#a49c9233b9657c54d9225fe3e45ba15ca" title="Prepares and executes an statement. ">ExecDirect()</a>. </p>
<p>See SQLCloseCursor in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLCloseCursor failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a49c9233b9657c54d9225fe3e45ba15ca"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::ExecDirect </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>wszSqlCommand</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prepares and executes an statement. </p>
<p>See SQLExecDirect in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wszSqlCommand</td><td>- the sql query this statement shall execute. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLExecDirect failed. Check GetDiagRec for info. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00170.xhtml" title="The operation took longer then the specified timeout time to execute. ">TimeoutException</a></td><td>- Timeout has occurred. Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e5316a0cd1a33dfaee541a9eec0d535"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::Execute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Executes an already prepared statement. </p>
<p>See SQLExecute in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00094.xhtml" title="The odbc operation caused a violation of a constraint in the database. ">IntegrityConstraintException</a></td><td>- The query violated the integrity constraints of the database. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLExecute failed. Check GetDiagRec for info. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00170.xhtml" title="The operation took longer then the specified timeout time to execute. ">TimeoutException</a></td><td>- Timeout has occurred. Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="affd0b4c012986f64e23ee6bb92670b5a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Statement::Fetch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads one row in an recordset into the columns bound to this query. </p>
<p>See SQLFetch in ODBC documentation for more info.</p>
<dl class="section return"><dt>Returns</dt><dd>True if data was returned. False if at end of the recordset. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLFetch failed. Check GetDiagRec for info. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00170.xhtml" title="The operation took longer then the specified timeout time to execute. ">TimeoutException</a></td><td>- Timeout has occurred. Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a72738ba6dc95901633078df3a571af9b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::Free </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Frees the statement previously allocated to the database. </p>
<p>Statements are freed automatically when disconnected. See SQLFreeHandle in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLFreeHandle failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5d6ffee4d4cdc80513813e54b805a3d0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;short sValueType, class Type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Statement::GetData </td>
          <td>(</td>
          <td class="paramtype">unsigned short&#160;</td>
          <td class="paramname"><em>usColumnNumber</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Internal::Column&lt; sValueType, Type &gt; &amp;&#160;</td>
          <td class="paramname"><em>column</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get data from a column. </p>
<p>See SQLGetData in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">usColumnNumber</td><td>- the position of this column as returned by the query. Starts at 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">column</td><td>- an instance of the column class. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if data was returned. False if at end of the recordset. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- The operation cannot succeed without reconnecting to the RDBMS </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00023.xhtml#a6095ae32fde6921f0ec6a4f0698245d6">Safir::Databases::Odbc::Connection::IsValid()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00161_a5d6ffee4d4cdc80513813e54b805a3d0_cgraph.svg" width="376" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a6a556d85aaa8bf04d2e96db41de2e46e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Statement::GetDiagRec </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>sRecNumber</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::wstring &amp;&#160;</td>
          <td class="paramname"><em>SqlState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">boost::int32_t &amp;&#160;</td>
          <td class="paramname"><em>NativeError</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::wstring &amp;&#160;</td>
          <td class="paramname"><em>MessageText</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>bDataRead</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a diagnostics record. </p>
<p>See SQLGetDiagRec in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sRecNumber</td><td>- The sql error record. Starts at 1. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">SqlState</td><td>- The five char sql state error code. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">NativeError</td><td>- Driver specific error code. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">MessageText</td><td>- The diagnostic message text string. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">bDataRead</td><td>- true if data has been placed in the buffers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6dda3756276025b7f18f56f0b330a4ea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int Safir::Databases::Odbc::Statement::GetNumberOfColumns </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of columns generated from a query. </p>
<p>Call this method after a successful call to execute. See SQLNumResultCols in ODBC documentation for more info.</p>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of columns generated by last statement. Returns 0 if no columns were generated. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLNumResultCols failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e939525e4bf540b2af10d2cb16bfe0b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::GetStmtAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long &amp;&#160;</td>
          <td class="paramname"><em>lValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a value for a ODBC statement attribute. </p>
<p>See SQLGetStmtAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">lValue</td><td>- The value of the attribute </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLGetStmtAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa7a962aa60879694bdab5ea1d3ae74de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::GetStmtAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *&#160;</td>
          <td class="paramname"><em>wszValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>ulLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a value for a ODBC statement attribute. </p>
<p>See SQLGetStmtAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">wszValue</td><td>- The value of the attribute </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ulLength</td><td>- Size in bytes of the szValue buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLGetStmtAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab173576dd678005c2713d817b0e6d7ed"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SQLHDBC Safir::Databases::Odbc::Statement::Handle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the ODBC Handle of the statement. </p>
<dl class="section return"><dt>Returns</dt><dd>An ODBC statement handle. </dd></dl>

</div>
</div>
<a class="anchor" id="abd5351d140ccdf7f1e537a5a2a1f4061"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Statement::IsValid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if this statement is a valid allocated statement. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the statement is ok to use. </dd></dl>

</div>
</div>
<a class="anchor" id="a3e41f384cd26177c18cd79c6d93866cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Statement::MoreResults </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves more results (resultsets or parameters) from the database. </p>
<p>See SQLMoreResults in ODBC documentation for more info.</p>
<dl class="section return"><dt>Returns</dt><dd>True if more result sets exists. False if all result sets have been processed. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLMoreResults failed. Check GetDiagRec for info. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8da4b39816ab109e782f51f004d9bd8a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Statement::ParamData </td>
          <td>(</td>
          <td class="paramtype">unsigned short &amp;&#160;</td>
          <td class="paramname"><em>lParameter</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Changes <a class="el" href="a00161.xhtml#a6195945181f5002d7a0da5942110672b" title="Put data into a parameter. ">PutData()</a> to add data to next parameter. </p>
<p>See SQLParamData in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">lParameter</td><td>- The next parameter that need data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if more parameters needed data otherwise False; </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLParamData failed. Check GetDiagRec for info. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afd35bb193ce66815d23a3db459d94433"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::Prepare </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>wszSqlCommand</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prepares a statement for later execution. </p>
<p>See SQLPrepare in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wszSqlCommand</td><td>- the sql query this statement shall execute. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLPrepare failed. Check GetDiagRec for info. </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6195945181f5002d7a0da5942110672b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;short sCType, short sSqlType, class Type , short sInputOutputType, unsigned long lColumnSize&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::PutData </td>
          <td>(</td>
          <td class="paramtype">Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;&#160;</td>
          <td class="paramname"><em>param</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Put data into a parameter. </p>
<p>See SQLPutData in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>- an instance of the parameter class. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- The operation cannot succeed without reconnecting to the RDBMS </td></tr>
    <tr><td class="paramname"><a class="el" href="a00148.xhtml" title="The operation failed try again. ">RetryException</a></td><td>- Retry the operation. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>, and <a class="el" href="a00023.xhtml#a6095ae32fde6921f0ec6a4f0698245d6">Safir::Databases::Odbc::Connection::IsValid()</a>.</p>

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00161_a6195945181f5002d7a0da5942110672b_cgraph.svg" width="376" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="aac05c8996478fd0428285107c3bd4926"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::SetStmtAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets a value for a ODBC statement attribute. </p>
<p>See SQLSetStmtAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lValue</td><td>- The value of the attribute to be set </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLSetStmtAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2cdfb4f6d623475c93e6d80cec81d7c2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Statement::SetStmtAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>wszValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets a value for a ODBC statement attribute. </p>
<p>See SQLSetStmtAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wszValue</td><td>- The value of the attribute to be set </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a00137.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLSetStmtAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="afa87764833ef1f53fd7dd6f69f8c60a3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="a00023.xhtml">Safir::Databases::Odbc::Connection</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00317.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00320.xhtml">Databases</a></li><li class="navelem"><a class="el" href="a00321.xhtml">Odbc</a></li><li class="navelem"><a class="el" href="a00161.xhtml">Statement</a></li>
    <li class="footer">Generated on Sat Apr 30 2016 20:20:03 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
