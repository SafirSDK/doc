<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/DictionaryContainer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00219_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DictionaryContainer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00219.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2004-2015 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Joel Ottosson / joot</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more Internals.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00217.xhtml">Safir/Dob/Typesystem/ContainerBase.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00222.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;boost/shared_ptr.hpp&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00317.xhtml">Safir</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> KeyT, <span class="keyword">class</span> ValT&gt;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="a00047.xhtml">   46</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00047.xhtml">DictionaryContainer</a> : <span class="keyword">public</span> <a class="code" href="a00033.xhtml">ContainerBase</a></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="a00047.xhtml#a34226fabf12cd438e682bf529b88459c">   50</a></span>&#160;        <span class="keyword">typedef</span> KeyT <a class="code" href="a00047.xhtml#a34226fabf12cd438e682bf529b88459c">KeyType</a>;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="a00047.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">   51</a></span>&#160;        <span class="keyword">typedef</span> ValT <a class="code" href="a00047.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">ValueContainerType</a>;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="a00047.xhtml#a2f98bfdae8e0642ca9f5f73f09cb5d6a">   52</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> ValueContainerType::ContainedType <a class="code" href="a00047.xhtml#a2f98bfdae8e0642ca9f5f73f09cb5d6a">ContainedType</a>;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="a00047.xhtml#a1a6e01a2ebf8573d35edf988e136c39b">   53</a></span>&#160;        <span class="keyword">typedef</span> std::map&lt;KeyType, ValueContainerType&gt; <a class="code" href="a00047.xhtml#a1a6e01a2ebf8573d35edf988e136c39b">StorageType</a>;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="a00047.xhtml#ac3c43141d47c90ba2b527947fb625cb9">   54</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> StorageType::const_iterator <a class="code" href="a00047.xhtml#ac3c43141d47c90ba2b527947fb625cb9">const_iterator</a>;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="a00047.xhtml#a6dd25ce311736be91af9491ab099dd36">   55</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> StorageType::iterator <a class="code" href="a00047.xhtml#a6dd25ce311736be91af9491ab099dd36">iterator</a>;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="a00047.xhtml#af45825a3e244f8a854a95d8f104957e3">   56</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> StorageType::value_type <a class="code" href="a00047.xhtml#af45825a3e244f8a854a95d8f104957e3">value_type</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="a00047.xhtml#a0176c6935866a937d6ae74705ca48937">   63</a></span>&#160;        <a class="code" href="a00047.xhtml#a0176c6935866a937d6ae74705ca48937">DictionaryContainer</a>()</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            :<a class="code" href="a00033.xhtml">ContainerBase</a>()</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            ,m_values()</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a00047.xhtml#afb20c529d3cbc7f8eb25789c6a2bf179">   69</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00047.xhtml#afb20c529d3cbc7f8eb25789c6a2bf179">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <span class="keyword">false</span>;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="a00047.xhtml#a74117176273d7ec895c53e4e1fc95931">   71</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00047.xhtml#a74117176273d7ec895c53e4e1fc95931">SetNull</a>()</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="a00159.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;Dictionaries cannot be null&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="a00047.xhtml#a843692c26962643bab2edbb7689467b0">   76</a></span>&#160;        iterator <a class="code" href="a00047.xhtml#a843692c26962643bab2edbb7689467b0">begin</a>() {<span class="keywordflow">return</span> m_values.begin();}</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="a00047.xhtml#a459833d6c7839a0d198a4c002f16462a">   77</a></span>&#160;        const_iterator <a class="code" href="a00047.xhtml#a459833d6c7839a0d198a4c002f16462a">begin</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.begin();}</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="a00047.xhtml#ae7cadcf752710ca29fe05913df0bfc99">   79</a></span>&#160;        iterator <a class="code" href="a00047.xhtml#ae7cadcf752710ca29fe05913df0bfc99">end</a>() {<span class="keywordflow">return</span> m_values.end();}</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="a00047.xhtml#a5b9ec6ecfebdd6143305fc6cf8431f64">   80</a></span>&#160;        const_iterator <a class="code" href="a00047.xhtml#a5b9ec6ecfebdd6143305fc6cf8431f64">end</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.end();}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="a00047.xhtml#a48790ac76879a33d7865e19fa99399fc">   82</a></span>&#160;        iterator <a class="code" href="a00047.xhtml#a48790ac76879a33d7865e19fa99399fc">find</a>(<span class="keyword">const</span> KeyType&amp; key) {<span class="keywordflow">return</span> m_values.find(key);}</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="a00047.xhtml#a96d38a80932ad0a4031645b06acef5f4">   83</a></span>&#160;        const_iterator <a class="code" href="a00047.xhtml#a96d38a80932ad0a4031645b06acef5f4">find</a>(<span class="keyword">const</span> KeyType&amp; key)<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.find(key);}</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="a00047.xhtml#a8257413378f956b91c2fa7ba06d79354">   85</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="a00047.xhtml#a8257413378f956b91c2fa7ba06d79354">size</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.size();}</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="a00047.xhtml#acfb5cd061768acadcf12c685c4600808">   87</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00047.xhtml#acfb5cd061768acadcf12c685c4600808">empty</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.empty();}</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="a00047.xhtml#ae3d56a35f3cf22be970eacf18f477950">   89</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="a00047.xhtml#ae3d56a35f3cf22be970eacf18f477950">count</a>(<span class="keyword">const</span> KeyType&amp; key)<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.count(key);}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="a00047.xhtml#aa7d28ec05faebdb1248bfde3aed6aa27">   91</a></span>&#160;        ValueContainerType&amp; <a class="code" href="a00047.xhtml#aa7d28ec05faebdb1248bfde3aed6aa27">operator[]</a>(<span class="keyword">const</span> KeyType&amp; key)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            iterator it=m_values.find(key);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">if</span> (it!=m_values.end())</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">return</span> it-&gt;second;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                ValueContainerType&amp; ct=m_values[key];</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                ct.SetChanged(<span class="keyword">true</span>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">return</span> ct;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="a00047.xhtml#aa0f44a9d38e9596b9805523875c7b93c">  111</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00047.xhtml#aa0f44a9d38e9596b9805523875c7b93c">IsChanged</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>; <span class="comment">//top level change flag is set</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">for</span> (const_iterator it=m_values.begin(); it!=m_values.end(); ++it)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keywordflow">if</span> (it-&gt;second.IsChanged()) <span class="comment">//a value container has changed flag set</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">//if we get here nothing is changed</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="a00047.xhtml#a573bdcf1b991f969b31b5c24e923f9e7">  131</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00047.xhtml#a573bdcf1b991f969b31b5c24e923f9e7">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=changed;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">for</span> (iterator it=m_values.begin(); it!=m_values.end(); ++it)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                it-&gt;second.SetChanged(changed);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="a00047.xhtml#aa45150995bdee384da704907a621eba6">  144</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a00047.xhtml#aa45150995bdee384da704907a621eba6">clear</a>()</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            m_values.clear();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="a00047.xhtml#a02a5f3a9900d5cb325fe7a6c1c1d5773">  151</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a00047.xhtml#a02a5f3a9900d5cb325fe7a6c1c1d5773">Insert</a>(<span class="keyword">const</span> KeyType&amp; key, <span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            ValueContainerType container;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            InsertHelper&lt;ContainedType, ValueContainerType&gt;::SetVal(val, container);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            container.SetChanged(<span class="keyword">true</span>);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            m_values.insert(<a class="code" href="a00047.xhtml#af45825a3e244f8a854a95d8f104957e3">value_type</a>(key, container));</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="a00047.xhtml#a888c248295d49ffaf556fca21fd7536d">  160</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="a00047.xhtml#a888c248295d49ffaf556fca21fd7536d">erase</a>(<span class="keyword">const</span> KeyType&amp; key)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordtype">size_t</span> <a class="code" href="a00047.xhtml#ae3d56a35f3cf22be970eacf18f477950">count</a>=m_values.erase(key);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (count&gt;0)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="a00047.xhtml#ae3d56a35f3cf22be970eacf18f477950">count</a>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="a00047.xhtml#a47d1d5141efea99e85dc9ed11d28a108">  175</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00047.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Copy</a>(<span class="keyword">const</span> <a class="code" href="a00033.xhtml">ContainerBase</a>&amp; that)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;that)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="keywordflow">if</span> (<span class="keyword">typeid</span>(*<span class="keyword">this</span>) != <span class="keyword">typeid</span>(that))</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    <span class="keywordflow">throw</span> <a class="code" href="a00159.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;Invalid call to Copy, containers are not of same type&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="keyword">const</span> <a class="code" href="a00047.xhtml">DictionaryContainer&lt;KeyType, ValueContainerType&gt;</a>&amp; other=<span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00047.xhtml">DictionaryContainer&lt;KeyT, ValT&gt;</a>&amp; <span class="keyword">&gt;</span>(that);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <a class="code" href="a00047.xhtml#aa45150995bdee384da704907a621eba6">clear</a>();</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=other.<a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                <span class="keywordflow">for</span> (const_iterator it=other.<a class="code" href="a00047.xhtml#a843692c26962643bab2edbb7689467b0">begin</a>(); it!=other.<a class="code" href="a00047.xhtml#ae7cadcf752710ca29fe05913df0bfc99">end</a>(); ++it)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                    ValueContainerType val;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    val.Copy(it-&gt;second);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                    m_values.insert(std::make_pair(it-&gt;first, val));</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        std::map&lt;KeyT, ValT&gt; m_values;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> V, <span class="keyword">class</span> C&gt; <span class="keyword">struct </span>InsertHelper</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keyword">static</span> <span class="keywordtype">void</span> SetVal(<span class="keyword">const</span> V&amp; v, C&amp; c) {c.SetVal(v);}</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        };</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> V, <span class="keyword">class</span> C&gt; <span class="keyword">struct </span>InsertHelper&lt; boost::shared_ptr&lt;V&gt;, C &gt;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keyword">static</span> <span class="keywordtype">void</span> SetVal(<span class="keyword">const</span> boost::shared_ptr&lt;V&gt;&amp; v, C&amp; c) {c.SetPtr(v);}</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        };</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    };</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div><div class="ttc" id="a00217_xhtml"><div class="ttname"><a href="a00217.xhtml">ContainerBase.h</a></div></div>
<div class="ttc" id="a00033_xhtml"><div class="ttname"><a href="a00033.xhtml">Safir::Dob::Typesystem::ContainerBase</a></div><div class="ttdoc">Base class for all Containers. </div><div class="ttdef"><b>Definition:</b> ContainerBase.h:43</div></div>
<div class="ttc" id="a00047_xhtml_a48790ac76879a33d7865e19fa99399fc"><div class="ttname"><a href="a00047.xhtml#a48790ac76879a33d7865e19fa99399fc">Safir::Dob::Typesystem::DictionaryContainer::find</a></div><div class="ttdeci">iterator find(const KeyType &amp;key)</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:82</div></div>
<div class="ttc" id="a00222_xhtml"><div class="ttname"><a href="a00222.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a00047_xhtml_aa45150995bdee384da704907a621eba6"><div class="ttname"><a href="a00047.xhtml#aa45150995bdee384da704907a621eba6">Safir::Dob::Typesystem::DictionaryContainer::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">clear - Clear the sequence, i.e remove all values. </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:144</div></div>
<div class="ttc" id="a00047_xhtml_ae7cadcf752710ca29fe05913df0bfc99"><div class="ttname"><a href="a00047.xhtml#ae7cadcf752710ca29fe05913df0bfc99">Safir::Dob::Typesystem::DictionaryContainer::end</a></div><div class="ttdeci">iterator end()</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:79</div></div>
<div class="ttc" id="a00047_xhtml_a6dd25ce311736be91af9491ab099dd36"><div class="ttname"><a href="a00047.xhtml#a6dd25ce311736be91af9491ab099dd36">Safir::Dob::Typesystem::DictionaryContainer::iterator</a></div><div class="ttdeci">StorageType::iterator iterator</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:55</div></div>
<div class="ttc" id="a00047_xhtml_aa0f44a9d38e9596b9805523875c7b93c"><div class="ttname"><a href="a00047.xhtml#aa0f44a9d38e9596b9805523875c7b93c">Safir::Dob::Typesystem::DictionaryContainer::IsChanged</a></div><div class="ttdeci">virtual bool IsChanged() const </div><div class="ttdoc">IsChanged - Check if the sequence has changed. </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:111</div></div>
<div class="ttc" id="a00047_xhtml_a839ef3ba3ee1c10f0bffe1c5e364b9ee"><div class="ttname"><a href="a00047.xhtml#a839ef3ba3ee1c10f0bffe1c5e364b9ee">Safir::Dob::Typesystem::DictionaryContainer::ValueContainerType</a></div><div class="ttdeci">ValT ValueContainerType</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:51</div></div>
<div class="ttc" id="a00047_xhtml_a0176c6935866a937d6ae74705ca48937"><div class="ttname"><a href="a00047.xhtml#a0176c6935866a937d6ae74705ca48937">Safir::Dob::Typesystem::DictionaryContainer::DictionaryContainer</a></div><div class="ttdeci">DictionaryContainer()</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:63</div></div>
<div class="ttc" id="a00047_xhtml_aa7d28ec05faebdb1248bfde3aed6aa27"><div class="ttname"><a href="a00047.xhtml#aa7d28ec05faebdb1248bfde3aed6aa27">Safir::Dob::Typesystem::DictionaryContainer::operator[]</a></div><div class="ttdeci">ValueContainerType &amp; operator[](const KeyType &amp;key)</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:91</div></div>
<div class="ttc" id="a00047_xhtml_afb20c529d3cbc7f8eb25789c6a2bf179"><div class="ttname"><a href="a00047.xhtml#afb20c529d3cbc7f8eb25789c6a2bf179">Safir::Dob::Typesystem::DictionaryContainer::IsNull</a></div><div class="ttdeci">virtual bool IsNull() const </div><div class="ttdoc">Is the container set to null? </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:69</div></div>
<div class="ttc" id="a00047_xhtml_a47d1d5141efea99e85dc9ed11d28a108"><div class="ttname"><a href="a00047.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Safir::Dob::Typesystem::DictionaryContainer::Copy</a></div><div class="ttdeci">virtual void Copy(const ContainerBase &amp;that)</div><div class="ttdoc">Copy - Copy all the members from &quot;that&quot; into &quot;this&quot;. </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:175</div></div>
<div class="ttc" id="a00047_xhtml_af45825a3e244f8a854a95d8f104957e3"><div class="ttname"><a href="a00047.xhtml#af45825a3e244f8a854a95d8f104957e3">Safir::Dob::Typesystem::DictionaryContainer::value_type</a></div><div class="ttdeci">StorageType::value_type value_type</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:56</div></div>
<div class="ttc" id="a00047_xhtml_a1a6e01a2ebf8573d35edf988e136c39b"><div class="ttname"><a href="a00047.xhtml#a1a6e01a2ebf8573d35edf988e136c39b">Safir::Dob::Typesystem::DictionaryContainer::StorageType</a></div><div class="ttdeci">std::map&lt; KeyType, ValueContainerType &gt; StorageType</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:53</div></div>
<div class="ttc" id="a00047_xhtml_ae3d56a35f3cf22be970eacf18f477950"><div class="ttname"><a href="a00047.xhtml#ae3d56a35f3cf22be970eacf18f477950">Safir::Dob::Typesystem::DictionaryContainer::count</a></div><div class="ttdeci">size_t count(const KeyType &amp;key) const </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:89</div></div>
<div class="ttc" id="a00047_xhtml_a02a5f3a9900d5cb325fe7a6c1c1d5773"><div class="ttname"><a href="a00047.xhtml#a02a5f3a9900d5cb325fe7a6c1c1d5773">Safir::Dob::Typesystem::DictionaryContainer::Insert</a></div><div class="ttdeci">void Insert(const KeyType &amp;key, const ContainedType &amp;val)</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:151</div></div>
<div class="ttc" id="a00047_xhtml_a888c248295d49ffaf556fca21fd7536d"><div class="ttname"><a href="a00047.xhtml#a888c248295d49ffaf556fca21fd7536d">Safir::Dob::Typesystem::DictionaryContainer::erase</a></div><div class="ttdeci">size_t erase(const KeyType &amp;key)</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:160</div></div>
<div class="ttc" id="a00047_xhtml_a459833d6c7839a0d198a4c002f16462a"><div class="ttname"><a href="a00047.xhtml#a459833d6c7839a0d198a4c002f16462a">Safir::Dob::Typesystem::DictionaryContainer::begin</a></div><div class="ttdeci">const_iterator begin() const </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:77</div></div>
<div class="ttc" id="a00047_xhtml_acfb5cd061768acadcf12c685c4600808"><div class="ttname"><a href="a00047.xhtml#acfb5cd061768acadcf12c685c4600808">Safir::Dob::Typesystem::DictionaryContainer::empty</a></div><div class="ttdeci">bool empty() const </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:87</div></div>
<div class="ttc" id="a00047_xhtml_a2f98bfdae8e0642ca9f5f73f09cb5d6a"><div class="ttname"><a href="a00047.xhtml#a2f98bfdae8e0642ca9f5f73f09cb5d6a">Safir::Dob::Typesystem::DictionaryContainer::ContainedType</a></div><div class="ttdeci">ValueContainerType::ContainedType ContainedType</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:52</div></div>
<div class="ttc" id="a00047_xhtml_ac3c43141d47c90ba2b527947fb625cb9"><div class="ttname"><a href="a00047.xhtml#ac3c43141d47c90ba2b527947fb625cb9">Safir::Dob::Typesystem::DictionaryContainer::const_iterator</a></div><div class="ttdeci">StorageType::const_iterator const_iterator</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:54</div></div>
<div class="ttc" id="a00047_xhtml_a573bdcf1b991f969b31b5c24e923f9e7"><div class="ttname"><a href="a00047.xhtml#a573bdcf1b991f969b31b5c24e923f9e7">Safir::Dob::Typesystem::DictionaryContainer::SetChanged</a></div><div class="ttdeci">virtual void SetChanged(const bool changed)</div><div class="ttdoc">SetChanged - Set the change state of the sequence. </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:131</div></div>
<div class="ttc" id="a00047_xhtml_a96d38a80932ad0a4031645b06acef5f4"><div class="ttname"><a href="a00047.xhtml#a96d38a80932ad0a4031645b06acef5f4">Safir::Dob::Typesystem::DictionaryContainer::find</a></div><div class="ttdeci">const_iterator find(const KeyType &amp;key) const </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:83</div></div>
<div class="ttc" id="a00047_xhtml_a5b9ec6ecfebdd6143305fc6cf8431f64"><div class="ttname"><a href="a00047.xhtml#a5b9ec6ecfebdd6143305fc6cf8431f64">Safir::Dob::Typesystem::DictionaryContainer::end</a></div><div class="ttdeci">const_iterator end() const </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:80</div></div>
<div class="ttc" id="a00047_xhtml_a34226fabf12cd438e682bf529b88459c"><div class="ttname"><a href="a00047.xhtml#a34226fabf12cd438e682bf529b88459c">Safir::Dob::Typesystem::DictionaryContainer::KeyType</a></div><div class="ttdeci">KeyT KeyType</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:50</div></div>
<div class="ttc" id="a00047_xhtml"><div class="ttname"><a href="a00047.xhtml">Safir::Dob::Typesystem::DictionaryContainer</a></div><div class="ttdoc">Container class for dictionaries of key value pairs. </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:46</div></div>
<div class="ttc" id="a00047_xhtml_a843692c26962643bab2edbb7689467b0"><div class="ttname"><a href="a00047.xhtml#a843692c26962643bab2edbb7689467b0">Safir::Dob::Typesystem::DictionaryContainer::begin</a></div><div class="ttdeci">iterator begin()</div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:76</div></div>
<div class="ttc" id="a00047_xhtml_a74117176273d7ec895c53e4e1fc95931"><div class="ttname"><a href="a00047.xhtml#a74117176273d7ec895c53e4e1fc95931">Safir::Dob::Typesystem::DictionaryContainer::SetNull</a></div><div class="ttdeci">virtual void SetNull()</div><div class="ttdoc">Set the container to null. </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:71</div></div>
<div class="ttc" id="a00159_xhtml"><div class="ttname"><a href="a00159.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:361</div></div>
<div class="ttc" id="a00047_xhtml_a8257413378f956b91c2fa7ba06d79354"><div class="ttname"><a href="a00047.xhtml#a8257413378f956b91c2fa7ba06d79354">Safir::Dob::Typesystem::DictionaryContainer::size</a></div><div class="ttdeci">size_t size() const </div><div class="ttdef"><b>Definition:</b> DictionaryContainer.h:85</div></div>
<div class="ttc" id="a00222_xhtml_aa50218d805518247edfff3d9328be684"><div class="ttname"><a href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a></div><div class="ttdeci">#define __WFILE__</div><div class="ttdef"><b>Definition:</b> Exceptions.h:31</div></div>
<div class="ttc" id="a00033_xhtml_a4257d6efb8b17e914896bf4ee9b1d7b8"><div class="ttname"><a href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a></div><div class="ttdeci">bool m_bIsChanged</div><div class="ttdoc">The variable containing the change flag. </div><div class="ttdef"><b>Definition:</b> ContainerBase.h:122</div></div>
<div class="ttc" id="a00317_xhtml"><div class="ttname"><a href="a00317.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00219.xhtml">DictionaryContainer.h</a></li>
    <li class="footer">Generated on Sat Apr 30 2016 20:20:01 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
