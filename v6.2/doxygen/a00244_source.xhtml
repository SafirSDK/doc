<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/ValueContainers.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00244_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ValueContainers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00244.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2006-2013 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Lars Hagstr√∂m / stlrha</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __DOTS_VALUE_CONTAINERS_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define __DOTS_VALUE_CONTAINERS_H__</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00190.xhtml">Safir/Dob/Typesystem/Defs.h</a>&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00217.xhtml">Safir/Dob/Typesystem/ContainerBase.h</a>&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00222.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00220.xhtml">Safir/Dob/Typesystem/EntityId.h</a>&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00243.xhtml">Safir/Dob/Typesystem/Utilities.h</a>&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00216.xhtml">Safir/Dob/Typesystem/ChannelId.h</a>&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00223.xhtml">Safir/Dob/Typesystem/HandlerId.h</a>&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00317.xhtml">Safir</a></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="a00178.xhtml">   60</a></span>&#160;    <span class="keyword">class  </span><a class="code" href="a00178.xhtml">ValueContainer</a> : <span class="keyword">public</span> <a class="code" href="a00033.xhtml">ContainerBase</a></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="a00178.xhtml#a7aaa9e3528c3117f65ac38881ab80997">   63</a></span>&#160;        <span class="keyword">typedef</span> T <a class="code" href="a00178.xhtml#a7aaa9e3528c3117f65ac38881ab80997">ContainedType</a>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="a00178.xhtml#aeb709fc07ccf9141ef1b166039167d86">   70</a></span>&#160;        <a class="code" href="a00178.xhtml#aeb709fc07ccf9141ef1b166039167d86">ValueContainer</a>():<a class="code" href="a00033.xhtml">ContainerBase</a>(),m_bIsNull(true), m_Value() {}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="a00178.xhtml#aaf1e4eb277ac40ab769f987bb730e17a">   79</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a00178.xhtml#aaf1e4eb277ac40ab769f987bb730e17a">SetVal</a>(<span class="keyword">const</span> T value)  {m_Value = value; m_bIsNull = <span class="keyword">false</span>; <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a> = <span class="keyword">true</span>;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="a00178.xhtml#a95418e5f71863fe642fa92d212c452ff">   87</a></span>&#160;        T <a class="code" href="a00178.xhtml#a95418e5f71863fe642fa92d212c452ff">GetVal</a>()<span class="keyword"> const    </span>{<span class="keywordflow">if</span> (m_bIsNull) <span class="keywordflow">throw</span> <a class="code" href="a00109.xhtml">NullException</a>(L<span class="stringliteral">&quot;value is null&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__); <span class="keywordflow">return</span> m_Value;}</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="a00178.xhtml#a64afca244337b0a862a54692a540b4e5">   90</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00178.xhtml#a64afca244337b0a862a54692a540b4e5">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_bIsNull;}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="a00178.xhtml#a50b19018725bc1632ad7ba505044195c">   93</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00178.xhtml#a50b19018725bc1632ad7ba505044195c">SetNull</a>()</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            m_bIsNull = <span class="keyword">true</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="a00178.xhtml#a4338eb9b39908987c4a8c0e920ae366c">  100</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00178.xhtml#a4338eb9b39908987c4a8c0e920ae366c">Copy</a>(<span class="keyword">const</span> <a class="code" href="a00033.xhtml">ContainerBase</a> &amp; that)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;that)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">if</span> (<span class="keyword">typeid</span>(*<span class="keyword">this</span>) != <span class="keyword">typeid</span>(that))</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    <span class="keywordflow">throw</span> <a class="code" href="a00159.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;Invalid call to Copy, containers are not of same type&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                *<span class="keyword">this</span> = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00178.xhtml">ValueContainer&lt;T&gt;</a> &amp;<span class="keyword">&gt;</span>(that);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordtype">bool</span> m_bIsNull;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        T m_Value;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="a00178.xhtml#a822ad29b4a74d37a0127679ff6cd550c">  116</a></span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="a00178.xhtml#a822ad29b4a74d37a0127679ff6cd550c">Safir::Dob::Typesystem::Internal::BlobOperations</a>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    };</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="a00164.xhtml">  126</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00164.xhtml">StringContainer</a> : <span class="keyword">public</span> <a class="code" href="a00033.xhtml">ContainerBase</a></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="a00164.xhtml#ae52784f8e4bcd9e2275774ccb4df1bd6">  129</a></span>&#160;        <span class="keyword">typedef</span> std::wstring <a class="code" href="a00164.xhtml#ae52784f8e4bcd9e2275774ccb4df1bd6">ContainedType</a>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="a00164.xhtml#aac60b9d07ca09ef99992554dd783efcb">  136</a></span>&#160;        <a class="code" href="a00164.xhtml#aac60b9d07ca09ef99992554dd783efcb">StringContainer</a>():<a class="code" href="a00033.xhtml">ContainerBase</a>(),m_bIsNull(true), m_Value(),m_CachedUtf8String() {}</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="a00164.xhtml#a0a669d02cbb54de4b2a0477cbe50edda">  145</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a00164.xhtml#a0a669d02cbb54de4b2a0477cbe50edda">SetVal</a>(<span class="keyword">const</span> std::wstring &amp; value)  {m_Value = value; m_CachedUtf8String.clear(); m_bIsNull = <span class="keyword">false</span>; <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a> = <span class="keyword">true</span>;}</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="a00164.xhtml#aef4c0945cba60e86ec188289f3412f29">  153</a></span>&#160;        <span class="keyword">const</span> std::wstring &amp; <a class="code" href="a00164.xhtml#aef4c0945cba60e86ec188289f3412f29">GetVal</a>()<span class="keyword"> const    </span>{<span class="keywordflow">if</span> (m_bIsNull) <span class="keywordflow">throw</span> <a class="code" href="a00109.xhtml">NullException</a>(L<span class="stringliteral">&quot;value is null&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__); <span class="keywordflow">return</span> m_Value;}</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="a00164.xhtml#a95842e784c51c5e68ad12589b4c86fdb">  156</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00164.xhtml#a95842e784c51c5e68ad12589b4c86fdb">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_bIsNull;}</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="a00164.xhtml#a39cb3d0c268b01144fc0d21bef9ad7bd">  159</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00164.xhtml#a39cb3d0c268b01144fc0d21bef9ad7bd">SetNull</a>()</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            m_bIsNull = <span class="keyword">true</span>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            m_CachedUtf8String.clear();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="a00164.xhtml#adf159a4651f20c5786d7e2c64c6d4d0e">  167</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00164.xhtml#adf159a4651f20c5786d7e2c64c6d4d0e">Copy</a>(<span class="keyword">const</span> <a class="code" href="a00033.xhtml">ContainerBase</a> &amp; that)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;that)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="keywordflow">if</span> (<span class="keyword">typeid</span>(*<span class="keyword">this</span>) != <span class="keyword">typeid</span>(that))</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    <span class="keywordflow">throw</span> <a class="code" href="a00159.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;Invalid call to Copy, containers are not of same type&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                *<span class="keyword">this</span> = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00164.xhtml">StringContainer</a> &amp;<span class="keyword">&gt;</span>(that);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="a00164.xhtml#a5723eb1b12899e0a0977557d5479fd3f">  197</a></span>&#160;        <a class="code" href="a00324.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> <a class="code" href="a00164.xhtml#a5723eb1b12899e0a0977557d5479fd3f">Utf8StringLength</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="a00178.xhtml#a64afca244337b0a862a54692a540b4e5">IsNull</a>())</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">if</span> (m_Value.empty())</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">if</span> (m_CachedUtf8String.empty())</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                m_CachedUtf8String = <a class="code" href="a00333.xhtml#a590903d89625dc985b91ec3b195ef78b">Utilities::ToUtf8</a>(m_Value);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            }</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="a00324.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a><span class="keyword">&gt;</span>(m_CachedUtf8String.length() + 1);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        }</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="a00164.xhtml#a4ef0562363866747c4c89f5b7103c3a2">  226</a></span>&#160;        <span class="keyword">const</span> std::string &amp; <a class="code" href="a00164.xhtml#a4ef0562363866747c4c89f5b7103c3a2">Utf8String</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="a00178.xhtml#a64afca244337b0a862a54692a540b4e5">IsNull</a>())</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="a00109.xhtml">NullException</a>(L<span class="stringliteral">&quot;The string is null, cannot convert!&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">if</span> (!m_Value.empty() &amp;&amp; m_CachedUtf8String.empty())</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                m_CachedUtf8String = <a class="code" href="a00333.xhtml#a590903d89625dc985b91ec3b195ef78b">Utilities::ToUtf8</a>(m_Value);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">return</span> m_CachedUtf8String;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="a00164.xhtml#a822ad29b4a74d37a0127679ff6cd550c">  242</a></span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span>Safir::Dob::Typesystem::Internal::BlobOperations;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keywordtype">bool</span> m_bIsNull;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        std::wstring m_Value;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keyword">mutable</span> std::string m_CachedUtf8String;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    };</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="a00011.xhtml">  256</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a00011.xhtml">BinaryContainer</a> : <span class="keyword">public</span> <a class="code" href="a00033.xhtml">ContainerBase</a></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="a00011.xhtml#a885497118ab25abb1544731fd5e78880">  259</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00324.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Binary</a> <a class="code" href="a00011.xhtml#a885497118ab25abb1544731fd5e78880">ContainedType</a>;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="a00011.xhtml#a0f6ea00a34d7fa470968bc7d60a16bf2">  265</a></span>&#160;        <a class="code" href="a00011.xhtml#a0f6ea00a34d7fa470968bc7d60a16bf2">BinaryContainer</a>():<a class="code" href="a00033.xhtml">ContainerBase</a>(),m_bIsNull(true), m_Value() {}</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="a00011.xhtml#adaaedd19841cbea82b4f9fa4f194c8e2">  273</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="a00324.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Binary</a>&amp; <a class="code" href="a00011.xhtml#adaaedd19841cbea82b4f9fa4f194c8e2">GetVal</a>()<span class="keyword"> const    </span>{<span class="keywordflow">if</span> (m_bIsNull) <span class="keywordflow">throw</span> <a class="code" href="a00109.xhtml">NullException</a>(L<span class="stringliteral">&quot;value is null&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__); <span class="keywordflow">return</span> m_Value;}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="a00011.xhtml#a3ece13d00570019e9a77c0df3c75e15b">  282</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a00011.xhtml#a3ece13d00570019e9a77c0df3c75e15b">SetVal</a>(<span class="keyword">const</span> <a class="code" href="a00324.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Binary</a> &amp; value)  {m_Value = value; m_bIsNull = <span class="keyword">false</span>; <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a> = <span class="keyword">true</span>;}</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="a00011.xhtml#a6f3d5e1e60ed5be53f04523caa10a0d3">  286</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00011.xhtml#a6f3d5e1e60ed5be53f04523caa10a0d3">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_bIsNull;}</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="a00011.xhtml#a34425c49853dad7a9734ace68c3b485d">  289</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00011.xhtml#a34425c49853dad7a9734ace68c3b485d">SetNull</a>()</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            m_bIsNull = <span class="keyword">true</span>;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <a class="code" href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        }</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="comment">//implementation of pure virtual in ContainerBase.</span></div><div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="a00011.xhtml#a48ee88dfd4d111058ff45f2eb5e6fe10">  296</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00011.xhtml#a48ee88dfd4d111058ff45f2eb5e6fe10">Copy</a>(<span class="keyword">const</span> <a class="code" href="a00033.xhtml">ContainerBase</a> &amp; that)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;that)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                <span class="keywordflow">if</span> (<span class="keyword">typeid</span>(*<span class="keyword">this</span>) != <span class="keyword">typeid</span>(that))</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                {</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    <span class="keywordflow">throw</span> <a class="code" href="a00159.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;Invalid call to Copy, containers are not of same type&quot;</span>,<a class="code" href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                *<span class="keyword">this</span> = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00011.xhtml">BinaryContainer</a> &amp;<span class="keyword">&gt;</span>(that);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            }</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        }</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="a00011.xhtml#a822ad29b4a74d37a0127679ff6cd550c">  309</a></span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span>Safir::Dob::Typesystem::Internal::BlobOperations;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordtype">bool</span> m_bIsNull;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <a class="code" href="a00324.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Binary</a> m_Value;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    };</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="a00324.xhtml#a203effe57c39d7d040422d128942eca0">  321</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;bool&gt;</a> <a class="code" href="a00324.xhtml#a203effe57c39d7d040422d128942eca0">BooleanContainer</a>;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="a00324.xhtml#a0ad924508fdf62a91c17860d3295bb91">  324</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Int32&gt;</a> <a class="code" href="a00324.xhtml#a0ad924508fdf62a91c17860d3295bb91">Int32Container</a>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="a00324.xhtml#a9569c8d0757c494b9d6ff7694a0bec10">  327</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Int64&gt;</a> <a class="code" href="a00324.xhtml#a9569c8d0757c494b9d6ff7694a0bec10">Int64Container</a>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="a00324.xhtml#a21e6e7908696705fb41e3a50a6df5464">  330</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Float32&gt;</a> <a class="code" href="a00324.xhtml#a21e6e7908696705fb41e3a50a6df5464">Float32Container</a>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="a00324.xhtml#ad9dd8a4d313406f8faa0417c09a03042">  333</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Float64&gt;</a> <a class="code" href="a00324.xhtml#ad9dd8a4d313406f8faa0417c09a03042">Float64Container</a>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="a00324.xhtml#a8a6826eb81aed2b5a735ffb9b9ab2bb7">  336</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;TypeId&gt;</a> <a class="code" href="a00324.xhtml#a8a6826eb81aed2b5a735ffb9b9ab2bb7">TypeIdContainer</a>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="a00324.xhtml#a56592c815f343c7d6dff2d76dd22a6cf">  339</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;InstanceId&gt;</a> <a class="code" href="a00324.xhtml#a56592c815f343c7d6dff2d76dd22a6cf">InstanceIdContainer</a>;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="a00324.xhtml#a5304b01e2e352dce16fdd2251ff40168">  342</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;EntityId&gt;</a> <a class="code" href="a00324.xhtml#a5304b01e2e352dce16fdd2251ff40168">EntityIdContainer</a>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="a00324.xhtml#a60df4425057a7c74795ac8ccc5459a3f">  345</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;ChannelId&gt;</a> <a class="code" href="a00324.xhtml#a60df4425057a7c74795ac8ccc5459a3f">ChannelIdContainer</a>;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="a00324.xhtml#a53f3a2350669ceea311e39fd392af256">  348</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;HandlerId&gt;</a> <a class="code" href="a00324.xhtml#a53f3a2350669ceea311e39fd392af256">HandlerIdContainer</a>;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="comment">// SI-types (32-bits)</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">namespace </span>Si32</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    {</div><div class="line"><a name="l00359"></a><span class="lineno"><a class="line" href="a00329.xhtml#a93e7a63fc6b4fad3b68c4648b6eb9317">  359</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Ampere&gt;</a> <a class="code" href="a00330.xhtml#afce7a8bf9be8fd27a95e431c608465dd">AmpereContainer</a>;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="a00329.xhtml#aea7cbd65855dd4ad93cdfcff2b73e144">  362</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;CubicMeter&gt;</a> <a class="code" href="a00330.xhtml#a43ad6cb6177c8ce60300ea46faae474f">CubicMeterContainer</a>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="a00329.xhtml#add9e2efea747aafc23f108ef6c545820">  365</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Hertz&gt;</a> <a class="code" href="a00330.xhtml#a5e242a7e3e709d1d59f2d7d5c9babd57">HertzContainer</a>;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="a00329.xhtml#af0c0a07541263015d1e8fbacaa722d15">  368</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Joule&gt;</a> <a class="code" href="a00330.xhtml#a3b65c2378cf181d4cfe88baddba3cfaa">JouleContainer</a>;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="a00329.xhtml#a11b2576d385eb706ff75166a2f91865b">  371</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Kelvin&gt;</a> <a class="code" href="a00330.xhtml#a00cd8254ffbeb027273a2c43ca913d68">KelvinContainer</a>;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="a00329.xhtml#a686b62573d4c35f222efa30694616e5a">  374</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Kilogram&gt;</a> <a class="code" href="a00330.xhtml#a681999f56a22db907ca6a0ff7d9316dc">KilogramContainer</a>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="a00329.xhtml#a67702049178fa94140a2692269f93468">  377</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Meter&gt;</a> <a class="code" href="a00330.xhtml#a0a1e1b989a5570a1a165bfbece0f98ff">MeterContainer</a>;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="a00329.xhtml#a81b86a229d968932a6dcd5104db3ca82">  380</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;MeterPerSecond&gt;</a> <a class="code" href="a00330.xhtml#a27c3ce10da60036c61a487cddb946be4">MeterPerSecondContainer</a>;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="a00329.xhtml#af9f9473b9bb4ec73ae523ee869ea095d">  383</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;MeterPerSecondSquared&gt;</a> <a class="code" href="a00330.xhtml#a58a7e22c073e4cb7df6acdc8f70916e7">MeterPerSecondSquaredContainer</a>;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="a00329.xhtml#a15b4857504c95ccda7d04b2a62736236">  386</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Newton&gt;</a> <a class="code" href="a00330.xhtml#a31047e20d7171a5b0c19fa511312e75a">NewtonContainer</a>;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="a00329.xhtml#a1b1195d1c2c0f331ce82f4968d4be7ff">  389</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Pascal&gt;</a> <a class="code" href="a00330.xhtml#adfb65f7d7b9222e6001c7bfd90f5dd0e">PascalContainer</a>;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="a00329.xhtml#a0e78389b4f029b3ca942d09a5b82f135">  392</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Radian&gt;</a> <a class="code" href="a00330.xhtml#ac37f60c48ec1f113410720c156efa83c">RadianContainer</a>;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="a00329.xhtml#aa9f0e586c57abf11dbedd0544d749734">  395</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;RadianPerSecond&gt;</a> <a class="code" href="a00330.xhtml#a2960d98ba1897ac6fddcf58465a76e06">RadianPerSecondContainer</a>;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="a00329.xhtml#a6efbdc5195885d8928494c96260632e1">  398</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;RadianPerSecondSquared&gt;</a> <a class="code" href="a00330.xhtml#a27361273c8db5c220c94bb39ab8fbc79">RadianPerSecondSquaredContainer</a>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno"><a class="line" href="a00329.xhtml#aa07a516e4df13342b4870364e2966575">  401</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Second&gt;</a> <a class="code" href="a00330.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">SecondContainer</a>;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="a00329.xhtml#a4ff67fdef062033abd5a2d3cb892b114">  404</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;SquareMeter&gt;</a> <a class="code" href="a00330.xhtml#a4e1b9b849bee5913a165e5b13659dfce">SquareMeterContainer</a>;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno"><a class="line" href="a00329.xhtml#ab293ca1c06767d66df98136851aa5619">  407</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Steradian&gt;</a> <a class="code" href="a00330.xhtml#acd61e221ec19e54902a9c1c8f7ee76db">SteradianContainer</a>;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="a00329.xhtml#a04a430c94afdc5fda774a2e23820225c">  410</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Volt&gt;</a> <a class="code" href="a00330.xhtml#aea2c0a74bb4d02f456e64493c523cb73">VoltContainer</a>;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno"><a class="line" href="a00329.xhtml#a2fbd36d81f651cfa304611064c7cf8de">  413</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Watt&gt;</a> <a class="code" href="a00330.xhtml#aa9c6bc2e3b0bcd4fa9313b4503588d1f">WattContainer</a>;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    }</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="comment">// SI-types (64-bits)</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keyword">namespace </span>Si64</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    {</div><div class="line"><a name="l00422"></a><span class="lineno"><a class="line" href="a00330.xhtml#afce7a8bf9be8fd27a95e431c608465dd">  422</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Ampere&gt;</a> <a class="code" href="a00330.xhtml#afce7a8bf9be8fd27a95e431c608465dd">AmpereContainer</a>;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="a00330.xhtml#a43ad6cb6177c8ce60300ea46faae474f">  425</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;CubicMeter&gt;</a> <a class="code" href="a00330.xhtml#a43ad6cb6177c8ce60300ea46faae474f">CubicMeterContainer</a>;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="a00330.xhtml#a5e242a7e3e709d1d59f2d7d5c9babd57">  428</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Hertz&gt;</a> <a class="code" href="a00330.xhtml#a5e242a7e3e709d1d59f2d7d5c9babd57">HertzContainer</a>;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="a00330.xhtml#a3b65c2378cf181d4cfe88baddba3cfaa">  431</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Joule&gt;</a> <a class="code" href="a00330.xhtml#a3b65c2378cf181d4cfe88baddba3cfaa">JouleContainer</a>;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="a00330.xhtml#a00cd8254ffbeb027273a2c43ca913d68">  434</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Kelvin&gt;</a> <a class="code" href="a00330.xhtml#a00cd8254ffbeb027273a2c43ca913d68">KelvinContainer</a>;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="a00330.xhtml#a681999f56a22db907ca6a0ff7d9316dc">  437</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Kilogram&gt;</a> <a class="code" href="a00330.xhtml#a681999f56a22db907ca6a0ff7d9316dc">KilogramContainer</a>;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="a00330.xhtml#a0a1e1b989a5570a1a165bfbece0f98ff">  440</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Meter&gt;</a> <a class="code" href="a00330.xhtml#a0a1e1b989a5570a1a165bfbece0f98ff">MeterContainer</a>;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno"><a class="line" href="a00330.xhtml#a27c3ce10da60036c61a487cddb946be4">  443</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;MeterPerSecond&gt;</a> <a class="code" href="a00330.xhtml#a27c3ce10da60036c61a487cddb946be4">MeterPerSecondContainer</a>;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno"><a class="line" href="a00330.xhtml#a58a7e22c073e4cb7df6acdc8f70916e7">  446</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;MeterPerSecondSquared&gt;</a> <a class="code" href="a00330.xhtml#a58a7e22c073e4cb7df6acdc8f70916e7">MeterPerSecondSquaredContainer</a>;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno"><a class="line" href="a00330.xhtml#a31047e20d7171a5b0c19fa511312e75a">  449</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Newton&gt;</a> <a class="code" href="a00330.xhtml#a31047e20d7171a5b0c19fa511312e75a">NewtonContainer</a>;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="a00330.xhtml#adfb65f7d7b9222e6001c7bfd90f5dd0e">  452</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Pascal&gt;</a> <a class="code" href="a00330.xhtml#adfb65f7d7b9222e6001c7bfd90f5dd0e">PascalContainer</a>;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="a00330.xhtml#ac37f60c48ec1f113410720c156efa83c">  455</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Radian&gt;</a> <a class="code" href="a00330.xhtml#ac37f60c48ec1f113410720c156efa83c">RadianContainer</a>;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="a00330.xhtml#a2960d98ba1897ac6fddcf58465a76e06">  458</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;RadianPerSecond&gt;</a> <a class="code" href="a00330.xhtml#a2960d98ba1897ac6fddcf58465a76e06">RadianPerSecondContainer</a>;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno"><a class="line" href="a00330.xhtml#a27361273c8db5c220c94bb39ab8fbc79">  461</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;RadianPerSecondSquared&gt;</a> <a class="code" href="a00330.xhtml#a27361273c8db5c220c94bb39ab8fbc79">RadianPerSecondSquaredContainer</a>;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno"><a class="line" href="a00330.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">  464</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Second&gt;</a> <a class="code" href="a00330.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">SecondContainer</a>;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno"><a class="line" href="a00330.xhtml#a4e1b9b849bee5913a165e5b13659dfce">  467</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;SquareMeter&gt;</a> <a class="code" href="a00330.xhtml#a4e1b9b849bee5913a165e5b13659dfce">SquareMeterContainer</a>;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="a00330.xhtml#acd61e221ec19e54902a9c1c8f7ee76db">  470</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Steradian&gt;</a> <a class="code" href="a00330.xhtml#acd61e221ec19e54902a9c1c8f7ee76db">SteradianContainer</a>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="a00330.xhtml#aea2c0a74bb4d02f456e64493c523cb73">  473</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Volt&gt;</a> <a class="code" href="a00330.xhtml#aea2c0a74bb4d02f456e64493c523cb73">VoltContainer</a>;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="a00330.xhtml#aa9c6bc2e3b0bcd4fa9313b4503588d1f">  476</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00178.xhtml">ValueContainer&lt;Watt&gt;</a> <a class="code" href="a00330.xhtml#aa9c6bc2e3b0bcd4fa9313b4503588d1f">WattContainer</a>;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    }</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;}</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;}</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;}</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="ttc" id="a00164_xhtml_a5723eb1b12899e0a0977557d5479fd3f"><div class="ttname"><a href="a00164.xhtml#a5723eb1b12899e0a0977557d5479fd3f">Safir::Dob::Typesystem::StringContainer::Utf8StringLength</a></div><div class="ttdeci">Int32 Utf8StringLength() const </div><div class="ttdoc">Calculate the length needed for this string in UTF8 encoding. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:197</div></div>
<div class="ttc" id="a00011_xhtml_a3ece13d00570019e9a77c0df3c75e15b"><div class="ttname"><a href="a00011.xhtml#a3ece13d00570019e9a77c0df3c75e15b">Safir::Dob::Typesystem::BinaryContainer::SetVal</a></div><div class="ttdeci">void SetVal(const Binary &amp;value)</div><div class="ttdoc">Set the value of the container. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:282</div></div>
<div class="ttc" id="a00164_xhtml"><div class="ttname"><a href="a00164.xhtml">Safir::Dob::Typesystem::StringContainer</a></div><div class="ttdoc">Container for strings (std::wstring). </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:126</div></div>
<div class="ttc" id="a00178_xhtml_a7aaa9e3528c3117f65ac38881ab80997"><div class="ttname"><a href="a00178.xhtml#a7aaa9e3528c3117f65ac38881ab80997">Safir::Dob::Typesystem::ValueContainer::ContainedType</a></div><div class="ttdeci">T ContainedType</div><div class="ttdef"><b>Definition:</b> ValueContainers.h:63</div></div>
<div class="ttc" id="a00164_xhtml_adf159a4651f20c5786d7e2c64c6d4d0e"><div class="ttname"><a href="a00164.xhtml#adf159a4651f20c5786d7e2c64c6d4d0e">Safir::Dob::Typesystem::StringContainer::Copy</a></div><div class="ttdeci">virtual void Copy(const ContainerBase &amp;that)</div><div class="ttdoc">Virtual assignment. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:167</div></div>
<div class="ttc" id="a00330_xhtml_a5e242a7e3e709d1d59f2d7d5c9babd57"><div class="ttname"><a href="a00330.xhtml#a5e242a7e3e709d1d59f2d7d5c9babd57">Safir::Dob::Typesystem::Si64::HertzContainer</a></div><div class="ttdeci">ValueContainer&lt; Hertz &gt; HertzContainer</div><div class="ttdoc">A container containing 64 bit Hertz values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:428</div></div>
<div class="ttc" id="a00011_xhtml_a0f6ea00a34d7fa470968bc7d60a16bf2"><div class="ttname"><a href="a00011.xhtml#a0f6ea00a34d7fa470968bc7d60a16bf2">Safir::Dob::Typesystem::BinaryContainer::BinaryContainer</a></div><div class="ttdeci">BinaryContainer()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:265</div></div>
<div class="ttc" id="a00217_xhtml"><div class="ttname"><a href="a00217.xhtml">ContainerBase.h</a></div></div>
<div class="ttc" id="a00324_xhtml_a5304b01e2e352dce16fdd2251ff40168"><div class="ttname"><a href="a00324.xhtml#a5304b01e2e352dce16fdd2251ff40168">Safir::Dob::Typesystem::EntityIdContainer</a></div><div class="ttdeci">ValueContainer&lt; EntityId &gt; EntityIdContainer</div><div class="ttdoc">A container containing EntityId values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:342</div></div>
<div class="ttc" id="a00033_xhtml"><div class="ttname"><a href="a00033.xhtml">Safir::Dob::Typesystem::ContainerBase</a></div><div class="ttdoc">Base class for all Containers. </div><div class="ttdef"><b>Definition:</b> ContainerBase.h:43</div></div>
<div class="ttc" id="a00164_xhtml_a0a669d02cbb54de4b2a0477cbe50edda"><div class="ttname"><a href="a00164.xhtml#a0a669d02cbb54de4b2a0477cbe50edda">Safir::Dob::Typesystem::StringContainer::SetVal</a></div><div class="ttdeci">void SetVal(const std::wstring &amp;value)</div><div class="ttdoc">Set the value of the container. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:145</div></div>
<div class="ttc" id="a00324_xhtml_a56592c815f343c7d6dff2d76dd22a6cf"><div class="ttname"><a href="a00324.xhtml#a56592c815f343c7d6dff2d76dd22a6cf">Safir::Dob::Typesystem::InstanceIdContainer</a></div><div class="ttdeci">ValueContainer&lt; InstanceId &gt; InstanceIdContainer</div><div class="ttdoc">A container containing InstanceId values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:339</div></div>
<div class="ttc" id="a00178_xhtml_a50b19018725bc1632ad7ba505044195c"><div class="ttname"><a href="a00178.xhtml#a50b19018725bc1632ad7ba505044195c">Safir::Dob::Typesystem::ValueContainer::SetNull</a></div><div class="ttdeci">virtual void SetNull()</div><div class="ttdoc">Set the container to null. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:93</div></div>
<div class="ttc" id="a00222_xhtml"><div class="ttname"><a href="a00222.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a00330_xhtml_a3b65c2378cf181d4cfe88baddba3cfaa"><div class="ttname"><a href="a00330.xhtml#a3b65c2378cf181d4cfe88baddba3cfaa">Safir::Dob::Typesystem::Si64::JouleContainer</a></div><div class="ttdeci">ValueContainer&lt; Joule &gt; JouleContainer</div><div class="ttdoc">A container containing 64 bit Joule values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:431</div></div>
<div class="ttc" id="a00330_xhtml_a58a7e22c073e4cb7df6acdc8f70916e7"><div class="ttname"><a href="a00330.xhtml#a58a7e22c073e4cb7df6acdc8f70916e7">Safir::Dob::Typesystem::Si64::MeterPerSecondSquaredContainer</a></div><div class="ttdeci">ValueContainer&lt; MeterPerSecondSquared &gt; MeterPerSecondSquaredContainer</div><div class="ttdoc">A container containing 64 bit MeterPerSecondSquared values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:446</div></div>
<div class="ttc" id="a00330_xhtml_ac37f60c48ec1f113410720c156efa83c"><div class="ttname"><a href="a00330.xhtml#ac37f60c48ec1f113410720c156efa83c">Safir::Dob::Typesystem::Si64::RadianContainer</a></div><div class="ttdeci">ValueContainer&lt; Radian &gt; RadianContainer</div><div class="ttdoc">A container containing 64 bit Radian values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:455</div></div>
<div class="ttc" id="a00324_xhtml_a0ad924508fdf62a91c17860d3295bb91"><div class="ttname"><a href="a00324.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a></div><div class="ttdeci">ValueContainer&lt; Int32 &gt; Int32Container</div><div class="ttdoc">A container containing 32 bit integer values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:324</div></div>
<div class="ttc" id="a00164_xhtml_a39cb3d0c268b01144fc0d21bef9ad7bd"><div class="ttname"><a href="a00164.xhtml#a39cb3d0c268b01144fc0d21bef9ad7bd">Safir::Dob::Typesystem::StringContainer::SetNull</a></div><div class="ttdeci">virtual void SetNull()</div><div class="ttdoc">Set the container to null. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:159</div></div>
<div class="ttc" id="a00330_xhtml_a4e1b9b849bee5913a165e5b13659dfce"><div class="ttname"><a href="a00330.xhtml#a4e1b9b849bee5913a165e5b13659dfce">Safir::Dob::Typesystem::Si64::SquareMeterContainer</a></div><div class="ttdeci">ValueContainer&lt; SquareMeter &gt; SquareMeterContainer</div><div class="ttdoc">A container containing 64 bit SquareMeter values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:467</div></div>
<div class="ttc" id="a00324_xhtml_a53f3a2350669ceea311e39fd392af256"><div class="ttname"><a href="a00324.xhtml#a53f3a2350669ceea311e39fd392af256">Safir::Dob::Typesystem::HandlerIdContainer</a></div><div class="ttdeci">ValueContainer&lt; HandlerId &gt; HandlerIdContainer</div><div class="ttdoc">A container containing HandlerId values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:348</div></div>
<div class="ttc" id="a00190_xhtml"><div class="ttname"><a href="a00190.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a00220_xhtml"><div class="ttname"><a href="a00220.xhtml">EntityId.h</a></div></div>
<div class="ttc" id="a00178_xhtml_a822ad29b4a74d37a0127679ff6cd550c"><div class="ttname"><a href="a00178.xhtml#a822ad29b4a74d37a0127679ff6cd550c">Safir::Dob::Typesystem::ValueContainer::BlobOperations</a></div><div class="ttdeci">friend class Safir::Dob::Typesystem::Internal::BlobOperations</div><div class="ttdef"><b>Definition:</b> ValueContainers.h:116</div></div>
<div class="ttc" id="a00243_xhtml"><div class="ttname"><a href="a00243.xhtml">Utilities.h</a></div></div>
<div class="ttc" id="a00223_xhtml"><div class="ttname"><a href="a00223.xhtml">HandlerId.h</a></div></div>
<div class="ttc" id="a00011_xhtml_adaaedd19841cbea82b4f9fa4f194c8e2"><div class="ttname"><a href="a00011.xhtml#adaaedd19841cbea82b4f9fa4f194c8e2">Safir::Dob::Typesystem::BinaryContainer::GetVal</a></div><div class="ttdeci">const Binary &amp; GetVal() const </div><div class="ttdoc">Get the value of the container. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:273</div></div>
<div class="ttc" id="a00330_xhtml_a31047e20d7171a5b0c19fa511312e75a"><div class="ttname"><a href="a00330.xhtml#a31047e20d7171a5b0c19fa511312e75a">Safir::Dob::Typesystem::Si64::NewtonContainer</a></div><div class="ttdeci">ValueContainer&lt; Newton &gt; NewtonContainer</div><div class="ttdoc">A container containing 64 bit Newton values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:449</div></div>
<div class="ttc" id="a00324_xhtml_a58f6f6fa78d3bc90c92677edce25fa22"><div class="ttname"><a href="a00324.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Safir::Dob::Typesystem::Binary</a></div><div class="ttdeci">std::vector&lt; char &gt; Binary</div><div class="ttdoc">A type to contain binary data. </div><div class="ttdef"><b>Definition:</b> Defs.h:299</div></div>
<div class="ttc" id="a00330_xhtml_a2960d98ba1897ac6fddcf58465a76e06"><div class="ttname"><a href="a00330.xhtml#a2960d98ba1897ac6fddcf58465a76e06">Safir::Dob::Typesystem::Si64::RadianPerSecondContainer</a></div><div class="ttdeci">ValueContainer&lt; RadianPerSecond &gt; RadianPerSecondContainer</div><div class="ttdoc">A container containing 64 bit RadianPerSecond values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:458</div></div>
<div class="ttc" id="a00330_xhtml_a27c3ce10da60036c61a487cddb946be4"><div class="ttname"><a href="a00330.xhtml#a27c3ce10da60036c61a487cddb946be4">Safir::Dob::Typesystem::Si64::MeterPerSecondContainer</a></div><div class="ttdeci">ValueContainer&lt; MeterPerSecond &gt; MeterPerSecondContainer</div><div class="ttdoc">A container containing 64 bit MeterPerSecond values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:443</div></div>
<div class="ttc" id="a00330_xhtml_a43ad6cb6177c8ce60300ea46faae474f"><div class="ttname"><a href="a00330.xhtml#a43ad6cb6177c8ce60300ea46faae474f">Safir::Dob::Typesystem::Si64::CubicMeterContainer</a></div><div class="ttdeci">ValueContainer&lt; CubicMeter &gt; CubicMeterContainer</div><div class="ttdoc">A container containing 64 bit CubicMeter values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:425</div></div>
<div class="ttc" id="a00330_xhtml_adfb65f7d7b9222e6001c7bfd90f5dd0e"><div class="ttname"><a href="a00330.xhtml#adfb65f7d7b9222e6001c7bfd90f5dd0e">Safir::Dob::Typesystem::Si64::PascalContainer</a></div><div class="ttdeci">ValueContainer&lt; Pascal &gt; PascalContainer</div><div class="ttdoc">A container containing 64 bit Pascal values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:452</div></div>
<div class="ttc" id="a00324_xhtml_a60df4425057a7c74795ac8ccc5459a3f"><div class="ttname"><a href="a00324.xhtml#a60df4425057a7c74795ac8ccc5459a3f">Safir::Dob::Typesystem::ChannelIdContainer</a></div><div class="ttdeci">ValueContainer&lt; ChannelId &gt; ChannelIdContainer</div><div class="ttdoc">A container containing ChannelId values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:345</div></div>
<div class="ttc" id="a00178_xhtml_a95418e5f71863fe642fa92d212c452ff"><div class="ttname"><a href="a00178.xhtml#a95418e5f71863fe642fa92d212c452ff">Safir::Dob::Typesystem::ValueContainer::GetVal</a></div><div class="ttdeci">T GetVal() const </div><div class="ttdoc">Get the value of the container. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:87</div></div>
<div class="ttc" id="a00324_xhtml_a8a6826eb81aed2b5a735ffb9b9ab2bb7"><div class="ttname"><a href="a00324.xhtml#a8a6826eb81aed2b5a735ffb9b9ab2bb7">Safir::Dob::Typesystem::TypeIdContainer</a></div><div class="ttdeci">ValueContainer&lt; TypeId &gt; TypeIdContainer</div><div class="ttdoc">A container containing TypeId values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:336</div></div>
<div class="ttc" id="a00011_xhtml"><div class="ttname"><a href="a00011.xhtml">Safir::Dob::Typesystem::BinaryContainer</a></div><div class="ttdoc">Container for Binary. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:256</div></div>
<div class="ttc" id="a00164_xhtml_ae52784f8e4bcd9e2275774ccb4df1bd6"><div class="ttname"><a href="a00164.xhtml#ae52784f8e4bcd9e2275774ccb4df1bd6">Safir::Dob::Typesystem::StringContainer::ContainedType</a></div><div class="ttdeci">std::wstring ContainedType</div><div class="ttdef"><b>Definition:</b> ValueContainers.h:129</div></div>
<div class="ttc" id="a00330_xhtml_a27361273c8db5c220c94bb39ab8fbc79"><div class="ttname"><a href="a00330.xhtml#a27361273c8db5c220c94bb39ab8fbc79">Safir::Dob::Typesystem::Si64::RadianPerSecondSquaredContainer</a></div><div class="ttdeci">ValueContainer&lt; RadianPerSecondSquared &gt; RadianPerSecondSquaredContainer</div><div class="ttdoc">A container containing 64 bit RadianPerSecondSquared values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:461</div></div>
<div class="ttc" id="a00178_xhtml_aeb709fc07ccf9141ef1b166039167d86"><div class="ttname"><a href="a00178.xhtml#aeb709fc07ccf9141ef1b166039167d86">Safir::Dob::Typesystem::ValueContainer::ValueContainer</a></div><div class="ttdeci">ValueContainer()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:70</div></div>
<div class="ttc" id="a00324_xhtml_a77c8a9fabe66e72ccbc66c729540b9b6"><div class="ttname"><a href="a00324.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a></div><div class="ttdeci">DotsC_Int32 Int32</div><div class="ttdoc">32 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:66</div></div>
<div class="ttc" id="a00333_xhtml_a590903d89625dc985b91ec3b195ef78b"><div class="ttname"><a href="a00333.xhtml#a590903d89625dc985b91ec3b195ef78b">Safir::Dob::Typesystem::Utilities::ToUtf8</a></div><div class="ttdeci">DOTS_CPP_API const std::string ToUtf8(const std::wstring &amp;wstr)</div><div class="ttdoc">Convert a std::wstring to UTF8-encoded std::string. </div></div>
<div class="ttc" id="a00330_xhtml_a681999f56a22db907ca6a0ff7d9316dc"><div class="ttname"><a href="a00330.xhtml#a681999f56a22db907ca6a0ff7d9316dc">Safir::Dob::Typesystem::Si64::KilogramContainer</a></div><div class="ttdeci">ValueContainer&lt; Kilogram &gt; KilogramContainer</div><div class="ttdoc">A container containing 64 bit Kilogram values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:437</div></div>
<div class="ttc" id="a00011_xhtml_a48ee88dfd4d111058ff45f2eb5e6fe10"><div class="ttname"><a href="a00011.xhtml#a48ee88dfd4d111058ff45f2eb5e6fe10">Safir::Dob::Typesystem::BinaryContainer::Copy</a></div><div class="ttdeci">virtual void Copy(const ContainerBase &amp;that)</div><div class="ttdoc">Virtual assignment. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:296</div></div>
<div class="ttc" id="a00178_xhtml"><div class="ttname"><a href="a00178.xhtml">Safir::Dob::Typesystem::ValueContainer</a></div><div class="ttdoc">Container for base types. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:60</div></div>
<div class="ttc" id="a00164_xhtml_aef4c0945cba60e86ec188289f3412f29"><div class="ttname"><a href="a00164.xhtml#aef4c0945cba60e86ec188289f3412f29">Safir::Dob::Typesystem::StringContainer::GetVal</a></div><div class="ttdeci">const std::wstring &amp; GetVal() const </div><div class="ttdoc">Get the value of the container. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:153</div></div>
<div class="ttc" id="a00164_xhtml_aac60b9d07ca09ef99992554dd783efcb"><div class="ttname"><a href="a00164.xhtml#aac60b9d07ca09ef99992554dd783efcb">Safir::Dob::Typesystem::StringContainer::StringContainer</a></div><div class="ttdeci">StringContainer()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:136</div></div>
<div class="ttc" id="a00330_xhtml_a5a92eb23e0c8aee1aa873db989c13bf5"><div class="ttname"><a href="a00330.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">Safir::Dob::Typesystem::Si64::SecondContainer</a></div><div class="ttdeci">ValueContainer&lt; Second &gt; SecondContainer</div><div class="ttdoc">A container containing 64 bit Second values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:464</div></div>
<div class="ttc" id="a00164_xhtml_a4ef0562363866747c4c89f5b7103c3a2"><div class="ttname"><a href="a00164.xhtml#a4ef0562363866747c4c89f5b7103c3a2">Safir::Dob::Typesystem::StringContainer::Utf8String</a></div><div class="ttdeci">const std::string &amp; Utf8String() const </div><div class="ttdoc">Convert the string to a UTF8 encoded std::string. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:226</div></div>
<div class="ttc" id="a00330_xhtml_a00cd8254ffbeb027273a2c43ca913d68"><div class="ttname"><a href="a00330.xhtml#a00cd8254ffbeb027273a2c43ca913d68">Safir::Dob::Typesystem::Si64::KelvinContainer</a></div><div class="ttdeci">ValueContainer&lt; Kelvin &gt; KelvinContainer</div><div class="ttdoc">A container containing 64 bit Kelvin values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:434</div></div>
<div class="ttc" id="a00164_xhtml_a95842e784c51c5e68ad12589b4c86fdb"><div class="ttname"><a href="a00164.xhtml#a95842e784c51c5e68ad12589b4c86fdb">Safir::Dob::Typesystem::StringContainer::IsNull</a></div><div class="ttdeci">virtual bool IsNull() const </div><div class="ttdoc">Is the container set to null? </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:156</div></div>
<div class="ttc" id="a00324_xhtml_ad9dd8a4d313406f8faa0417c09a03042"><div class="ttname"><a href="a00324.xhtml#ad9dd8a4d313406f8faa0417c09a03042">Safir::Dob::Typesystem::Float64Container</a></div><div class="ttdeci">ValueContainer&lt; Float64 &gt; Float64Container</div><div class="ttdoc">A container containing 64 bit floating point values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:333</div></div>
<div class="ttc" id="a00011_xhtml_a6f3d5e1e60ed5be53f04523caa10a0d3"><div class="ttname"><a href="a00011.xhtml#a6f3d5e1e60ed5be53f04523caa10a0d3">Safir::Dob::Typesystem::BinaryContainer::IsNull</a></div><div class="ttdeci">virtual bool IsNull() const </div><div class="ttdoc">Is the container set to null? </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:286</div></div>
<div class="ttc" id="a00216_xhtml"><div class="ttname"><a href="a00216.xhtml">ChannelId.h</a></div></div>
<div class="ttc" id="a00178_xhtml_a64afca244337b0a862a54692a540b4e5"><div class="ttname"><a href="a00178.xhtml#a64afca244337b0a862a54692a540b4e5">Safir::Dob::Typesystem::ValueContainer::IsNull</a></div><div class="ttdeci">virtual bool IsNull() const </div><div class="ttdoc">Is the container set to null? </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:90</div></div>
<div class="ttc" id="a00330_xhtml_aa9c6bc2e3b0bcd4fa9313b4503588d1f"><div class="ttname"><a href="a00330.xhtml#aa9c6bc2e3b0bcd4fa9313b4503588d1f">Safir::Dob::Typesystem::Si64::WattContainer</a></div><div class="ttdeci">ValueContainer&lt; Watt &gt; WattContainer</div><div class="ttdoc">A container containing 64 bit Watt values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:476</div></div>
<div class="ttc" id="a00330_xhtml_afce7a8bf9be8fd27a95e431c608465dd"><div class="ttname"><a href="a00330.xhtml#afce7a8bf9be8fd27a95e431c608465dd">Safir::Dob::Typesystem::Si64::AmpereContainer</a></div><div class="ttdeci">ValueContainer&lt; Ampere &gt; AmpereContainer</div><div class="ttdoc">A container containing 64 bit Ampere values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:422</div></div>
<div class="ttc" id="a00330_xhtml_a0a1e1b989a5570a1a165bfbece0f98ff"><div class="ttname"><a href="a00330.xhtml#a0a1e1b989a5570a1a165bfbece0f98ff">Safir::Dob::Typesystem::Si64::MeterContainer</a></div><div class="ttdeci">ValueContainer&lt; Meter &gt; MeterContainer</div><div class="ttdoc">A container containing 64 bit Meter values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:440</div></div>
<div class="ttc" id="a00324_xhtml_a203effe57c39d7d040422d128942eca0"><div class="ttname"><a href="a00324.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a></div><div class="ttdeci">ValueContainer&lt; bool &gt; BooleanContainer</div><div class="ttdoc">A container containing boolean values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:321</div></div>
<div class="ttc" id="a00011_xhtml_a885497118ab25abb1544731fd5e78880"><div class="ttname"><a href="a00011.xhtml#a885497118ab25abb1544731fd5e78880">Safir::Dob::Typesystem::BinaryContainer::ContainedType</a></div><div class="ttdeci">Binary ContainedType</div><div class="ttdef"><b>Definition:</b> ValueContainers.h:259</div></div>
<div class="ttc" id="a00178_xhtml_a4338eb9b39908987c4a8c0e920ae366c"><div class="ttname"><a href="a00178.xhtml#a4338eb9b39908987c4a8c0e920ae366c">Safir::Dob::Typesystem::ValueContainer::Copy</a></div><div class="ttdeci">virtual void Copy(const ContainerBase &amp;that)</div><div class="ttdoc">Virtual assignment. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:100</div></div>
<div class="ttc" id="a00178_xhtml_aaf1e4eb277ac40ab769f987bb730e17a"><div class="ttname"><a href="a00178.xhtml#aaf1e4eb277ac40ab769f987bb730e17a">Safir::Dob::Typesystem::ValueContainer::SetVal</a></div><div class="ttdeci">void SetVal(const T value)</div><div class="ttdoc">Set the value of the container. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:79</div></div>
<div class="ttc" id="a00324_xhtml_a9569c8d0757c494b9d6ff7694a0bec10"><div class="ttname"><a href="a00324.xhtml#a9569c8d0757c494b9d6ff7694a0bec10">Safir::Dob::Typesystem::Int64Container</a></div><div class="ttdeci">ValueContainer&lt; Int64 &gt; Int64Container</div><div class="ttdoc">A container containing 64 bit integer values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:327</div></div>
<div class="ttc" id="a00330_xhtml_acd61e221ec19e54902a9c1c8f7ee76db"><div class="ttname"><a href="a00330.xhtml#acd61e221ec19e54902a9c1c8f7ee76db">Safir::Dob::Typesystem::Si64::SteradianContainer</a></div><div class="ttdeci">ValueContainer&lt; Steradian &gt; SteradianContainer</div><div class="ttdoc">A container containing 64 bit Steradian values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:470</div></div>
<div class="ttc" id="a00324_xhtml_a21e6e7908696705fb41e3a50a6df5464"><div class="ttname"><a href="a00324.xhtml#a21e6e7908696705fb41e3a50a6df5464">Safir::Dob::Typesystem::Float32Container</a></div><div class="ttdeci">ValueContainer&lt; Float32 &gt; Float32Container</div><div class="ttdoc">A container containing 32 bit floating point values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:330</div></div>
<div class="ttc" id="a00109_xhtml"><div class="ttname"><a href="a00109.xhtml">Safir::Dob::Typesystem::NullException</a></div><div class="ttdoc">Thrown when an application attempts to get the value of a member that is null. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:395</div></div>
<div class="ttc" id="a00159_xhtml"><div class="ttname"><a href="a00159.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:361</div></div>
<div class="ttc" id="a00330_xhtml_aea2c0a74bb4d02f456e64493c523cb73"><div class="ttname"><a href="a00330.xhtml#aea2c0a74bb4d02f456e64493c523cb73">Safir::Dob::Typesystem::Si64::VoltContainer</a></div><div class="ttdeci">ValueContainer&lt; Volt &gt; VoltContainer</div><div class="ttdoc">A container containing 64 bit Volt values. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:473</div></div>
<div class="ttc" id="a00011_xhtml_a34425c49853dad7a9734ace68c3b485d"><div class="ttname"><a href="a00011.xhtml#a34425c49853dad7a9734ace68c3b485d">Safir::Dob::Typesystem::BinaryContainer::SetNull</a></div><div class="ttdeci">virtual void SetNull()</div><div class="ttdoc">Set the container to null. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:289</div></div>
<div class="ttc" id="a00222_xhtml_aa50218d805518247edfff3d9328be684"><div class="ttname"><a href="a00222.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a></div><div class="ttdeci">#define __WFILE__</div><div class="ttdef"><b>Definition:</b> Exceptions.h:31</div></div>
<div class="ttc" id="a00033_xhtml_a4257d6efb8b17e914896bf4ee9b1d7b8"><div class="ttname"><a href="a00033.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a></div><div class="ttdeci">bool m_bIsChanged</div><div class="ttdoc">The variable containing the change flag. </div><div class="ttdef"><b>Definition:</b> ContainerBase.h:122</div></div>
<div class="ttc" id="a00317_xhtml"><div class="ttname"><a href="a00317.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00244.xhtml">ValueContainers.h</a></li>
    <li class="footer">Generated on Sat Apr 30 2016 20:20:01 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
