<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::ToolSupport::TypeUtilities Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00420.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::ToolSupport::TypeUtilities Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01381.xhtml">GetParameterByFullName</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper class to get <a class="el" href="a01345.xhtml" title="Description of a parameter. ">ParameterDescription</a> from a fully qualified name without having the <a class="el" href="a01369.xhtml" title="Description of a class type. ">ClassDescription</a>.  <a href="a01381.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a54cf0228354ca43329cc545a697ffe94"><td class="memItemLeft" align="right" valign="top">DotsC_TypeId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a54cf0228354ca43329cc545a697ffe94">CalculateTypeId</a> (const std::string &amp;name)</td></tr>
<tr class="memdesc:a54cf0228354ca43329cc545a697ffe94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates a typeId from a string.  <a href="#a54cf0228354ca43329cc545a697ffe94">More...</a><br /></td></tr>
<tr class="separator:a54cf0228354ca43329cc545a697ffe94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a7086bcb56bbf36b4d8f9ebf44c4e9b"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">GetTypeName</a> (DotsC_MemberType memberType)</td></tr>
<tr class="memdesc:a0a7086bcb56bbf36b4d8f9ebf44c4e9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds corresponding type name to a memberType.  <a href="#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">More...</a><br /></td></tr>
<tr class="separator:a0a7086bcb56bbf36b4d8f9ebf44c4e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bb3e790d5d86f9af5783b24a76916c2"><td class="memTemplParams" colspan="2">template&lt;class RepositoryT &gt; </td></tr>
<tr class="memitem:a7bb3e790d5d86f9af5783b24a76916c2"><td class="memTemplItemLeft" align="right" valign="top">const char *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a7bb3e790d5d86f9af5783b24a76916c2">GetTypeName</a> (const RepositoryT *repository, DotsC_TypeId typeId)</td></tr>
<tr class="memdesc:a7bb3e790d5d86f9af5783b24a76916c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds corresponding type name to a typeId.  <a href="#a7bb3e790d5d86f9af5783b24a76916c2">More...</a><br /></td></tr>
<tr class="separator:a7bb3e790d5d86f9af5783b24a76916c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf2f0fe04fdcd94bdde2457ad8644251"><td class="memTemplParams" colspan="2">template&lt;class RepositoryT , class MemberDescriptionT &gt; </td></tr>
<tr class="memitem:adf2f0fe04fdcd94bdde2457ad8644251"><td class="memTemplItemLeft" align="right" valign="top">const char *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00420.xhtml#adf2f0fe04fdcd94bdde2457ad8644251">GetTypeName</a> (const RepositoryT *repository, const MemberDescriptionT *member)</td></tr>
<tr class="memdesc:adf2f0fe04fdcd94bdde2457ad8644251"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds corresponding type name to a member description.  <a href="#adf2f0fe04fdcd94bdde2457ad8644251">More...</a><br /></td></tr>
<tr class="separator:adf2f0fe04fdcd94bdde2457ad8644251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1928edaf478a3686e07852ae051136ba"><td class="memTemplParams" colspan="2">template&lt;class RepositoryT &gt; </td></tr>
<tr class="memitem:a1928edaf478a3686e07852ae051136ba"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a1928edaf478a3686e07852ae051136ba">IsOfType</a> (const RepositoryT *repository, DotsC_TypeId tid, DotsC_TypeId ofTid)</td></tr>
<tr class="memdesc:a1928edaf478a3686e07852ae051136ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a type is the same or a subtype of another type.  <a href="#a1928edaf478a3686e07852ae051136ba">More...</a><br /></td></tr>
<tr class="separator:a1928edaf478a3686e07852ae051136ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a420c982fbb9e46dea1db9114052e708e"><td class="memTemplParams" colspan="2">template&lt;class EnumDescriptionT &gt; </td></tr>
<tr class="memitem:a420c982fbb9e46dea1db9114052e708e"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a420c982fbb9e46dea1db9114052e708e">GetIndexOfEnumValue</a> (const EnumDescriptionT *description, const std::string &amp;valueName)</td></tr>
<tr class="memdesc:a420c982fbb9e46dea1db9114052e708e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the index (ordinal) of an enumeration value.  <a href="#a420c982fbb9e46dea1db9114052e708e">More...</a><br /></td></tr>
<tr class="separator:a420c982fbb9e46dea1db9114052e708e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dc9415ee907cd8cc17de042fb8f0340"><td class="memTemplParams" colspan="2">template&lt;class PropertyDescriptionT , class MemberDescriptionT &gt; </td></tr>
<tr class="memitem:a3dc9415ee907cd8cc17de042fb8f0340"><td class="memTemplItemLeft" align="right" valign="top">DotsC_MemberIndex&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a3dc9415ee907cd8cc17de042fb8f0340">GetPropertyMemberIndex</a> (const PropertyDescriptionT *pd, const std::string &amp;memberName)</td></tr>
<tr class="memdesc:a3dc9415ee907cd8cc17de042fb8f0340"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get index of a property member.  <a href="#a3dc9415ee907cd8cc17de042fb8f0340">More...</a><br /></td></tr>
<tr class="separator:a3dc9415ee907cd8cc17de042fb8f0340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6396e38b89d10bf048ef22a437bd3b2c"><td class="memTemplParams" colspan="2">template&lt;class ClassDescriptionT , class ParameterDescriptionT &gt; </td></tr>
<tr class="memitem:a6396e38b89d10bf048ef22a437bd3b2c"><td class="memTemplItemLeft" align="right" valign="top">const ParameterDescriptionT *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a6396e38b89d10bf048ef22a437bd3b2c">GetParameterByName</a> (const ClassDescriptionT *cd, const std::string &amp;paramName)</td></tr>
<tr class="memdesc:a6396e38b89d10bf048ef22a437bd3b2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get parameter by name when the classDesription is already retrieved.  <a href="#a6396e38b89d10bf048ef22a437bd3b2c">More...</a><br /></td></tr>
<tr class="separator:a6396e38b89d10bf048ef22a437bd3b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a516cda465896d2c7ca80f86d86e60416"><td class="memItemLeft" align="right" valign="top">DotsC_Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a516cda465896d2c7ca80f86d86e60416">ToUnifiedDictionaryKey</a> (DotsC_Int64 key)</td></tr>
<tr class="memdesc:a516cda465896d2c7ca80f86d86e60416"><td class="mdescLeft">&#160;</td><td class="mdescRight">ToUnifiedDictionaryKey - Convert all keys to an int64 that is the internal key format.  <a href="#a516cda465896d2c7ca80f86d86e60416">More...</a><br /></td></tr>
<tr class="separator:a516cda465896d2c7ca80f86d86e60416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb5f36fff11d07acbf3c09256d574574"><td class="memItemLeft" align="right" valign="top">DotsC_Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00420.xhtml#acb5f36fff11d07acbf3c09256d574574">ToUnifiedDictionaryKey</a> (DotsC_Int32 key)</td></tr>
<tr class="separator:acb5f36fff11d07acbf3c09256d574574"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64915cf185c077afbf56deef31998682"><td class="memItemLeft" align="right" valign="top">DotsC_Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00420.xhtml#a64915cf185c077afbf56deef31998682">ToUnifiedDictionaryKey</a> (const std::string &amp;key)</td></tr>
<tr class="separator:a64915cf185c077afbf56deef31998682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4c300fc8ea11f31329aebd0b04e0616"><td class="memItemLeft" align="right" valign="top">DotsC_Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00420.xhtml#ab4c300fc8ea11f31329aebd0b04e0616">ToUnifiedDictionaryKey</a> (const DotsC_EntityId &amp;key)</td></tr>
<tr class="separator:ab4c300fc8ea11f31329aebd0b04e0616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3cc5922f46d08966f8e7d1d93e4553d"><td class="memTemplParams" colspan="2">template&lt;class ParameterDescriptionT , class KeyT &gt; </td></tr>
<tr class="memitem:af3cc5922f46d08966f8e7d1d93e4553d"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00420.xhtml#af3cc5922f46d08966f8e7d1d93e4553d">GetDictionaryIndexFromKey</a> (const ParameterDescriptionT *pd, const KeyT &amp;key)</td></tr>
<tr class="separator:af3cc5922f46d08966f8e7d1d93e4553d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a54cf0228354ca43329cc545a697ffe94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54cf0228354ca43329cc545a697ffe94">&sect;&nbsp;</a></span>CalculateTypeId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DotsC_TypeId Safir::Dob::Typesystem::ToolSupport::TypeUtilities::CalculateTypeId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates a typeId from a string. </p>
<p>Does not check that the type exists. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>[in] - Name of the type </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The typeId </dd></dl>

<p>Referenced by <a class="el" href="a01381.xhtml#aad9472fe8949178491c5dd50f0d79392">Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByFullName&lt; RepT, Traits &gt;::operator()()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00420_a54cf0228354ca43329cc545a697ffe94_icgraph.svg" width="428" height="82"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af3cc5922f46d08966f8e7d1d93e4553d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3cc5922f46d08966f8e7d1d93e4553d">&sect;&nbsp;</a></span>GetDictionaryIndexFromKey()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class ParameterDescriptionT , class KeyT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetDictionaryIndexFromKey </td>
          <td>(</td>
          <td class="paramtype">const ParameterDescriptionT *&#160;</td>
          <td class="paramname"><em>pd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const KeyT &amp;&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="a00420.xhtml#a516cda465896d2c7ca80f86d86e60416">ToUnifiedDictionaryKey()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00420_af3cc5922f46d08966f8e7d1d93e4553d_cgraph.svg" width="432" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a420c982fbb9e46dea1db9114052e708e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a420c982fbb9e46dea1db9114052e708e">&sect;&nbsp;</a></span>GetIndexOfEnumValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class EnumDescriptionT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetIndexOfEnumValue </td>
          <td>(</td>
          <td class="paramtype">const EnumDescriptionT *&#160;</td>
          <td class="paramname"><em>description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>valueName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the index (ordinal) of an enumeration value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>[in] - EnumerationDescription </td></tr>
    <tr><td class="paramname">valueName</td><td>[in] - Enumeration value name, can be short form or fully qualified. Ex: 'Monday' and 'MyNamespace.MyEnumType.Monday' </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Index of the value or -1 if not found. </dd></dl>

</div>
</div>
<a id="a6396e38b89d10bf048ef22a437bd3b2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6396e38b89d10bf048ef22a437bd3b2c">&sect;&nbsp;</a></span>GetParameterByName()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class ClassDescriptionT , class ParameterDescriptionT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const ParameterDescriptionT* Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetParameterByName </td>
          <td>(</td>
          <td class="paramtype">const ClassDescriptionT *&#160;</td>
          <td class="paramname"><em>cd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>paramName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get parameter by name when the classDesription is already retrieved. </p>
<p>To get parameter from a fully qualified name, use <a class="el" href="a01381.xhtml" title="Helper class to get ParameterDescription from a fully qualified name without having the ClassDescript...">GetParameterByFullName</a> below.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cd</td><td>[in] - The class description that contains the parameter. </td></tr>
    <tr><td class="paramname">paramName</td><td>[in] - Parameter name, can be short form or fully qualified name. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="a01345.xhtml" title="Description of a parameter. ">ParameterDescription</a> or NULL if not found. </dd></dl>

</div>
</div>
<a id="a3dc9415ee907cd8cc17de042fb8f0340"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dc9415ee907cd8cc17de042fb8f0340">&sect;&nbsp;</a></span>GetPropertyMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class PropertyDescriptionT , class MemberDescriptionT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">DotsC_MemberIndex Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetPropertyMemberIndex </td>
          <td>(</td>
          <td class="paramtype">const PropertyDescriptionT *&#160;</td>
          <td class="paramname"><em>pd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>memberName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get index of a property member. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pd</td><td>[in] - Property description. </td></tr>
    <tr><td class="paramname">memberName</td><td>[in] - member name </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Index of member or -1 if not found. </dd></dl>

</div>
</div>
<a id="a0a7086bcb56bbf36b4d8f9ebf44c4e9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">&sect;&nbsp;</a></span>GetTypeName() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetTypeName </td>
          <td>(</td>
          <td class="paramtype">DotsC_MemberType&#160;</td>
          <td class="paramname"><em>memberType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds corresponding type name to a memberType. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">memberType</td><td>[in] - MemberType to convert to string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The type name or NULL if type doesn't exist </dd></dl>

<p>Referenced by <a class="el" href="a00420.xhtml#adf2f0fe04fdcd94bdde2457ad8644251">GetTypeName()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00420_a0a7086bcb56bbf36b4d8f9ebf44c4e9b_icgraph.svg" width="416" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7bb3e790d5d86f9af5783b24a76916c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bb3e790d5d86f9af5783b24a76916c2">&sect;&nbsp;</a></span>GetTypeName() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RepositoryT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const char* Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetTypeName </td>
          <td>(</td>
          <td class="paramtype">const RepositoryT *&#160;</td>
          <td class="paramname"><em>repository</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DotsC_TypeId&#160;</td>
          <td class="paramname"><em>typeId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds corresponding type name to a typeId. </p>
<p>If no type exists with given typeId NULL is returned.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">repository</td><td>[in] - Type repository containing all type information </td></tr>
    <tr><td class="paramname">typeId</td><td>[in] - TypeId to lookup and find name for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The type name or NULL if type doesn't exist in the repository. </dd></dl>

</div>
</div>
<a id="adf2f0fe04fdcd94bdde2457ad8644251"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf2f0fe04fdcd94bdde2457ad8644251">&sect;&nbsp;</a></span>GetTypeName() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RepositoryT , class MemberDescriptionT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const char* Safir::Dob::Typesystem::ToolSupport::TypeUtilities::GetTypeName </td>
          <td>(</td>
          <td class="paramtype">const RepositoryT *&#160;</td>
          <td class="paramname"><em>repository</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MemberDescriptionT *&#160;</td>
          <td class="paramname"><em>member</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds corresponding type name to a member description. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">repository</td><td>[in] - Type repository containing all type information </td></tr>
    <tr><td class="paramname">member</td><td>[in] - Member description. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The type name of the type. </dd></dl>

<p>References <a class="el" href="a00420.xhtml#a0a7086bcb56bbf36b4d8f9ebf44c4e9b">GetTypeName()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00420_adf2f0fe04fdcd94bdde2457ad8644251_cgraph.svg" width="416" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1928edaf478a3686e07852ae051136ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1928edaf478a3686e07852ae051136ba">&sect;&nbsp;</a></span>IsOfType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RepositoryT &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Dob::Typesystem::ToolSupport::TypeUtilities::IsOfType </td>
          <td>(</td>
          <td class="paramtype">const RepositoryT *&#160;</td>
          <td class="paramname"><em>repository</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DotsC_TypeId&#160;</td>
          <td class="paramname"><em>tid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DotsC_TypeId&#160;</td>
          <td class="paramname"><em>ofTid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if a type is the same or a subtype of another type. </p>
<p>Only usable for Enumerations and ObjectTypes.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">repository</td><td>[in] - Type repository containing all type information </td></tr>
    <tr><td class="paramname">tid</td><td>[in] - TypeId to check if it is the same or a subtype of the ofTid </td></tr>
    <tr><td class="paramname">ofTid</td><td>[in] - The typeId to check tid against. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if tid is the same or a subtype of ofTid, else false. </dd></dl>

</div>
</div>
<a id="a516cda465896d2c7ca80f86d86e60416"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a516cda465896d2c7ca80f86d86e60416">&sect;&nbsp;</a></span>ToUnifiedDictionaryKey() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DotsC_Int64 Safir::Dob::Typesystem::ToolSupport::TypeUtilities::ToUnifiedDictionaryKey </td>
          <td>(</td>
          <td class="paramtype">DotsC_Int64&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>ToUnifiedDictionaryKey - Convert all keys to an int64 that is the internal key format. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Int64 representation of a dictionary key </dd></dl>

<p>Referenced by <a class="el" href="a00420.xhtml#af3cc5922f46d08966f8e7d1d93e4553d">GetDictionaryIndexFromKey()</a>, and <a class="el" href="a01325.xhtml#a0fab0b48dddbaa344fe4ee6d1d1bb152">Safir::Dob::Typesystem::ToolSupport::BlobWriter&lt; RepositoryT, Traits &gt;::MarkChanges()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a00420_a516cda465896d2c7ca80f86d86e60416_icgraph.svg" width="432" height="171"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acb5f36fff11d07acbf3c09256d574574"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb5f36fff11d07acbf3c09256d574574">&sect;&nbsp;</a></span>ToUnifiedDictionaryKey() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DotsC_Int64 Safir::Dob::Typesystem::ToolSupport::TypeUtilities::ToUnifiedDictionaryKey </td>
          <td>(</td>
          <td class="paramtype">DotsC_Int32&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a64915cf185c077afbf56deef31998682"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64915cf185c077afbf56deef31998682">&sect;&nbsp;</a></span>ToUnifiedDictionaryKey() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DotsC_Int64 Safir::Dob::Typesystem::ToolSupport::TypeUtilities::ToUnifiedDictionaryKey </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab4c300fc8ea11f31329aebd0b04e0616"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4c300fc8ea11f31329aebd0b04e0616">&sect;&nbsp;</a></span>ToUnifiedDictionaryKey() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DotsC_Int64 Safir::Dob::Typesystem::ToolSupport::TypeUtilities::ToUnifiedDictionaryKey </td>
          <td>(</td>
          <td class="paramtype">const DotsC_EntityId &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00412.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00419.xhtml">ToolSupport</a></li><li class="navelem"><a class="el" href="a00420.xhtml">TypeUtilities</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
