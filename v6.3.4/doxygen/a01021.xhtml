<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::Connection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01021.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a01018.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Connection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A connection to the DOB.  
 <a href="a01021.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a01940_source.xhtml">Safir/Dob/Connection.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Connection:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01020.svg" width="194" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Connection:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01019.svg" width="194" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6881eb377b31c2b34a3200cfba54337c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01021.xhtml#a6881eb377b31c2b34a3200cfba54337c">Connection</a> ()</td></tr>
<tr class="memdesc:a6881eb377b31c2b34a3200cfba54337c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a6881eb377b31c2b34a3200cfba54337c">More...</a><br /></td></tr>
<tr class="separator:a6881eb377b31c2b34a3200cfba54337c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0f07cda835b1374a9d8eee7b776b4b4"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01021.xhtml#af0f07cda835b1374a9d8eee7b776b4b4">~Connection</a> ()</td></tr>
<tr class="memdesc:af0f07cda835b1374a9d8eee7b776b4b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#af0f07cda835b1374a9d8eee7b776b4b4">More...</a><br /></td></tr>
<tr class="separator:af0f07cda835b1374a9d8eee7b776b4b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa19cfc24f0122fed1b1b41f755ed25cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01021.xhtml#aa19cfc24f0122fed1b1b41f755ed25cd">Open</a> (const std::wstring &amp;connectionNameCommonPart, const std::wstring &amp;connectionNameInstancePart, const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Dob::Typesystem::Int32</a> context, <a class="el" href="a01045.xhtml">StopHandler</a> *const stopHandler, <a class="el" href="a01049.xhtml">Dispatcher</a> *const dispatcher)</td></tr>
<tr class="memdesc:aa19cfc24f0122fed1b1b41f755ed25cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a connection to the DOB.  <a href="#aa19cfc24f0122fed1b1b41f755ed25cd">More...</a><br /></td></tr>
<tr class="separator:aa19cfc24f0122fed1b1b41f755ed25cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9995eec74f3e949c307c6cdde3c1c617"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01021.xhtml#a9995eec74f3e949c307c6cdde3c1c617">Close</a> ()</td></tr>
<tr class="memdesc:a9995eec74f3e949c307c6cdde3c1c617"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close the connection to the DOB.  <a href="#a9995eec74f3e949c307c6cdde3c1c617">More...</a><br /></td></tr>
<tr class="separator:a9995eec74f3e949c307c6cdde3c1c617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3608e0429260b51acb7e733e0cbbb693"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01021.xhtml#a3608e0429260b51acb7e733e0cbbb693">IsOpen</a> () const</td></tr>
<tr class="memdesc:a3608e0429260b51acb7e733e0cbbb693"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if this <a class="el" href="a01021.xhtml" title="A connection to the DOB. ">Connection</a> instance is open.  <a href="#a3608e0429260b51acb7e733e0cbbb693">More...</a><br /></td></tr>
<tr class="separator:a3608e0429260b51acb7e733e0cbbb693"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac43bed5bb5ae30b21cadb7ea103998fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01021.xhtml#ac43bed5bb5ae30b21cadb7ea103998fe">Dispatch</a> () const</td></tr>
<tr class="memdesc:ac43bed5bb5ae30b21cadb7ea103998fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">When the dispatch event or callback is signalled, the application MUST call this method.  <a href="#ac43bed5bb5ae30b21cadb7ea103998fe">More...</a><br /></td></tr>
<tr class="separator:ac43bed5bb5ae30b21cadb7ea103998fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01041"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01041')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01041.xhtml">Safir::Dob::ConnectionBase</a></td></tr>
<tr class="memitem:a1ea3315feba4e5901666b95c77b05de5 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a1ea3315feba4e5901666b95c77b05de5">ConnectionBase</a> ()</td></tr>
<tr class="memdesc:a1ea3315feba4e5901666b95c77b05de5 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="a01041.xhtml#a1ea3315feba4e5901666b95c77b05de5">More...</a><br /></td></tr>
<tr class="separator:a1ea3315feba4e5901666b95c77b05de5 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e38491c4598c50cacdfa127942a8fcd inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a4e38491c4598c50cacdfa127942a8fcd">~ConnectionBase</a> ()</td></tr>
<tr class="memdesc:a4e38491c4598c50cacdfa127942a8fcd inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="a01041.xhtml#a4e38491c4598c50cacdfa127942a8fcd">More...</a><br /></td></tr>
<tr class="separator:a4e38491c4598c50cacdfa127942a8fcd inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91c6413e9304b5ed5ab6be79679fee7b inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a91c6413e9304b5ed5ab6be79679fee7b">RegisterEntityHandler</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const <a class="el" href="a01565.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a> instanceIdPolicy, <a class="el" href="a01053.xhtml">Dob::EntityHandler</a> *const entityHandler) const</td></tr>
<tr class="memdesc:a91c6413e9304b5ed5ab6be79679fee7b inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registration of an entity handler for a given type.  <a href="a01041.xhtml#a91c6413e9304b5ed5ab6be79679fee7b">More...</a><br /></td></tr>
<tr class="separator:a91c6413e9304b5ed5ab6be79679fee7b inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c604509cc20d38d897dd3454156ab59 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a0c604509cc20d38d897dd3454156ab59">RegisterEntityHandlerInjection</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const <a class="el" href="a01565.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a> instanceIdPolicy, <a class="el" href="a01057.xhtml">Dob::EntityHandlerInjection</a> *const entityHandlerInjection) const</td></tr>
<tr class="memdesc:a0c604509cc20d38d897dd3454156ab59 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register an entity handler that also gets informed about injected entities.  <a href="a01041.xhtml#a0c604509cc20d38d897dd3454156ab59">More...</a><br /></td></tr>
<tr class="separator:a0c604509cc20d38d897dd3454156ab59 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc67106462885bed8199148d5875b39f inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#adc67106462885bed8199148d5875b39f">RegisterEntityHandlerPending</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const <a class="el" href="a01565.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a> instanceIdPolicy, <a class="el" href="a01061.xhtml">Dob::EntityHandlerPending</a> *const entityHandlerPending) const</td></tr>
<tr class="memdesc:adc67106462885bed8199148d5875b39f inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pending registration of a handler for a given entity type.  <a href="a01041.xhtml#adc67106462885bed8199148d5875b39f">More...</a><br /></td></tr>
<tr class="separator:adc67106462885bed8199148d5875b39f inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8e2990134937d26e4b941ab79fe3226 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#ac8e2990134937d26e4b941ab79fe3226">RegisterServiceHandler</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a01065.xhtml">Dob::ServiceHandler</a> *const serviceHandler) const</td></tr>
<tr class="memdesc:ac8e2990134937d26e4b941ab79fe3226 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a service handler for a given type.  <a href="a01041.xhtml#ac8e2990134937d26e4b941ab79fe3226">More...</a><br /></td></tr>
<tr class="separator:ac8e2990134937d26e4b941ab79fe3226 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bd40da415096308890908866f5b3611 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a6bd40da415096308890908866f5b3611">RegisterServiceHandlerPending</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a01069.xhtml">Dob::ServiceHandlerPending</a> *const serviceHandlerPending) const</td></tr>
<tr class="memdesc:a6bd40da415096308890908866f5b3611 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pending registration of a handler for a given service type.  <a href="a01041.xhtml#a6bd40da415096308890908866f5b3611">More...</a><br /></td></tr>
<tr class="separator:a6bd40da415096308890908866f5b3611 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab603cd02acd3b5defe74f0e2fb638ada inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#ab603cd02acd3b5defe74f0e2fb638ada">UnregisterHandler</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const</td></tr>
<tr class="memdesc:ab603cd02acd3b5defe74f0e2fb638ada inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unregister of an entity handler or a service handler.  <a href="a01041.xhtml#ab603cd02acd3b5defe74f0e2fb638ada">More...</a><br /></td></tr>
<tr class="separator:ab603cd02acd3b5defe74f0e2fb638ada inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228cb9920644cff5c75b3a94b57d23ae inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a228cb9920644cff5c75b3a94b57d23ae">SubscribeMessage</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01161.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, <a class="el" href="a01085.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const</td></tr>
<tr class="memdesc:a228cb9920644cff5c75b3a94b57d23ae inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for messages of a certain type and its subclasses.  <a href="a01041.xhtml#a228cb9920644cff5c75b3a94b57d23ae">More...</a><br /></td></tr>
<tr class="separator:a228cb9920644cff5c75b3a94b57d23ae inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7b1be9942b70e865953df7efc4491d inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a4d7b1be9942b70e865953df7efc4491d">SubscribeMessage</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01161.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, const bool includeSubclasses, <a class="el" href="a01085.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const</td></tr>
<tr class="memdesc:a4d7b1be9942b70e865953df7efc4491d inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for messages of a certain type (additional parameters).  <a href="a01041.xhtml#a4d7b1be9942b70e865953df7efc4491d">More...</a><br /></td></tr>
<tr class="separator:a4d7b1be9942b70e865953df7efc4491d inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4918cdfcee628f4398d06be988fe76a inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#aa4918cdfcee628f4398d06be988fe76a">UnsubscribeMessage</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01161.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, <a class="el" href="a01085.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const</td></tr>
<tr class="memdesc:aa4918cdfcee628f4398d06be988fe76a inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove a message subscription made by the given subscriber.  <a href="a01041.xhtml#aa4918cdfcee628f4398d06be988fe76a">More...</a><br /></td></tr>
<tr class="separator:aa4918cdfcee628f4398d06be988fe76a inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a076013b5b51e2d24c3232e34621d23a6 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a076013b5b51e2d24c3232e34621d23a6">UnsubscribeMessage</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01161.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, const bool includeSubclasses, <a class="el" href="a01085.xhtml">Dob::MessageSubscriber</a> *const messageSubscriber) const</td></tr>
<tr class="memdesc:a076013b5b51e2d24c3232e34621d23a6 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove a message subscription made by the given subscriber (additional parameters).  <a href="a01041.xhtml#a076013b5b51e2d24c3232e34621d23a6">More...</a><br /></td></tr>
<tr class="separator:a076013b5b51e2d24c3232e34621d23a6 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f83c6379155e5703e460238d66e6aed inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a4f83c6379155e5703e460238d66e6aed">SubscribeEntity</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, <a class="el" href="a01089.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const</td></tr>
<tr class="memdesc:a4f83c6379155e5703e460238d66e6aed inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for instances of an entity type and its subclasses.  <a href="a01041.xhtml#a4f83c6379155e5703e460238d66e6aed">More...</a><br /></td></tr>
<tr class="separator:a4f83c6379155e5703e460238d66e6aed inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6778e54488fef2407e926dfcb188951 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#ad6778e54488fef2407e926dfcb188951">SubscribeEntity</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const bool includeUpdates, const bool includeSubclasses, const bool restartSubscription, <a class="el" href="a01089.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const</td></tr>
<tr class="memdesc:ad6778e54488fef2407e926dfcb188951 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subscription for an entity type (additional parameters).  <a href="a01041.xhtml#ad6778e54488fef2407e926dfcb188951">More...</a><br /></td></tr>
<tr class="separator:ad6778e54488fef2407e926dfcb188951 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8faea57644f3a9dc312486ebb266b31c inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a8faea57644f3a9dc312486ebb266b31c">SubscribeEntity</a> (const <a class="el" href="a01205.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, const bool includeUpdates, const bool restartSubscription, <a class="el" href="a01089.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const</td></tr>
<tr class="memdesc:a8faea57644f3a9dc312486ebb266b31c inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for a specific instance of an entity type.  <a href="a01041.xhtml#a8faea57644f3a9dc312486ebb266b31c">More...</a><br /></td></tr>
<tr class="separator:a8faea57644f3a9dc312486ebb266b31c inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225dc4931380ef10765e77dfee690e6e inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a225dc4931380ef10765e77dfee690e6e">UnsubscribeEntity</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, <a class="el" href="a01089.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const</td></tr>
<tr class="memdesc:a225dc4931380ef10765e77dfee690e6e inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove an entity subscription made by the given subscriber.  <a href="a01041.xhtml#a225dc4931380ef10765e77dfee690e6e">More...</a><br /></td></tr>
<tr class="separator:a225dc4931380ef10765e77dfee690e6e inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10656288d57e04c5a607f950d3d574d5 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a10656288d57e04c5a607f950d3d574d5">UnsubscribeEntity</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const bool includeSubclasses, <a class="el" href="a01089.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const</td></tr>
<tr class="memdesc:a10656288d57e04c5a607f950d3d574d5 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove an entity subscription made by the given subscriber (additional parameters).  <a href="a01041.xhtml#a10656288d57e04c5a607f950d3d574d5">More...</a><br /></td></tr>
<tr class="separator:a10656288d57e04c5a607f950d3d574d5 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a785f99731ff7774a459246c9466d2687 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a785f99731ff7774a459246c9466d2687">UnsubscribeEntity</a> (const <a class="el" href="a01205.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, <a class="el" href="a01089.xhtml">Dob::EntitySubscriber</a> *const entitySubscriber) const</td></tr>
<tr class="memdesc:a785f99731ff7774a459246c9466d2687 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove an entity instance subscription made by the given subscriber.  <a href="a01041.xhtml#a785f99731ff7774a459246c9466d2687">More...</a><br /></td></tr>
<tr class="separator:a785f99731ff7774a459246c9466d2687 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32d0455513543e141034e5c705b5e350 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a32d0455513543e141034e5c705b5e350">SubscribeRegistration</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const bool includeSubclasses, const bool restartSubscription, <a class="el" href="a01081.xhtml">Dob::RegistrationSubscriber</a> *const registrationSubscriber) const</td></tr>
<tr class="memdesc:a32d0455513543e141034e5c705b5e350 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up subscription for notifications about when a specific handler for an entity type or a service type is registered and unregistered.  <a href="a01041.xhtml#a32d0455513543e141034e5c705b5e350">More...</a><br /></td></tr>
<tr class="separator:a32d0455513543e141034e5c705b5e350 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6559420c180452ca494bc07b86642fb inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#ad6559420c180452ca494bc07b86642fb">UnsubscribeRegistration</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const bool includeSubclasses, <a class="el" href="a01081.xhtml">Dob::RegistrationSubscriber</a> *const registrationSubscriber) const</td></tr>
<tr class="memdesc:ad6559420c180452ca494bc07b86642fb inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a registration subscription.  <a href="a01041.xhtml#ad6559420c180452ca494bc07b86642fb">More...</a><br /></td></tr>
<tr class="separator:ad6559420c180452ca494bc07b86642fb inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d54458d9f0b4358925d25d5e86aa65 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a72d54458d9f0b4358925d25d5e86aa65">Send</a> (const <a class="el" href="a00410.xhtml#a1533a0e21d4871452b98112f9df219e2">Dob::MessagePtr</a> &amp;message, const <a class="el" href="a01161.xhtml">Dob::Typesystem::ChannelId</a> &amp;channelId, <a class="el" href="a01077.xhtml">Dob::MessageSender</a> *const messageSender) const</td></tr>
<tr class="memdesc:a72d54458d9f0b4358925d25d5e86aa65 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a message on the specified channel.  <a href="a01041.xhtml#a72d54458d9f0b4358925d25d5e86aa65">More...</a><br /></td></tr>
<tr class="separator:a72d54458d9f0b4358925d25d5e86aa65 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29379e53ddefe62b5bffc2bc32edb922 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00410.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a29379e53ddefe62b5bffc2bc32edb922">CreateRequest</a> (const <a class="el" href="a00410.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;request, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a01073.xhtml">Dob::Requestor</a> *const requestor) const</td></tr>
<tr class="memdesc:a29379e53ddefe62b5bffc2bc32edb922 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request to a handler to create an entity instance without specifying the instanceId.  <a href="a01041.xhtml#a29379e53ddefe62b5bffc2bc32edb922">More...</a><br /></td></tr>
<tr class="separator:a29379e53ddefe62b5bffc2bc32edb922 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47667d4bcf8d24957e06f504b46b9156 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00410.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a47667d4bcf8d24957e06f504b46b9156">CreateRequest</a> (const <a class="el" href="a00410.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;request, const <a class="el" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a01073.xhtml">Dob::Requestor</a> *const requestor) const</td></tr>
<tr class="memdesc:a47667d4bcf8d24957e06f504b46b9156 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request to a handler to create a specific entity instance.  <a href="a01041.xhtml#a47667d4bcf8d24957e06f504b46b9156">More...</a><br /></td></tr>
<tr class="separator:a47667d4bcf8d24957e06f504b46b9156 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2693a87527a9e0d7cb96e36e1d70de8 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00410.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#ad2693a87527a9e0d7cb96e36e1d70de8">UpdateRequest</a> (const <a class="el" href="a00410.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;request, const <a class="el" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, <a class="el" href="a01073.xhtml">Dob::Requestor</a> *const requestor) const</td></tr>
<tr class="memdesc:ad2693a87527a9e0d7cb96e36e1d70de8 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send an update request on an existing entity instance.  <a href="a01041.xhtml#ad2693a87527a9e0d7cb96e36e1d70de8">More...</a><br /></td></tr>
<tr class="separator:ad2693a87527a9e0d7cb96e36e1d70de8 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b9ccf5b36aeba7cdb4ddffad3741509 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00410.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a8b9ccf5b36aeba7cdb4ddffad3741509">DeleteRequest</a> (const <a class="el" href="a01205.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, <a class="el" href="a01073.xhtml">Dob::Requestor</a> *const requestor) const</td></tr>
<tr class="memdesc:a8b9ccf5b36aeba7cdb4ddffad3741509 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a delete request on an existing entity instance.  <a href="a01041.xhtml#a8b9ccf5b36aeba7cdb4ddffad3741509">More...</a><br /></td></tr>
<tr class="separator:a8b9ccf5b36aeba7cdb4ddffad3741509 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bb0015d10e1ff07bddb66898de76233 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00410.xhtml#a3c6701b1b178238cbd35e1d4e1729cd1">Dob::RequestId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a7bb0015d10e1ff07bddb66898de76233">ServiceRequest</a> (const <a class="el" href="a00410.xhtml#aa2ef0209c77f52caf77d0a1252c3500a">Dob::ServicePtr</a> &amp;request, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, <a class="el" href="a01073.xhtml">Dob::Requestor</a> *const requestor) const</td></tr>
<tr class="memdesc:a7bb0015d10e1ff07bddb66898de76233 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send a request to the given service handler.  <a href="a01041.xhtml#a7bb0015d10e1ff07bddb66898de76233">More...</a><br /></td></tr>
<tr class="separator:a7bb0015d10e1ff07bddb66898de76233 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb68405162e6a4875c604b7c77ea556a inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#afb68405162e6a4875c604b7c77ea556a">SetChanges</a> (const <a class="el" href="a00410.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;entity, const <a class="el" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const</td></tr>
<tr class="memdesc:afb68405162e6a4875c604b7c77ea556a inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Merge the changed members of an entity straight into the pool (the given handler must be the owner).  <a href="a01041.xhtml#afb68405162e6a4875c604b7c77ea556a">More...</a><br /></td></tr>
<tr class="separator:afb68405162e6a4875c604b7c77ea556a inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5f7be8fdae6796d2e0182ca2229dfcf inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#af5f7be8fdae6796d2e0182ca2229dfcf">SetAll</a> (const <a class="el" href="a00410.xhtml#af2adbc0b4897bb1cdecc8951e68b0c55">Dob::EntityPtr</a> &amp;entity, const <a class="el" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> &amp;instanceId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const</td></tr>
<tr class="memdesc:af5f7be8fdae6796d2e0182ca2229dfcf inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows an entity handler to create or update an entity.  <a href="a01041.xhtml#af5f7be8fdae6796d2e0182ca2229dfcf">More...</a><br /></td></tr>
<tr class="separator:af5f7be8fdae6796d2e0182ca2229dfcf inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7e055a361cc08f3feecc00759cdc08f inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#ad7e055a361cc08f3feecc00759cdc08f">Delete</a> (const <a class="el" href="a01205.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const</td></tr>
<tr class="memdesc:ad7e055a361cc08f3feecc00759cdc08f inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows an entity handler to delete a specific owned entity instance.  <a href="a01041.xhtml#ad7e055a361cc08f3feecc00759cdc08f">More...</a><br /></td></tr>
<tr class="separator:ad7e055a361cc08f3feecc00759cdc08f inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fb6e91c424e8088df0a858fd86e5fe4 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a6fb6e91c424e8088df0a858fd86e5fe4">DeleteAllInstances</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const</td></tr>
<tr class="memdesc:a6fb6e91c424e8088df0a858fd86e5fe4 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows an entity handler to delete all owned instances.  <a href="a01041.xhtml#a6fb6e91c424e8088df0a858fd86e5fe4">More...</a><br /></td></tr>
<tr class="separator:a6fb6e91c424e8088df0a858fd86e5fe4 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34b11f018d1942c54acca48c157144c1 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01117.xhtml">Dob::EntityIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a34b11f018d1942c54acca48c157144c1">GetEntityIterator</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const bool includeSubclasses) const</td></tr>
<tr class="memdesc:a34b11f018d1942c54acca48c157144c1 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retreives an STL compliant iterator to iterate over created instances.  <a href="a01041.xhtml#a34b11f018d1942c54acca48c157144c1">More...</a><br /></td></tr>
<tr class="separator:a34b11f018d1942c54acca48c157144c1 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43575b0a820497752052f7e38665bce7 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01121.xhtml">Dob::EntityProxy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a43575b0a820497752052f7e38665bce7">Read</a> (const <a class="el" href="a01205.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId) const</td></tr>
<tr class="memdesc:a43575b0a820497752052f7e38665bce7 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read an entity from the distributed object pool.  <a href="a01041.xhtml#a43575b0a820497752052f7e38665bce7">More...</a><br /></td></tr>
<tr class="separator:a43575b0a820497752052f7e38665bce7 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab34ab11589f05947bdc0965be9aebd35 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#ab34ab11589f05947bdc0965be9aebd35">IsCreated</a> (const <a class="el" href="a01205.xhtml">Dob::Typesystem::EntityId</a> &amp;entityId) const</td></tr>
<tr class="memdesc:ab34ab11589f05947bdc0965be9aebd35 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if an instance of an entity is created or not.  <a href="a01041.xhtml#ab34ab11589f05947bdc0965be9aebd35">More...</a><br /></td></tr>
<tr class="separator:ab34ab11589f05947bdc0965be9aebd35 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1315e96821867b989b87045237574d42 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a1315e96821867b989b87045237574d42">GetNumberOfInstances</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId, const bool includeSubclasses) const</td></tr>
<tr class="memdesc:a1315e96821867b989b87045237574d42 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is used to get the number of instances of an entity that exists.  <a href="a01041.xhtml#a1315e96821867b989b87045237574d42">More...</a><br /></td></tr>
<tr class="separator:a1315e96821867b989b87045237574d42 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2575ce762b33f533c729e1e15c3d328f inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01565.xhtml#af41ceb16c75d8f5caebb4962f66423cf">Dob::InstanceIdPolicy::Enumeration</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a2575ce762b33f533c729e1e15c3d328f">GetInstanceIdPolicy</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId, const <a class="el" href="a01249.xhtml">Dob::Typesystem::HandlerId</a> &amp;handlerId) const</td></tr>
<tr class="memdesc:a2575ce762b33f533c729e1e15c3d328f inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is used to get the instanceIdPolicy for a specific class and handler.  <a href="a01041.xhtml#a2575ce762b33f533c729e1e15c3d328f">More...</a><br /></td></tr>
<tr class="separator:a2575ce762b33f533c729e1e15c3d328f inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30ee3934e28a6d4304e7508f8b9e4283 inherit pub_methods_a01041"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01041.xhtml#a30ee3934e28a6d4304e7508f8b9e4283">ExitDispatch</a> () const</td></tr>
<tr class="memdesc:a30ee3934e28a6d4304e7508f8b9e4283 inherit pub_methods_a01041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interrupt the ongoing Dispatch even if all data to the application have not been distpatched.  <a href="a01041.xhtml#a30ee3934e28a6d4304e7508f8b9e4283">More...</a><br /></td></tr>
<tr class="separator:a30ee3934e28a6d4304e7508f8b9e4283 inherit pub_methods_a01041"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A connection to the DOB. </p>
<p>This class represents a "real" (as opposed to <a class="el" href="a01149.xhtml" title="A secondary connection attached to a &quot;real&quot; connection. ">SecondaryConnection</a>) connection to the dob. Each DOB application must have at least one connection. Connections are not thread safe. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6881eb377b31c2b34a3200cfba54337c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6881eb377b31c2b34a3200cfba54337c">&sect;&nbsp;</a></span>Connection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::Connection::Connection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a id="af0f07cda835b1374a9d8eee7b776b4b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0f07cda835b1374a9d8eee7b776b4b4">&sect;&nbsp;</a></span>~Connection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Safir::Dob::Connection::~Connection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9995eec74f3e949c307c6cdde3c1c617"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9995eec74f3e949c307c6cdde3c1c617">&sect;&nbsp;</a></span>Close()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::Connection::Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Close the connection to the DOB. </p>
<p>Closes the connection to the DOB and deallocates all resources. All subscriptions and registrations will automatically be deleted and there is no need to call Unsubscribe and Unregister before calling Close. Note that all connections that were set up using Attach will also be closed after a call to this method. </p>

</div>
</div>
<a id="ac43bed5bb5ae30b21cadb7ea103998fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac43bed5bb5ae30b21cadb7ea103998fe">&sect;&nbsp;</a></span>Dispatch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::Connection::Dispatch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>When the dispatch event or callback is signalled, the application MUST call this method. </p>
<p>A call to Dispatch will result in that all queues for this connection are emptied and that each message in the queues are passed to the associated consumer. Calls to dispatch from connection instances that are not open will be ignored. </p>

<p>Referenced by <a class="el" href="a01405.xhtml#a278d45a9ef9d7783b7ec8c0bad91f107">Safir::Utilities::AceDispatcher::AceDispatcher()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01021_ac43bed5bb5ae30b21cadb7ea103998fe_icgraph.svg" width="406" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3608e0429260b51acb7e733e0cbbb693"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3608e0429260b51acb7e733e0cbbb693">&sect;&nbsp;</a></span>IsOpen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Safir::Dob::Connection::IsOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if this <a class="el" href="a01021.xhtml" title="A connection to the DOB. ">Connection</a> instance is open. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the connection is open, otherwise false. </dd></dl>

<p>Implements <a class="el" href="a01041.xhtml#a3f75bb234da260aa156fa1a04b00ec0f">Safir::Dob::ConnectionBase</a>.</p>

</div>
</div>
<a id="aa19cfc24f0122fed1b1b41f755ed25cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa19cfc24f0122fed1b1b41f755ed25cd">&sect;&nbsp;</a></span>Open()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::Connection::Open </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>connectionNameCommonPart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>connectionNameInstancePart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Dob::Typesystem::Int32</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a01045.xhtml">StopHandler</a> *const&#160;</td>
          <td class="paramname"><em>stopHandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a01049.xhtml">Dispatcher</a> *const&#160;</td>
          <td class="paramname"><em>dispatcher</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Open a connection to the DOB. </p>
<p>The connection uses the OnDoDispatch callback to signal that there is incoming data available. When OnDoDispatch is called the application shall set an event or similar and then call <a class="el" href="a01021.xhtml#ac43bed5bb5ae30b21cadb7ea103998fe" title="When the dispatch event or callback is signalled, the application MUST call this method. ">Dispatch()</a> in this class from the thread that owns (has called Open) the connection.</p>
<p>There can be a number of contexts in the DOB. A connection is linked to the context specified in Open. All operations using a connection is affecting only the context linked to that connection. The intended primary usage is for recording/replay functionality. 0 is defined as the default context.</p>
<p>Note that connectionNameCommonPart together with connectionNameInstancePart must be unique in the node.</p>
<p>If NULL is passed as the stopHandler argument the connection will not receive a stop order. Normally only the main thread of an application should pass a non-NULL stopHandler, and it should then tell other parts of the application to exit. If multiple stop handlers are specified there is NO guaranteed order between which gets called first when a process receives a stop signal.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">connectionNameCommonPart</td><td>Name that identifies the program but not any particular program instance. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">connectionNameInstancePart</td><td>Name that identifies a particular program instance. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Context </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">stopHandler</td><td>Object that implements the <a class="el" href="a01045.xhtml" title="Interface for reception of a stop order. ">StopHandler</a> interface. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dispatcher</td><td>Object that implements the <a class="el" href="a01049.xhtml" title="Interface for reception of a dispatch order. ">Dispatcher</a> interface.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01597.xhtml" title="Exception thrown if dose_main has terminated in an unexpected way, or the application has not yet con...">Safir::Dob::NotOpenException</a></td><td>The connection name is already used by someone else. Try another! </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a01021.xhtml">Connection</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
