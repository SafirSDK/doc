<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::SwReports Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00423.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Safir::SwReports Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Provides methods for sending sofware reports.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5c103837e7673e9519863dcdf9daf397"><td class="memItemLeft" align="right" valign="top">SWRE_INTERFACE_CPP_API void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00423.xhtml#a5c103837e7673e9519863dcdf9daf397">SendFatalErrorReport</a> (const std::wstring &amp;errorCode, const std::wstring &amp;location, const std::wstring &amp;text)</td></tr>
<tr class="memdesc:a5c103837e7673e9519863dcdf9daf397"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a Fatal Error report.  <a href="#a5c103837e7673e9519863dcdf9daf397">More...</a><br /></td></tr>
<tr class="separator:a5c103837e7673e9519863dcdf9daf397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92b64a34d58881a81586e77ee45e6bcd"><td class="memItemLeft" align="right" valign="top">SWRE_INTERFACE_CPP_API void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00423.xhtml#a92b64a34d58881a81586e77ee45e6bcd">SendErrorReport</a> (const std::wstring &amp;errorCode, const std::wstring &amp;location, const std::wstring &amp;text)</td></tr>
<tr class="memdesc:a92b64a34d58881a81586e77ee45e6bcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends an Error report.  <a href="#a92b64a34d58881a81586e77ee45e6bcd">More...</a><br /></td></tr>
<tr class="separator:a92b64a34d58881a81586e77ee45e6bcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a546628f07c64d9bae02f361e45245c4e"><td class="memItemLeft" align="right" valign="top">SWRE_INTERFACE_CPP_API void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00423.xhtml#a546628f07c64d9bae02f361e45245c4e">SendResourceReport</a> (const std::wstring &amp;resourceId, bool allocated, const std::wstring &amp;text)</td></tr>
<tr class="memdesc:a546628f07c64d9bae02f361e45245c4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a Resource report.  <a href="#a546628f07c64d9bae02f361e45245c4e">More...</a><br /></td></tr>
<tr class="separator:a546628f07c64d9bae02f361e45245c4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad255cb0fbaa9ac1ae26d240683056b91"><td class="memItemLeft" align="right" valign="top">SWRE_INTERFACE_CPP_API void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00423.xhtml#ad255cb0fbaa9ac1ae26d240683056b91">SendProgrammingErrorReport</a> (const std::wstring &amp;errorCode, const std::wstring &amp;location, const std::wstring &amp;text)</td></tr>
<tr class="memdesc:ad255cb0fbaa9ac1ae26d240683056b91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a Programming Error report.  <a href="#ad255cb0fbaa9ac1ae26d240683056b91">More...</a><br /></td></tr>
<tr class="separator:ad255cb0fbaa9ac1ae26d240683056b91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08cbd73e409b4401a88955a2508bda58"><td class="memItemLeft" align="right" valign="top">SWRE_INTERFACE_CPP_API void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00423.xhtml#a08cbd73e409b4401a88955a2508bda58">SendProgramInfoReport</a> (const std::wstring &amp;text)</td></tr>
<tr class="memdesc:a08cbd73e409b4401a88955a2508bda58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a Programming Info report.  <a href="#a08cbd73e409b4401a88955a2508bda58">More...</a><br /></td></tr>
<tr class="separator:a08cbd73e409b4401a88955a2508bda58"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Provides methods for sending sofware reports. </p>
<p>There are five predefined report types: </p><pre class="fragment">- Fatal Error Report
- Error Report
- Resource Report
- Program Info report
- Programming Error Report
</pre><p>See the corresponding method for a description of the intended usage.</p>
<p>Some methods have both an error code and a text parameter (both of type string). The intended usage is that the error code parameter should be a short mnemonic string and the text parameter should be a more elaborated description. The mnemonic strings are preferably defined as <a class="el" href="a00410.xhtml" title="This namespace contains all functionality of the DOB (Components DOSE and DOTS). ">Dob</a> parameters.</p>
<p>From the location parameter string it should be easy to identify the exact code location where the report is generated.</p>
<p>All methods are thread safe.</p>
<dl class="deprecated"><dt><b><a class="el" href="a00404.xhtml#_deprecated000005">Deprecated:</a></b></dt><dd>use <a class="el" href="a00422.xhtml#a477005398d326e8cbd1928a1f3e537a7" title="Send log messages to the system logging mechanism. ">Safir::Logging::SendSystemLog()</a> instead.</dd></dl>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="a92b64a34d58881a81586e77ee45e6bcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92b64a34d58881a81586e77ee45e6bcd">&sect;&nbsp;</a></span>SendErrorReport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SWRE_INTERFACE_CPP_API void Safir::SwReports::SendErrorReport </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>errorCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>location</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends an Error report. </p>
<p>Use it to report detected runtime errors, for example a message from an external system in an invalid format. Normally the program continues to execute, possibly in a degraded state.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">errorCode</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined error code (mnemonic). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">location</td><td>Source code location. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined text.</td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="a00404.xhtml#_deprecated000007">Deprecated:</a></b></dt><dd>use <a class="el" href="a00422.xhtml#a477005398d326e8cbd1928a1f3e537a7" title="Send log messages to the system logging mechanism. ">Safir::Logging::SendSystemLog()</a> instead. </dd></dl>

</div>
</div>
<a id="a5c103837e7673e9519863dcdf9daf397"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c103837e7673e9519863dcdf9daf397">&sect;&nbsp;</a></span>SendFatalErrorReport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SWRE_INTERFACE_CPP_API void Safir::SwReports::SendFatalErrorReport </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>errorCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>location</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a Fatal Error report. </p>
<p>Use it to report static conditions that must be fulfilled to be able to start/continue executing the program, for example missing static resources or invalid configuration. Normally the program should not continue to execute.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">errorCode</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined error code (mnemonic). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">location</td><td>Source code location. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined text.</td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="a00404.xhtml#_deprecated000006">Deprecated:</a></b></dt><dd>use <a class="el" href="a00422.xhtml#a477005398d326e8cbd1928a1f3e537a7" title="Send log messages to the system logging mechanism. ">Safir::Logging::SendSystemLog()</a> instead. </dd></dl>

</div>
</div>
<a id="a08cbd73e409b4401a88955a2508bda58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08cbd73e409b4401a88955a2508bda58">&sect;&nbsp;</a></span>SendProgramInfoReport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SWRE_INTERFACE_CPP_API void Safir::SwReports::SendProgramInfoReport </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a Programming Info report. </p>
<p>Use it to report internal program information for debugging purposes. Normally the sending of this report type is controlled by internal status variables that are set by sending backdoor commands to the program.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined text.</td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="a00404.xhtml#_deprecated000010">Deprecated:</a></b></dt><dd>use <a class="el" href="a00422.xhtml#a477005398d326e8cbd1928a1f3e537a7" title="Send log messages to the system logging mechanism. ">Safir::Logging::SendSystemLog()</a> instead. </dd></dl>

</div>
</div>
<a id="ad255cb0fbaa9ac1ae26d240683056b91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad255cb0fbaa9ac1ae26d240683056b91">&sect;&nbsp;</a></span>SendProgrammingErrorReport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SWRE_INTERFACE_CPP_API void Safir::SwReports::SendProgrammingErrorReport </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>errorCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>location</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a Programming Error report. </p>
<p>Use it to report programming errors, that is, errors of assert-type. Normally the program should not continue to execute, in that way enabling a redundant program instance to start.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">errorCode</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined error code (mnemonic). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">location</td><td>Source code location. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined text.</td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="a00404.xhtml#_deprecated000009">Deprecated:</a></b></dt><dd>use <a class="el" href="a00422.xhtml#a477005398d326e8cbd1928a1f3e537a7" title="Send log messages to the system logging mechanism. ">Safir::Logging::SendSystemLog()</a> instead. </dd></dl>

</div>
</div>
<a id="a546628f07c64d9bae02f361e45245c4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a546628f07c64d9bae02f361e45245c4e">&sect;&nbsp;</a></span>SendResourceReport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SWRE_INTERFACE_CPP_API void Safir::SwReports::SendResourceReport </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>resourceId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allocated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sends a Resource report. </p>
<p>Use it to report a missing/acquired dynamic resource. Note that it is ok for dynamic resource to be temporary missing which means that a Resource Report should be sent only after a reasonably number of retries to acquire it.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">resourceId</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined resource id (mnemonic). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">allocated</td><td>True if the resource is allocated, otherwise false. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td><a class="el" href="a00407.xhtml" title="Application. ">Application</a> defined text.</td></tr>
  </table>
  </dd>
</dl>
<dl class="deprecated"><dt><b><a class="el" href="a00404.xhtml#_deprecated000008">Deprecated:</a></b></dt><dd>use <a class="el" href="a00422.xhtml#a477005398d326e8cbd1928a1f3e537a7" title="Send log messages to the system logging mechanism. ">Safir::Logging::SendSystemLog()</a> instead. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00423.xhtml">SwReports</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
