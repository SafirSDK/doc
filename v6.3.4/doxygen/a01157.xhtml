<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::ArrayContainer&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01157.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a01154.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::ArrayContainer&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>STL container for arrays of DOB-containers.  
 <a href="a01157.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00095_source.xhtml">Safir/Dob/Typesystem/ArrayContainer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::ArrayContainer&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01156.svg" width="828" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::ArrayContainer&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01155.svg" width="170" height="218"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a326d69e5ab8d213558b8125460398473"><td class="memItemLeft" align="right" valign="top">typedef Vector::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a326d69e5ab8d213558b8125460398473">iterator</a></td></tr>
<tr class="separator:a326d69e5ab8d213558b8125460398473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad67634a9534bc94bdd19ed48368043e7"><td class="memItemLeft" align="right" valign="top">typedef Vector::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#ad67634a9534bc94bdd19ed48368043e7">const_iterator</a></td></tr>
<tr class="separator:ad67634a9534bc94bdd19ed48368043e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5757b32c01c94ee6b5ef36f5b934e1a"><td class="memItemLeft" align="right" valign="top">typedef Vector::reference&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#ab5757b32c01c94ee6b5ef36f5b934e1a">reference</a></td></tr>
<tr class="separator:ab5757b32c01c94ee6b5ef36f5b934e1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1596e093a99bad956eb0af8fe9d57920"><td class="memItemLeft" align="right" valign="top">typedef Vector::const_reference&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a1596e093a99bad956eb0af8fe9d57920">const_reference</a></td></tr>
<tr class="separator:a1596e093a99bad956eb0af8fe9d57920"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af50c41f4dbe40e13e488d943c9d76b3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#af50c41f4dbe40e13e488d943c9d76b3e">ArrayContainer</a> (const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> <a class="el" href="a01157.xhtml#a11fee36ca24f8f939eb107b6756a8246">size</a>)</td></tr>
<tr class="memdesc:af50c41f4dbe40e13e488d943c9d76b3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with size.  <a href="#af50c41f4dbe40e13e488d943c9d76b3e">More...</a><br /></td></tr>
<tr class="separator:af50c41f4dbe40e13e488d943c9d76b3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cfd3e4e1f71e8a5d4f0f7f7a1e21fb2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a7cfd3e4e1f71e8a5d4f0f7f7a1e21fb2">ArrayContainer</a> (const <a class="el" href="a01157.xhtml">ArrayContainer</a> &amp;other)</td></tr>
<tr class="memdesc:a7cfd3e4e1f71e8a5d4f0f7f7a1e21fb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy Constructor.  <a href="#a7cfd3e4e1f71e8a5d4f0f7f7a1e21fb2">More...</a><br /></td></tr>
<tr class="separator:a7cfd3e4e1f71e8a5d4f0f7f7a1e21fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97c6caeb3c1b258fd2eaf87d046330b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01157.xhtml">ArrayContainer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a97c6caeb3c1b258fd2eaf87d046330b3">operator=</a> (const <a class="el" href="a01157.xhtml">ArrayContainer</a> &amp;other)</td></tr>
<tr class="memdesc:a97c6caeb3c1b258fd2eaf87d046330b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy Assignment operator.  <a href="#a97c6caeb3c1b258fd2eaf87d046330b3">More...</a><br /></td></tr>
<tr class="separator:a97c6caeb3c1b258fd2eaf87d046330b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11fee36ca24f8f939eb107b6756a8246"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a11fee36ca24f8f939eb107b6756a8246">size</a> () const</td></tr>
<tr class="memdesc:a11fee36ca24f8f939eb107b6756a8246"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of the array.  <a href="#a11fee36ca24f8f939eb107b6756a8246">More...</a><br /></td></tr>
<tr class="separator:a11fee36ca24f8f939eb107b6756a8246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d00f181a121e77e46cba488494f3447"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01157.xhtml#ab5757b32c01c94ee6b5ef36f5b934e1a">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a3d00f181a121e77e46cba488494f3447">operator[]</a> (const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> index)</td></tr>
<tr class="memdesc:a3d00f181a121e77e46cba488494f3447"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the vector element at a specified position.  <a href="#a3d00f181a121e77e46cba488494f3447">More...</a><br /></td></tr>
<tr class="separator:a3d00f181a121e77e46cba488494f3447"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac564973fb15a459bac0a5afdaa523800"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01157.xhtml#a1596e093a99bad956eb0af8fe9d57920">const_reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#ac564973fb15a459bac0a5afdaa523800">operator[]</a> (const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> index) const</td></tr>
<tr class="memdesc:ac564973fb15a459bac0a5afdaa523800"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a const reference to the vector element at a specified position.  <a href="#ac564973fb15a459bac0a5afdaa523800">More...</a><br /></td></tr>
<tr class="separator:ac564973fb15a459bac0a5afdaa523800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d50206ea30c05d5770f814a3254e4a0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a1d50206ea30c05d5770f814a3254e4a0">IsChanged</a> () const</td></tr>
<tr class="memdesc:a1d50206ea30c05d5770f814a3254e4a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any element has a change flag set on it.  <a href="#a1d50206ea30c05d5770f814a3254e4a0">More...</a><br /></td></tr>
<tr class="separator:a1d50206ea30c05d5770f814a3254e4a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05e021315f7cbba9f60f55284d4ced46"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01157.xhtml#a05e021315f7cbba9f60f55284d4ced46">SetChanged</a> (bool changed)</td></tr>
<tr class="memdesc:a05e021315f7cbba9f60f55284d4ced46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the change flag on all elements in the array.  <a href="#a05e021315f7cbba9f60f55284d4ced46">More...</a><br /></td></tr>
<tr class="separator:a05e021315f7cbba9f60f55284d4ced46"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class Safir::Dob::Typesystem::ArrayContainer&lt; T &gt;</h3>

<p>STL container for arrays of DOB-containers. </p>
<p>This template class is used for arrays of containers in objects. The arrays cannot change size once they have been created. Apart from that they behave like a normal STL container.</p>
<p>This class exports the following from std::vector:</p>
<p>Types: iterator, const_iterator, reference const_reference;</p>
<p>Methods: begin(), end().</p>
<p>See your STL documentation for information on them</p>
<p>Note: This container is currently a random access container (based on std::vector). At some point in the future it may change to become a reversible container (based on a std::map). Do not assume that the [] operator is constant time. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ad67634a9534bc94bdd19ed48368043e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad67634a9534bc94bdd19ed48368043e7">&sect;&nbsp;</a></span>const_iterator</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef Vector::const_iterator <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::<a class="el" href="a01157.xhtml#ad67634a9534bc94bdd19ed48368043e7">const_iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1596e093a99bad956eb0af8fe9d57920"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1596e093a99bad956eb0af8fe9d57920">&sect;&nbsp;</a></span>const_reference</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef Vector::const_reference <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::<a class="el" href="a01157.xhtml#a1596e093a99bad956eb0af8fe9d57920">const_reference</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a326d69e5ab8d213558b8125460398473"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a326d69e5ab8d213558b8125460398473">&sect;&nbsp;</a></span>iterator</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef Vector::iterator <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::<a class="el" href="a01157.xhtml#a326d69e5ab8d213558b8125460398473">iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab5757b32c01c94ee6b5ef36f5b934e1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5757b32c01c94ee6b5ef36f5b934e1a">&sect;&nbsp;</a></span>reference</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef Vector::reference <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::<a class="el" href="a01157.xhtml#ab5757b32c01c94ee6b5ef36f5b934e1a">reference</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af50c41f4dbe40e13e488d943c9d76b3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af50c41f4dbe40e13e488d943c9d76b3e">&sect;&nbsp;</a></span>ArrayContainer() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::<a class="el" href="a01157.xhtml">ArrayContainer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a>&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor with size. </p>
<p>Creates an array of the given size. Remember that once it has been created the size cannot be changed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>[in] - The desired size of the array. Must be &gt; 0.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>The size argument is &lt;= 0. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7cfd3e4e1f71e8a5d4f0f7f7a1e21fb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cfd3e4e1f71e8a5d4f0f7f7a1e21fb2">&sect;&nbsp;</a></span>ArrayContainer() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::<a class="el" href="a01157.xhtml">ArrayContainer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a01157.xhtml">ArrayContainer</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy Constructor. </p>
<p>Creates a copy of an array</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>[in] - The array to create a copy of. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1d50206ea30c05d5770f814a3254e4a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d50206ea30c05d5770f814a3254e4a0">&sect;&nbsp;</a></span>IsChanged()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if any element has a change flag set on it. </p>
<p>Note that if this array contains objects this call will be recursive.</p>
<dl class="section return"><dt>Returns</dt><dd>true if any element has changed. </dd></dl>

</div>
</div>
<a id="a97c6caeb3c1b258fd2eaf87d046330b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97c6caeb3c1b258fd2eaf87d046330b3">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01157.xhtml">ArrayContainer</a>&amp; <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a01157.xhtml">ArrayContainer</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy Assignment operator. </p>
<p>Copies an array into another array. The arrays must be of the same size.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>[in] - The array to create a copy of.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01237.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>The arrays are not of the same size. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3d00f181a121e77e46cba488494f3447"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d00f181a121e77e46cba488494f3447">&sect;&nbsp;</a></span>operator[]() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01157.xhtml#ab5757b32c01c94ee6b5ef36f5b934e1a">reference</a> <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the vector element at a specified position. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the element to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the element.</dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>The array index is outside the range of the array. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac564973fb15a459bac0a5afdaa523800"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac564973fb15a459bac0a5afdaa523800">&sect;&nbsp;</a></span>operator[]() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01157.xhtml#a1596e093a99bad956eb0af8fe9d57920">const_reference</a> <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a const reference to the vector element at a specified position. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the element to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A const reference to the element.</dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>The array index is outside the range of the array. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a05e021315f7cbba9f60f55284d4ced46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05e021315f7cbba9f60f55284d4ced46">&sect;&nbsp;</a></span>SetChanged()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::SetChanged </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the change flag on all elements in the array. </p>
<p>Note that if this array contains objects this call will be recursive.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - The value to set the change flags to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a11fee36ca24f8f939eb107b6756a8246"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11fee36ca24f8f939eb107b6756a8246">&sect;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> <a class="el" href="a01157.xhtml">Safir::Dob::Typesystem::ArrayContainer</a>&lt; T &gt;::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the size of the array. </p>
<p>This is a constant time operation.</p>
<dl class="section return"><dt>Returns</dt><dd>the size of the array. </dd></dl>

<p>Referenced by <a class="el" href="a01157.xhtml#a97c6caeb3c1b258fd2eaf87d046330b3">Safir::Dob::Typesystem::ArrayContainer&lt; ResponseErrorInfoContainer &gt;::operator=()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01157_a11fee36ca24f8f939eb107b6756a8246_icgraph.svg" width="432" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00412.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a01157.xhtml">ArrayContainer</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
