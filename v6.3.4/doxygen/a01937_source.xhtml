<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Databases/Odbc/Connection.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01937_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Connection.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a01937.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2005-2013 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: JÃ¶rgen Johansson / stjrjo</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef Safir_Databases_Connection_h</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define Safir_Databases_Connection_h</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifndef SAFIR_NO_DEPRECATED</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a01943.xhtml">Safir/Databases/Odbc/Defs.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/InternalDefs.h&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a01949.xhtml">Safir/Dob/Typesystem/Defs.h</a>&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;boost/noncopyable.hpp&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>Databases</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span>Odbc</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">class </span>Environment;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">class </span>Statement;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#pragma warning(disable: 4275)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#pragma warning(disable: 4251)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="a01009.xhtml">   64</a></span>&#160;<span class="keyword">class </span>OLIB_API <a class="code" href="a01009.xhtml">Connection</a> : <span class="keyword">private</span> boost::noncopyable</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a01009.xhtml#a12744938a347d048cf1c1208afe1c790">   69</a></span>&#160;    <a class="code" href="a01009.xhtml#a12744938a347d048cf1c1208afe1c790">Connection</a>():</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        m_hConnection(SQL_NULL_HDBC),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        m_bIsConnected(false)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">// This bit of code will make sure that the client is using the </span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// same size for SQLWCHAR as the library.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        CheckSQLWCHARSize(<span class="keyword">sizeof</span>(SQLWCHAR));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    ~<a class="code" href="a01009.xhtml">Connection</a>();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">void</span> Alloc(<span class="keyword">const</span> <a class="code" href="a01013.xhtml">Environment</a> &amp; environment);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">void</span> Free();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">void</span> Connect(<span class="keyword">const</span> std::wstring &amp; wszConnectionString);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">void</span> Connect(<span class="keywordtype">char</span> * cszConnectionString);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">void</span> Disconnect();</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">void</span> UseAutoTransactions();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">void</span> UseManualTransactions();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">void</span> Commit();</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">void</span> Rollback();</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">void</span> SetConnectAttr(<span class="keywordtype">long</span> lAttribute, <span class="keywordtype">long</span> lValue);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">void</span> SetConnectAttr(<span class="keywordtype">long</span> lAttribute, <span class="keyword">const</span> std::wstring &amp; wszValue);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordtype">void</span> GetConnectAttr(<span class="keywordtype">long</span> lAttribute, <span class="keywordtype">long</span> &amp; lValue) <span class="keyword">const</span>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordtype">void</span> GetConnectAttr(<span class="keywordtype">long</span> lAttribute, <span class="keywordtype">wchar_t</span> * wszValue, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ulLength) <span class="keyword">const</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordtype">bool</span> GetDiagRec(<span class="keywordtype">short</span> sRecNumber,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    std::wstring &amp; SqlState,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    boost::int32_t &amp; NativeError,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    std::wstring &amp; MessageText,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                    <span class="keywordtype">bool</span> &amp; bDataRead) <span class="keyword">const</span>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordtype">bool</span> IsValid() <span class="keyword">const</span>;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordtype">bool</span> IsConnected() <span class="keyword">const</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    SQLHDBC Handle() <span class="keyword">const</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    SQLHDBC m_hConnection;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordtype">bool</span> m_bIsConnected;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keyword">typedef</span> std::pair&lt;std::wstring,std::wstring&gt; StateMessagePair;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment">//returns pair of SQLState and MessageText</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keyword">const</span> StateMessagePair GetDiagRec() <span class="keyword">const</span>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordtype">void</span> AddStatement(<a class="code" href="a01017.xhtml">Statement</a> * pStatement);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordtype">void</span> RemoveStatement(<a class="code" href="a01017.xhtml">Statement</a> * pStatement);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordtype">void</span> EndTran(<span class="keywordtype">short</span> sCompletionType);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordtype">void</span> ThrowReconnectException(   <span class="keyword">const</span> std::wstring &amp; fileName,</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> lineNumber) <span class="keyword">const</span>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">void</span> ThrowReconnectException(   SQLSMALLINT HandleType,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                    SQLHANDLE Handle,</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                    <span class="keyword">const</span> std::wstring &amp; fileName,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> lineNumber) <span class="keyword">const</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    std::vector&lt;Statement *&gt; m_statements;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="a01009.xhtml#acc082c30eb517d5d6a525c7f04b7d42a">  263</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="a01017.xhtml">Safir::Databases::Odbc::Statement</a>;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> CheckSQLWCHARSize(<span class="keyword">const</span> <span class="keywordtype">size_t</span> size);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;};</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="a01009.xhtml#a006ffbda5bb98dc507b87bb4eae395c0">  273</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01009.xhtml#a006ffbda5bb98dc507b87bb4eae395c0">Connection::UseAutoTransactions</a>()</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;{</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    SetConnectAttr(SQL_ATTR_AUTOCOMMIT, static_cast&lt;long&gt;(SQL_AUTOCOMMIT_ON));</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;}</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="a01009.xhtml#a7d50be566ac1abc71a51cf4786dc3030">  279</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01009.xhtml#a7d50be566ac1abc71a51cf4786dc3030">Connection::UseManualTransactions</a>()</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;{</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    SetConnectAttr(SQL_ATTR_AUTOCOMMIT, static_cast&lt;long&gt;(SQL_AUTOCOMMIT_OFF));</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="a01009.xhtml#a6b02e7533bc44783e291739d7e89c3ea">  285</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01009.xhtml#a6b02e7533bc44783e291739d7e89c3ea">Connection::Commit</a>()</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;{</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    EndTran(SQL_COMMIT);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="a01009.xhtml#aac9df42f9c163665ba241f47d221b289">  291</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01009.xhtml#aac9df42f9c163665ba241f47d221b289">Connection::Rollback</a>()</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    EndTran(SQL_ROLLBACK);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;}</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">  297</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">Connection::IsValid</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">return</span> m_hConnection != SQL_NULL_HDBC;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;}</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="a01009.xhtml#a6a3725749fd56453084a6f65a051dc6b">  303</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a01009.xhtml#a6a3725749fd56453084a6f65a051dc6b">Connection::IsConnected</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">return</span> m_bIsConnected;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="a01009.xhtml#a1ae3996bf14406c2767b77dd8bdbcdbd">  309</a></span>&#160;SQLHDBC <a class="code" href="a01009.xhtml#a1ae3996bf14406c2767b77dd8bdbcdbd">Connection::Handle</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">return</span> m_hConnection;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;} <span class="comment">// End namespace Odbc</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;} <span class="comment">// End namespace Databases</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;} <span class="comment">// End namespace Safir</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="preprocessor">#endif //Safir_Databases_Connection_h</span></div><div class="ttc" id="a01009_xhtml_a1ae3996bf14406c2767b77dd8bdbcdbd"><div class="ttname"><a href="a01009.xhtml#a1ae3996bf14406c2767b77dd8bdbcdbd">Safir::Databases::Odbc::Connection::Handle</a></div><div class="ttdeci">SQLHDBC Handle() const</div><div class="ttdoc">Returns the ODBC Handle of the environment. </div><div class="ttdef"><b>Definition:</b> Connection.h:309</div></div>
<div class="ttc" id="a01949_xhtml"><div class="ttname"><a href="a01949.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a01009_xhtml_a12744938a347d048cf1c1208afe1c790"><div class="ttname"><a href="a01009.xhtml#a12744938a347d048cf1c1208afe1c790">Safir::Databases::Odbc::Connection::Connection</a></div><div class="ttdeci">Connection()</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> Connection.h:69</div></div>
<div class="ttc" id="a01009_xhtml_a6a3725749fd56453084a6f65a051dc6b"><div class="ttname"><a href="a01009.xhtml#a6a3725749fd56453084a6f65a051dc6b">Safir::Databases::Odbc::Connection::IsConnected</a></div><div class="ttdeci">bool IsConnected() const</div><div class="ttdoc">Checks if a connection has been established. </div><div class="ttdef"><b>Definition:</b> Connection.h:303</div></div>
<div class="ttc" id="a00412_xhtml_a82357c789f9fee9d69beaf1993e4f20c"><div class="ttname"><a href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a></div><div class="ttdeci">DotsC_Int64 Int64</div><div class="ttdoc">64 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:69</div></div>
<div class="ttc" id="a01009_xhtml"><div class="ttname"><a href="a01009.xhtml">Safir::Databases::Odbc::Connection</a></div><div class="ttdoc">The Connection class models a connection made to the database engine. </div><div class="ttdef"><b>Definition:</b> Connection.h:64</div></div>
<div class="ttc" id="a01009_xhtml_a2cbdd9396900d0c078eeb540ca782b16"><div class="ttname"><a href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">Safir::Databases::Odbc::Connection::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks if this connection is a valid allocated connection. </div><div class="ttdef"><b>Definition:</b> Connection.h:297</div></div>
<div class="ttc" id="a01009_xhtml_a7d50be566ac1abc71a51cf4786dc3030"><div class="ttname"><a href="a01009.xhtml#a7d50be566ac1abc71a51cf4786dc3030">Safir::Databases::Odbc::Connection::UseManualTransactions</a></div><div class="ttdeci">void UseManualTransactions()</div><div class="ttdoc">Set odbc to require manual commits to end transactions. </div><div class="ttdef"><b>Definition:</b> Connection.h:279</div></div>
<div class="ttc" id="a01017_xhtml"><div class="ttname"><a href="a01017.xhtml">Safir::Databases::Odbc::Statement</a></div><div class="ttdoc">The Statement class models a statement made to the database engine and one statement object should be...</div><div class="ttdef"><b>Definition:</b> Statement.h:64</div></div>
<div class="ttc" id="a01009_xhtml_a6b02e7533bc44783e291739d7e89c3ea"><div class="ttname"><a href="a01009.xhtml#a6b02e7533bc44783e291739d7e89c3ea">Safir::Databases::Odbc::Connection::Commit</a></div><div class="ttdeci">void Commit()</div><div class="ttdoc">Commits the changes permanently made in this transaction. </div><div class="ttdef"><b>Definition:</b> Connection.h:285</div></div>
<div class="ttc" id="a01943_xhtml"><div class="ttname"><a href="a01943.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01009_xhtml_a006ffbda5bb98dc507b87bb4eae395c0"><div class="ttname"><a href="a01009.xhtml#a006ffbda5bb98dc507b87bb4eae395c0">Safir::Databases::Odbc::Connection::UseAutoTransactions</a></div><div class="ttdeci">void UseAutoTransactions()</div><div class="ttdoc">Set odbc to automatically commit each transaction after a successful query. </div><div class="ttdef"><b>Definition:</b> Connection.h:273</div></div>
<div class="ttc" id="a01013_xhtml"><div class="ttname"><a href="a01013.xhtml">Safir::Databases::Odbc::Environment</a></div><div class="ttdoc">The Environment class models the necessary setup each application neeeds in order to access the datab...</div><div class="ttdef"><b>Definition:</b> Environment.h:54</div></div>
<div class="ttc" id="a01009_xhtml_aac9df42f9c163665ba241f47d221b289"><div class="ttname"><a href="a01009.xhtml#aac9df42f9c163665ba241f47d221b289">Safir::Databases::Odbc::Connection::Rollback</a></div><div class="ttdeci">void Rollback()</div><div class="ttdoc">Remove all changes made in this transaction. </div><div class="ttdef"><b>Definition:</b> Connection.h:291</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_fa1b014b70805ccf67cfe07b5d80caac.xhtml">Databases</a></li><li class="navelem"><a class="el" href="dir_78bd80b0b7e210d821e6c8d23953fe6d.xhtml">Odbc</a></li><li class="navelem"><a class="el" href="a01937.xhtml">Connection.h</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:26 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
