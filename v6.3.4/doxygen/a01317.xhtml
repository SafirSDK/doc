<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::Serialization Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01317.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="a01314.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::Serialization Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Functions for serializing objects to binary, XML and JSON forms.  
 <a href="a01317.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00152_source.xhtml">Safir/Dob/Typesystem/Serialization.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a924811da5bad844ad6aff0a395503fde"><td class="memItemLeft" align="right" valign="top">static const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#a924811da5bad844ad6aff0a395503fde">ToXml</a> (const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a> object)</td></tr>
<tr class="memdesc:a924811da5bad844ad6aff0a395503fde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serialize an object to XML.  <a href="#a924811da5bad844ad6aff0a395503fde">More...</a><br /></td></tr>
<tr class="separator:a924811da5bad844ad6aff0a395503fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8809df7db714d66b524625552b295710"><td class="memItemLeft" align="right" valign="top">static const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#a8809df7db714d66b524625552b295710">ToJson</a> (const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a> object)</td></tr>
<tr class="memdesc:a8809df7db714d66b524625552b295710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serialize an object to JSON.  <a href="#a8809df7db714d66b524625552b295710">More...</a><br /></td></tr>
<tr class="separator:a8809df7db714d66b524625552b295710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24703ecc7dd4e597ff65c17521077584"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#a24703ecc7dd4e597ff65c17521077584">ToObject</a> (const std::wstring &amp;xml)</td></tr>
<tr class="memdesc:a24703ecc7dd4e597ff65c17521077584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserialize an XML serialization.  <a href="#a24703ecc7dd4e597ff65c17521077584">More...</a><br /></td></tr>
<tr class="separator:a24703ecc7dd4e597ff65c17521077584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa32e73eb6a8fbc0d5fe8e9cb05ab37ae"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#aa32e73eb6a8fbc0d5fe8e9cb05ab37ae">ToObjectFromJson</a> (const std::wstring &amp;json)</td></tr>
<tr class="memdesc:aa32e73eb6a8fbc0d5fe8e9cb05ab37ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserialize an JSON serialization.  <a href="#aa32e73eb6a8fbc0d5fe8e9cb05ab37ae">More...</a><br /></td></tr>
<tr class="separator:aa32e73eb6a8fbc0d5fe8e9cb05ab37ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7c9953f38d135fc669b4958ff14cb53"><td class="memItemLeft" align="right" valign="top">static const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#ae7c9953f38d135fc669b4958ff14cb53">ToXml</a> (const <a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">BinarySerialization</a> &amp;bin)</td></tr>
<tr class="memdesc:ae7c9953f38d135fc669b4958ff14cb53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a binary serialization to XML.  <a href="#ae7c9953f38d135fc669b4958ff14cb53">More...</a><br /></td></tr>
<tr class="separator:ae7c9953f38d135fc669b4958ff14cb53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80e8309607f49cc52ce6a3029e4a5455"><td class="memItemLeft" align="right" valign="top">static const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#a80e8309607f49cc52ce6a3029e4a5455">ToJson</a> (const <a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">BinarySerialization</a> &amp;bin)</td></tr>
<tr class="memdesc:a80e8309607f49cc52ce6a3029e4a5455"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a binary serialization to JSON.  <a href="#a80e8309607f49cc52ce6a3029e4a5455">More...</a><br /></td></tr>
<tr class="separator:a80e8309607f49cc52ce6a3029e4a5455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95006565f1e19f4a73112d71cf85546a"><td class="memItemLeft" align="right" valign="top">static const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#a95006565f1e19f4a73112d71cf85546a">ToXml</a> (const char *const blob)</td></tr>
<tr class="memdesc:a95006565f1e19f4a73112d71cf85546a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a blob to XML.  <a href="#a95006565f1e19f4a73112d71cf85546a">More...</a><br /></td></tr>
<tr class="separator:a95006565f1e19f4a73112d71cf85546a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7bc1a6cf8ee0031f202bb53e1bd1e84"><td class="memItemLeft" align="right" valign="top">static const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#ae7bc1a6cf8ee0031f202bb53e1bd1e84">ToJson</a> (const char *const blob)</td></tr>
<tr class="memdesc:ae7bc1a6cf8ee0031f202bb53e1bd1e84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a blob to JSON.  <a href="#ae7bc1a6cf8ee0031f202bb53e1bd1e84">More...</a><br /></td></tr>
<tr class="separator:ae7bc1a6cf8ee0031f202bb53e1bd1e84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8629c0c03e6fe3376babb453f94bc27b"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#a8629c0c03e6fe3376babb453f94bc27b">ToBinary</a> (const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a> object, <a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">Dob::Typesystem::BinarySerialization</a> &amp;binary)</td></tr>
<tr class="memdesc:a8629c0c03e6fe3376babb453f94bc27b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Serialize an object to binary form.  <a href="#a8629c0c03e6fe3376babb453f94bc27b">More...</a><br /></td></tr>
<tr class="separator:a8629c0c03e6fe3376babb453f94bc27b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacce73b59251e2dd5e530de8735f30ee"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01317.xhtml#aacce73b59251e2dd5e530de8735f30ee">ToObject</a> (const <a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">Dob::Typesystem::BinarySerialization</a> &amp;binary)</td></tr>
<tr class="memdesc:aacce73b59251e2dd5e530de8735f30ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserialize a binary serialization and create an object.  <a href="#aacce73b59251e2dd5e530de8735f30ee">More...</a><br /></td></tr>
<tr class="separator:aacce73b59251e2dd5e530de8735f30ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Functions for serializing objects to binary, XML and JSON forms. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8629c0c03e6fe3376babb453f94bc27b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8629c0c03e6fe3376babb453f94bc27b">&sect;&nbsp;</a></span>ToBinary()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Safir::Dob::Typesystem::Serialization::ToBinary </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td>
          <td class="paramname"><em>object</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">Dob::Typesystem::BinarySerialization</a> &amp;&#160;</td>
          <td class="paramname"><em>binary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Serialize an object to binary form. </p>
<p>The serialization is put into a variable of type BinarySerialization, which is of type std::vector&lt;char&gt;. If you need to get hold of a "raw" C-pointer to the data use &amp;binary[0]. See Effective STL <a class="el" href="a01573.xhtml" title="The baseclass for all items. ">Item</a> 16 for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">object</td><td>- The object to serialize </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">binary</td><td>- The destination of the serialization </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>- There is something wrong with the object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8809df7db714d66b524625552b295710"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8809df7db714d66b524625552b295710">&sect;&nbsp;</a></span>ToJson() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::wstring Safir::Dob::Typesystem::Serialization::ToJson </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Serialize an object to JSON. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">object</td><td>- The object to serialize </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The json serialization </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>- There is something wrong with the object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a80e8309607f49cc52ce6a3029e4a5455"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80e8309607f49cc52ce6a3029e4a5455">&sect;&nbsp;</a></span>ToJson() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::wstring Safir::Dob::Typesystem::Serialization::ToJson </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">BinarySerialization</a> &amp;&#160;</td>
          <td class="paramname"><em>bin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a binary serialization to JSON. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bin</td><td>- the binary serialization to convert to json. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The json of the binary serialization. </dd></dl>

</div>
</div>
<a id="ae7bc1a6cf8ee0031f202bb53e1bd1e84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7bc1a6cf8ee0031f202bb53e1bd1e84">&sect;&nbsp;</a></span>ToJson() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::wstring Safir::Dob::Typesystem::Serialization::ToJson </td>
          <td>(</td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>blob</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a blob to JSON. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blob</td><td>- the blob to convert to json. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The json of the blob. </dd></dl>

</div>
</div>
<a id="a24703ecc7dd4e597ff65c17521077584"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24703ecc7dd4e597ff65c17521077584">&sect;&nbsp;</a></span>ToObject() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a> Safir::Dob::Typesystem::Serialization::ToObject </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>xml</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deserialize an XML serialization. </p>
<p>This method creates a new object from a given xml serialization. It uses the <a class="el" href="a01281.xhtml" title="This class is an object factory for all automatically generated DOB classes. ">ObjectFactory</a> to accomplish this.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">xml</td><td>- The xml to convert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A boost::shared_ptr to the new object </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>If there is something wrong with the XML or if the type represented by the serialization isn't found in the <a class="el" href="a01281.xhtml" title="This class is an object factory for all automatically generated DOB classes. ">ObjectFactory</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aacce73b59251e2dd5e530de8735f30ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacce73b59251e2dd5e530de8735f30ee">&sect;&nbsp;</a></span>ToObject() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a> Safir::Dob::Typesystem::Serialization::ToObject </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">Dob::Typesystem::BinarySerialization</a> &amp;&#160;</td>
          <td class="paramname"><em>binary</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deserialize a binary serialization and create an object. </p>
<p>It uses the <a class="el" href="a01281.xhtml" title="This class is an object factory for all automatically generated DOB classes. ">ObjectFactory</a> to accomplish this. If you have a char * that you want to deserialize the easiest way is to pass it to the <a class="el" href="a01281.xhtml" title="This class is an object factory for all automatically generated DOB classes. ">ObjectFactory</a> instead.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">binary</td><td>- The binary serialization to deserialize. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A boost::shared_ptr to the new object </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>If the type represented by the serialization isn't found in the <a class="el" href="a01281.xhtml" title="This class is an object factory for all automatically generated DOB classes. ">ObjectFactory</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa32e73eb6a8fbc0d5fe8e9cb05ab37ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa32e73eb6a8fbc0d5fe8e9cb05ab37ae">&sect;&nbsp;</a></span>ToObjectFromJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a> Safir::Dob::Typesystem::Serialization::ToObjectFromJson </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>json</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deserialize an JSON serialization. </p>
<p>This method creates a new object from a given json serialization. It uses the <a class="el" href="a01281.xhtml" title="This class is an object factory for all automatically generated DOB classes. ">ObjectFactory</a> to accomplish this.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">json</td><td>- The json to convert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A boost::shared_ptr to the new object </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>If there is something wrong with the JSON or if the type represented by the serialization isn't found in the <a class="el" href="a01281.xhtml" title="This class is an object factory for all automatically generated DOB classes. ">ObjectFactory</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a924811da5bad844ad6aff0a395503fde"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a924811da5bad844ad6aff0a395503fde">&sect;&nbsp;</a></span>ToXml() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::wstring Safir::Dob::Typesystem::Serialization::ToXml </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td>
          <td class="paramname"><em>object</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Serialize an object to XML. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">object</td><td>- The object to serialize </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The xml serialization </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>- There is something wrong with the object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae7c9953f38d135fc669b4958ff14cb53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7c9953f38d135fc669b4958ff14cb53">&sect;&nbsp;</a></span>ToXml() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::wstring Safir::Dob::Typesystem::Serialization::ToXml </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a0d0a2d6e57953b8c1bb261ccdcedee2c">BinarySerialization</a> &amp;&#160;</td>
          <td class="paramname"><em>bin</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a binary serialization to XML. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bin</td><td>- the binary serialization to convert to xml. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The xml of the binary serialization. </dd></dl>

</div>
</div>
<a id="a95006565f1e19f4a73112d71cf85546a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95006565f1e19f4a73112d71cf85546a">&sect;&nbsp;</a></span>ToXml() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::wstring Safir::Dob::Typesystem::Serialization::ToXml </td>
          <td>(</td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>blob</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert a blob to XML. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">blob</td><td>- the blob to convert to xml. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The xml of the blob. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00412.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a01317.xhtml">Serialization</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
