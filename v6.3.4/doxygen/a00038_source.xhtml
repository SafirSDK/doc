<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Databases/Odbc/Statement.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00038_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Statement.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00038.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2005-2013 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: JÃ¶rgen Johansson / stjrjo</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef Safir_Databases_Statement_h</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define Safir_Databases_Statement_h</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#ifndef SAFIR_NO_DEPRECATED</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="a01943.xhtml">Safir/Databases/Odbc/Defs.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/InternalDefs.h&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/Parameter.h&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/Column.h&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/BufferedWideStringParameter.h&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/NonBufferedWideStringParameter.h&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/BufferedBinaryParameter.h&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/NonBufferedBinaryParameter.h&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/BinaryColumn.h&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;Safir/Databases/Odbc/Internal/WideStringColumn.h&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;boost/noncopyable.hpp&gt;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00116.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span>Databases</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span>Odbc</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">class </span>Connection;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#pragma warning(push)</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#pragma warning(disable: 4275)</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="a01017.xhtml">   64</a></span>&#160;<span class="keyword">class </span>OLIB_API <a class="code" href="a01017.xhtml">Statement</a> : <span class="keyword">private</span> boost::noncopyable</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="a01017.xhtml">Statement</a>();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    ~<a class="code" href="a01017.xhtml">Statement</a>();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> Alloc(<a class="code" href="a01009.xhtml">Connection</a> &amp; pConnection);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> Free();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">void</span> CloseCursor();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">void</span> Execute();</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span> Prepare(<span class="keyword">const</span> std::wstring &amp; wszSqlCommand);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordtype">void</span> ExecDirect(<span class="keyword">const</span> std::wstring &amp; wszSqlCommand);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">bool</span> Fetch();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">bool</span> MoreResults();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;   <span class="keywordtype">int</span> GetNumberOfColumns() <span class="keyword">const</span>;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordtype">void</span> SetStmtAttr(<span class="keywordtype">long</span> lAttribute, <span class="keywordtype">long</span> lValue);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">void</span> SetStmtAttr(<span class="keywordtype">long</span> lAttribute, <span class="keyword">const</span> std::wstring &amp; wszValue);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordtype">void</span> GetStmtAttr(<span class="keywordtype">long</span> lAttribute, <span class="keywordtype">long</span> &amp; lValue) <span class="keyword">const</span>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">void</span> GetStmtAttr(<span class="keywordtype">long</span> lAttribute, <span class="keywordtype">wchar_t</span> * wszValue, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ulLength) <span class="keyword">const</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">bool</span> ParamData(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> &amp; lParameter) <span class="keyword">const</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sCType, <span class="keywordtype">short</span> sSqlType, <span class="keyword">class</span> Type, <span class="keywordtype">short</span> sInputOutputType, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> lColumnSize&gt;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordtype">void</span> BindParameter( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usParameterNumber,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                        Internal::Parameter&lt;sCType, sSqlType, Type, sInputOutputType,lColumnSize&gt; &amp; param );</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sSqlType, <span class="keywordtype">short</span> sInputOutputType&gt;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordtype">void</span> BindParameter( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usParameterNumber,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        Internal::NonBufferedWideStringParameter&lt;sSqlType, sInputOutputType&gt; &amp; param );</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sCType, <span class="keywordtype">short</span> sSqlType, <span class="keyword">class</span> Type, <span class="keywordtype">short</span> sInputOutputType, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> lColumnSize&gt;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordtype">void</span> BindLongParameter( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usParameterNumber,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                            Internal::Parameter&lt;sCType, sSqlType, Type, sInputOutputType,lColumnSize&gt; &amp; param );</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sValueType, <span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordtype">void</span> BindColumn(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usColumnNumber,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    Internal::Column&lt;sValueType, Type&gt; &amp; column );</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sValueType, <span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordtype">bool</span> GetData(   <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usColumnNumber,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    Internal::Column&lt;sValueType, Type&gt; &amp; column );</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sCType, <span class="keywordtype">short</span> sSqlType, <span class="keyword">class</span> Type, <span class="keywordtype">short</span> sInputOutputType, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> lColumnSize&gt;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordtype">void</span> PutData(Internal::Parameter&lt;sCType, sSqlType, Type, sInputOutputType,lColumnSize&gt; &amp; param );</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordtype">bool</span> GetDiagRec(<span class="keywordtype">short</span> sRecNumber,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    std::wstring &amp; SqlState,</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                    boost::int32_t &amp; NativeError,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    std::wstring &amp; MessageText,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                    <span class="keywordtype">bool</span> &amp; bDataRead) <span class="keyword">const</span>;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordtype">bool</span> IsValid() <span class="keyword">const</span>;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    SQLHDBC Handle() <span class="keyword">const</span>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    SQLHSTMT m_hStatement;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="a01009.xhtml">Connection</a> * m_pConnection;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordtype">void</span> SetNotValid();</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordtype">void</span> ThrowException(<span class="keyword">const</span> std::wstring &amp; fileName,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                        <span class="keyword">const</span> <a class="code" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> lineNumber,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                        SQLRETURN original_returncode) <span class="keyword">const</span>;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordtype">void</span> ThrowException(SQLSMALLINT HandleType,</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                        SQLHANDLE Handle,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                        <span class="keyword">const</span> std::wstring &amp; fileName,</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                        <span class="keyword">const</span> <a class="code" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> lineNumber,</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                        SQLRETURN original_returncode) <span class="keyword">const</span>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="a01017.xhtml#afa87764833ef1f53fd7dd6f69f8c60a3">  332</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="a01009.xhtml">Safir::Databases::Odbc::Connection</a>;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;};</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor">#pragma warning(pop)</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="a01017.xhtml#acea95013c292179ba7fef4e88e4f71eb">  340</a></span>&#160;SQLHDBC <a class="code" href="a01017.xhtml#acea95013c292179ba7fef4e88e4f71eb">Statement::Handle</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordflow">return</span> m_hStatement;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="a01017.xhtml#ac8110b8ab8e19371c1e43d164bcfe3f6">  346</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a01017.xhtml#ac8110b8ab8e19371c1e43d164bcfe3f6">Statement::IsValid</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">return</span> m_hStatement != SQL_NULL_HSTMT;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keyword">inline</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="keywordtype">void</span> Statement::SetNotValid()</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;{</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    m_hStatement = SQL_NULL_HSTMT;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sValueType, <span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="a01017.xhtml#a5d6ffee4d4cdc80513813e54b805a3d0">  358</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a01017.xhtml#a5d6ffee4d4cdc80513813e54b805a3d0">Statement::GetData</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usColumnNumber,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                        Internal::Column&lt;sValueType, Type&gt; &amp; column )</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;{</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    SQLRETURN ret;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordtype">bool</span> bDataFound = <span class="keyword">true</span>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">IsValid</a>())</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a>(L<span class="stringliteral">&quot;Using an invalid statement&quot;</span>,<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    ret = ::SQLGetData( m_hStatement,                   <span class="comment">// StatementHandle</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                        usColumnNumber,                 <span class="comment">// ColumnNumber,</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                        column.m_csValueType,           <span class="comment">// TargetType,</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                        column.GetValuePtr(),           <span class="comment">// TargetValuePtr,</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                        column.GetSize(),               <span class="comment">// BufferLength,</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                        column.GetLengthOrIndPtr());    <span class="comment">// StrLen_or_Ind</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordflow">if</span> (ret==SQL_NO_DATA_FOUND)</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        bDataFound = <span class="keyword">false</span>;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!SQL_SUCCEEDED(ret))</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    {</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        ThrowException(<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__, ret);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    }</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">return</span> bDataFound;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sValueType, <span class="keyword">class</span> Type&gt;</div><div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="a01017.xhtml#a084ff1ca2c5033e440a4bf3ca15af65d">  384</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01017.xhtml#a084ff1ca2c5033e440a4bf3ca15af65d">Statement::BindColumn</a>( <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usColumnNumber,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                            Internal::Column&lt;sValueType, Type&gt; &amp; column )</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;{</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    SQLRETURN ret;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">IsValid</a>())</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a>(L<span class="stringliteral">&quot;Using an invalid statement&quot;</span>,<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    ret = ::SQLBindCol( m_hStatement,                   <span class="comment">// StatementHandle</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                        usColumnNumber,                 <span class="comment">// ColumnNumber,</span></div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                        column.m_csValueType,           <span class="comment">// TargetType,</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                        column.GetValuePtr(),           <span class="comment">// TargetValuePtr,</span></div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                        column.GetSize(),               <span class="comment">// BufferLength,</span></div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                        column.GetLengthOrIndPtr());    <span class="comment">// StrLen_or_Ind</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keywordflow">if</span> (!SQL_SUCCEEDED(ret))</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    {</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        ThrowException(<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__, ret);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    }</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;}</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sCType, <span class="keywordtype">short</span> sSqlType, <span class="keyword">class</span> Type, <span class="keywordtype">short</span> sInputOutputType, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> lColumnSize&gt;</div><div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="a01017.xhtml#a80498e2e62d8c7bf5983100beb7bf14f">  405</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01017.xhtml#a80498e2e62d8c7bf5983100beb7bf14f">Statement::BindParameter</a>(  <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usParameterNumber,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                Internal::Parameter&lt;sCType, sSqlType, Type, sInputOutputType,lColumnSize&gt; &amp; param )</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;{</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    SQLRETURN ret;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">IsValid</a>())</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a>(L<span class="stringliteral">&quot;Using an invalid statement&quot;</span>,<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    ret = ::SQLBindParameter(   m_hStatement,                   <span class="comment">// StatementHandle</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                                usParameterNumber,              <span class="comment">// ParameterNumber,</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                                param.m_csInputOutputType,      <span class="comment">// InputOutputType</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                param.m_csCType,                <span class="comment">// ValueType</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                                param.m_csSqlType,              <span class="comment">// ParameterType</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                                param.GetColumnSize(),          <span class="comment">// ColumnSize</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                param.GetDecimal(),             <span class="comment">// DecimalDigits</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                param.GetValuePtr(),            <span class="comment">// ParameterValuePtr</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                param.GetSize(),                <span class="comment">// BufferLength</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                param.GetLengthOrIndPtr() );    <span class="comment">// StrLen_or_Ind</span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordflow">if</span> (!SQL_SUCCEEDED(ret))</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    {</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        ThrowException(<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__, ret);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    }</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;}</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sSqlType, <span class="keywordtype">short</span> sInputOutputType&gt;</div><div class="line"><a name="l00430"></a><span class="lineno"><a class="line" href="a01017.xhtml#a05731dc5ed19a3eb4d2c1f267d6bb092">  430</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01017.xhtml#a80498e2e62d8c7bf5983100beb7bf14f">Statement::BindParameter</a>(  <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <span class="comment">/*usParameterNumber*/</span>,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                Internal::NonBufferedWideStringParameter&lt;sSqlType, sInputOutputType&gt; &amp; <span class="comment">/*param*/</span> )</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;{</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a>(L<span class="stringliteral">&quot;This parameter can only be used with PutData&quot;</span>,<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;}</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sCType, <span class="keywordtype">short</span> sSqlType, <span class="keyword">class</span> Type, <span class="keywordtype">short</span> sInputOutputType, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> lColumnSize&gt;</div><div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="a01017.xhtml#a5d81aab962b1c84fcec0d420ca009e54">  438</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01017.xhtml#a5d81aab962b1c84fcec0d420ca009e54">Statement::BindLongParameter</a>(  <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> usParameterNumber,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                    Internal::Parameter&lt;sCType, sSqlType, Type, sInputOutputType,lColumnSize&gt; &amp; param )</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;{</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    SQLRETURN ret;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">IsValid</a>())</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a>(L<span class="stringliteral">&quot;Using an invalid statement&quot;</span>,<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    ret = ::SQLBindParameter(   m_hStatement,                   <span class="comment">// StatementHandle</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                                usParameterNumber,              <span class="comment">// ParameterNumber,</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                                param.m_csInputOutputType,      <span class="comment">// InputOutputType</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                                param.m_csCType,                <span class="comment">// ValueType</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                                param.m_csSqlType,              <span class="comment">// ParameterType</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                                param.GetColumnSize(),          <span class="comment">// ColumnSize</span></div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                                param.GetDecimal(),             <span class="comment">// DecimalDigits</span></div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                <span class="keyword">reinterpret_cast&lt;</span>SQLPOINTER<span class="keyword">&gt;</span>(usParameterNumber),    <span class="comment">// ParameterValuePtr</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                param.GetSize(),                <span class="comment">// BufferLength</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                param.GetLengthOrIndPtr() );    <span class="comment">// StrLen_or_Ind</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keywordflow">if</span> (!SQL_SUCCEEDED(ret))</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    {</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        ThrowException(<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__, ret);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    }</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;}</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">short</span> sCType, <span class="keywordtype">short</span> sSqlType, <span class="keyword">class</span> Type, <span class="keywordtype">short</span> sInputOutputType, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> lColumnSize&gt;</div><div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="a01017.xhtml#a6195945181f5002d7a0da5942110672b">  463</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a01017.xhtml#a6195945181f5002d7a0da5942110672b">Statement::PutData</a>(Internal::Parameter&lt;sCType, sSqlType, Type, sInputOutputType,lColumnSize&gt; &amp; param )</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;{</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    SQLRETURN ret;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">IsValid</a>())</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a>(L<span class="stringliteral">&quot;Using an invalid statement&quot;</span>,<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    ret = ::SQLPutData( m_hStatement,                   <span class="comment">// StatementHandle</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        param.GetValuePtr(),            <span class="comment">// ParameterValuePtr</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                        param.GetSize() );       <span class="comment">// StrLen_or_Ind</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">if</span> (!SQL_SUCCEEDED(ret))</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    {</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        ThrowException(<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__, ret);</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    }</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;}</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;} <span class="comment">// End namespace Odbc</span></div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;} <span class="comment">// End namespace Databases</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;} <span class="comment">// End namespace Safir</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="preprocessor">#endif // Safir_Databases_Statement_h</span></div><div class="ttc" id="a00116_xhtml_aa50218d805518247edfff3d9328be684"><div class="ttname"><a href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a></div><div class="ttdeci">#define __WFILE__</div><div class="ttdef"><b>Definition:</b> Exceptions.h:31</div></div>
<div class="ttc" id="a01017_xhtml_a6195945181f5002d7a0da5942110672b"><div class="ttname"><a href="a01017.xhtml#a6195945181f5002d7a0da5942110672b">Safir::Databases::Odbc::Statement::PutData</a></div><div class="ttdeci">void PutData(Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;param)</div><div class="ttdoc">Put data into a parameter. </div><div class="ttdef"><b>Definition:</b> Statement.h:463</div></div>
<div class="ttc" id="a01017_xhtml_a5d6ffee4d4cdc80513813e54b805a3d0"><div class="ttname"><a href="a01017.xhtml#a5d6ffee4d4cdc80513813e54b805a3d0">Safir::Databases::Odbc::Statement::GetData</a></div><div class="ttdeci">bool GetData(unsigned short usColumnNumber, Internal::Column&lt; sValueType, Type &gt; &amp;column)</div><div class="ttdoc">Get data from a column. </div><div class="ttdef"><b>Definition:</b> Statement.h:358</div></div>
<div class="ttc" id="a01017_xhtml_ac8110b8ab8e19371c1e43d164bcfe3f6"><div class="ttname"><a href="a01017.xhtml#ac8110b8ab8e19371c1e43d164bcfe3f6">Safir::Databases::Odbc::Statement::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks if this statement is a valid allocated statement. </div><div class="ttdef"><b>Definition:</b> Statement.h:346</div></div>
<div class="ttc" id="a00412_xhtml_a82357c789f9fee9d69beaf1993e4f20c"><div class="ttname"><a href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a></div><div class="ttdeci">DotsC_Int64 Int64</div><div class="ttdoc">64 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:69</div></div>
<div class="ttc" id="a01009_xhtml"><div class="ttname"><a href="a01009.xhtml">Safir::Databases::Odbc::Connection</a></div><div class="ttdoc">The Connection class models a connection made to the database engine. </div><div class="ttdef"><b>Definition:</b> Connection.h:64</div></div>
<div class="ttc" id="a01009_xhtml_a2cbdd9396900d0c078eeb540ca782b16"><div class="ttname"><a href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">Safir::Databases::Odbc::Connection::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks if this connection is a valid allocated connection. </div><div class="ttdef"><b>Definition:</b> Connection.h:297</div></div>
<div class="ttc" id="a01017_xhtml"><div class="ttname"><a href="a01017.xhtml">Safir::Databases::Odbc::Statement</a></div><div class="ttdoc">The Statement class models a statement made to the database engine and one statement object should be...</div><div class="ttdef"><b>Definition:</b> Statement.h:64</div></div>
<div class="ttc" id="a01017_xhtml_acea95013c292179ba7fef4e88e4f71eb"><div class="ttname"><a href="a01017.xhtml#acea95013c292179ba7fef4e88e4f71eb">Safir::Databases::Odbc::Statement::Handle</a></div><div class="ttdeci">SQLHDBC Handle() const</div><div class="ttdoc">Returns the ODBC Handle of the statement. </div><div class="ttdef"><b>Definition:</b> Statement.h:340</div></div>
<div class="ttc" id="a01943_xhtml"><div class="ttname"><a href="a01943.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01237_xhtml"><div class="ttname"><a href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:361</div></div>
<div class="ttc" id="a00116_xhtml"><div class="ttname"><a href="a00116.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a01017_xhtml_a5d81aab962b1c84fcec0d420ca009e54"><div class="ttname"><a href="a01017.xhtml#a5d81aab962b1c84fcec0d420ca009e54">Safir::Databases::Odbc::Statement::BindLongParameter</a></div><div class="ttdeci">void BindLongParameter(unsigned short usParameterNumber, Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;param)</div><div class="ttdoc">Binds a long parameter to a statement. </div><div class="ttdef"><b>Definition:</b> Statement.h:438</div></div>
<div class="ttc" id="a01017_xhtml_a80498e2e62d8c7bf5983100beb7bf14f"><div class="ttname"><a href="a01017.xhtml#a80498e2e62d8c7bf5983100beb7bf14f">Safir::Databases::Odbc::Statement::BindParameter</a></div><div class="ttdeci">void BindParameter(unsigned short usParameterNumber, Internal::Parameter&lt; sCType, sSqlType, Type, sInputOutputType, lColumnSize &gt; &amp;param)</div><div class="ttdoc">Binds a parameter to a statement. </div><div class="ttdef"><b>Definition:</b> Statement.h:405</div></div>
<div class="ttc" id="a01017_xhtml_a084ff1ca2c5033e440a4bf3ca15af65d"><div class="ttname"><a href="a01017.xhtml#a084ff1ca2c5033e440a4bf3ca15af65d">Safir::Databases::Odbc::Statement::BindColumn</a></div><div class="ttdeci">void BindColumn(unsigned short usColumnNumber, Internal::Column&lt; sValueType, Type &gt; &amp;column)</div><div class="ttdoc">Binds a column to a statement. </div><div class="ttdef"><b>Definition:</b> Statement.h:384</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_fa1b014b70805ccf67cfe07b5d80caac.xhtml">Databases</a></li><li class="navelem"><a class="el" href="dir_78bd80b0b7e210d821e6c8d23953fe6d.xhtml">Odbc</a></li><li class="navelem"><a class="el" href="a00038.xhtml">Statement.h</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:26 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
