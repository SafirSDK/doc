<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/InstanceId.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00122_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">InstanceId.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00122.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2008-2013 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Lars Hagstr√∂m / stlrha</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __DOTS_INSTANCE_ID_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define __DOTS_INSTANCE_ID_H__</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;boost/functional/hash.hpp&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a01949.xhtml">Safir/Dob/Typesystem/Defs.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00173.xhtml">Safir/Dob/Typesystem/Utilities.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00116.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/Internal/InternalOperations.h&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="a01253.xhtml">   48</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01253.xhtml">InstanceId</a></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="a01253.xhtml#a5fc2683251d2d6f4e5ecc60c3120f63b">   54</a></span>&#160;        <span class="keyword">static</span> <a class="code" href="a01253.xhtml">InstanceId</a> <a class="code" href="a01253.xhtml#a5fc2683251d2d6f4e5ecc60c3120f63b">GenerateRandom</a>() {<span class="keywordflow">return</span> <a class="code" href="a01253.xhtml#a1980d68352e94cdee611948d040d5b04">InstanceId</a>(Internal::GenerateRandom64Bit());}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="a01253.xhtml#a1980d68352e94cdee611948d040d5b04">   61</a></span>&#160;        <a class="code" href="a01253.xhtml#a1980d68352e94cdee611948d040d5b04">InstanceId</a>(): m_instanceId(-1) {}</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="a01253.xhtml#a0543a884f531a8f075c08fdd91ff2842">   70</a></span>&#160;        <a class="code" href="a01253.xhtml#a0543a884f531a8f075c08fdd91ff2842">InstanceId</a>(<span class="keyword">const</span> std::wstring&amp; <span class="keywordtype">id</span>) :</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            m_instanceId(Internal::Generate64BitHash(id)),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            m_instanceIdStr(id)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        {}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="a01253.xhtml#aff40979b937b40e835e41131778c2d1c">   82</a></span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a01253.xhtml#aff40979b937b40e835e41131778c2d1c">InstanceId</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> <span class="keywordtype">id</span>):</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            m_instanceId(id) {}</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="a01253.xhtml#a7dc7a9cb05b620e44f50afc4cacd9ff5">   94</a></span>&#160;        <a class="code" href="a01253.xhtml#a7dc7a9cb05b620e44f50afc4cacd9ff5">InstanceId</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Int64</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> std::wstring &amp; idStr):</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            m_instanceId(id),</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            m_instanceIdStr(idStr)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#ifndef NDEBUG</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">if</span> (!m_instanceIdStr.empty() &amp;&amp; m_instanceId != Internal::Generate64BitHash(idStr))</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                std::wostringstream ostr;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                ostr &lt;&lt; <span class="stringliteral">&quot;InstanceId two-argument constructor got an inconsistent id. Got (&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    &lt;&lt; <span class="keywordtype">id</span> &lt;&lt; <span class="stringliteral">&quot;, &#39;&quot;</span> &lt;&lt; idStr &lt;&lt; <span class="stringliteral">&quot;&#39;), but the string evaluates to &quot;</span> &lt;&lt; Internal::Generate64BitHash(idStr) &lt;&lt; <span class="stringliteral">&quot;.&quot;</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">SoftwareViolationException</a>(ostr.str(),<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="a01253.xhtml#a1abc1c807a0ea902e46e6089816e3fcb">  117</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01253.xhtml#a1abc1c807a0ea902e46e6089816e3fcb">RemoveString</a>() {m_instanceIdStr.clear(); m_CachedUtf8String.clear();}</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="a01253.xhtml#a080aba38aa1baffaf288212ee80b81c7">  124</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01253.xhtml#a080aba38aa1baffaf288212ee80b81c7">operator ==</a>(<span class="keyword">const</span> <a class="code" href="a01253.xhtml">InstanceId</a>&amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">return</span> m_instanceId == other.m_instanceId;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="a01253.xhtml#af3f6dbff6a0574681451fd9c0b583857">  134</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01253.xhtml#af3f6dbff6a0574681451fd9c0b583857">operator !=</a>(<span class="keyword">const</span> <a class="code" href="a01253.xhtml">InstanceId</a> &amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">return</span> !(*<span class="keyword">this</span>==other);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="a01253.xhtml#a780db918ba91567ac890957f5958f9df">  145</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01253.xhtml#a780db918ba91567ac890957f5958f9df">operator &lt; </a>(<span class="keyword">const</span> <a class="code" href="a01253.xhtml">InstanceId</a> &amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">return</span> m_instanceId &lt; other.m_instanceId;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="a01949.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <span class="keyword">const</span> std::wstring <a class="code" href="a01253.xhtml#a02fa780aec6d76a58f450db9a6259ee2">ToString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="a01253.xhtml#aa8ef74bc608959f11ad3b0ed6e64dd20">  167</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Int64</a> <a class="code" href="a01253.xhtml#aa8ef74bc608959f11ad3b0ed6e64dd20">UnderlyingType</a>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="a01253.xhtml#acf24e8063b113e397ef82bc59327ca52">  174</a></span>&#160;        UnderlyingType <a class="code" href="a01253.xhtml#acf24e8063b113e397ef82bc59327ca52">GetRawValue</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_instanceId;}</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="a01253.xhtml#af0e79760574c6252da0658a10bbe8d34">  183</a></span>&#160;        <span class="keyword">const</span> std::wstring &amp; <a class="code" href="a01253.xhtml#af0e79760574c6252da0658a10bbe8d34">GetRawString</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_instanceIdStr;}</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="a01253.xhtml#abdc9f159d27c94eb091316c1a6f9a4bc">  191</a></span>&#160;        <a class="code" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> <a class="code" href="a01253.xhtml#abdc9f159d27c94eb091316c1a6f9a4bc">Utf8StringLength</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">if</span> (m_instanceIdStr.empty())</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keywordflow">if</span> (m_CachedUtf8String.empty())</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                m_CachedUtf8String = <a class="code" href="a00421.xhtml#a590903d89625dc985b91ec3b195ef78b">Utilities::ToUtf8</a>(m_instanceIdStr);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a><span class="keyword">&gt;</span>(m_CachedUtf8String.length() + 1);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="a01253.xhtml#a84fdb9e9e5a4933f15a4d66ea0e91800">  213</a></span>&#160;        <span class="keyword">const</span> std::string &amp; <a class="code" href="a01253.xhtml#a84fdb9e9e5a4933f15a4d66ea0e91800">Utf8String</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">if</span> (!m_instanceIdStr.empty() &amp;&amp; m_CachedUtf8String.empty())</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                m_CachedUtf8String = <a class="code" href="a00421.xhtml#a590903d89625dc985b91ec3b195ef78b">Utilities::ToUtf8</a>(m_instanceIdStr);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">return</span> m_CachedUtf8String;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        }</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        UnderlyingType m_instanceId;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        std::wstring   m_instanceIdStr;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keyword">mutable</span> std::string m_CachedUtf8String;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    };</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="a00412.xhtml#a57f6b9c5b3a7cc30dd8de5fcac67956e">  231</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> std::wostream &amp; <a class="code" href="a00412.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">operator &lt;&lt; </a>(std::wostream&amp; out, <span class="keyword">const</span> <a class="code" href="a01253.xhtml">InstanceId</a>&amp; instanceId)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    {<span class="keywordflow">return</span> out &lt;&lt; instanceId.<a class="code" href="a01253.xhtml#a02fa780aec6d76a58f450db9a6259ee2">ToString</a>();}</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="comment">//Make it possible to use InstanceId as key in a dictionaries.</span></div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="a00412.xhtml#ae01a497b6b325ae37b5875a1d6380eed">  235</a></span>&#160;    <span class="keyword">inline</span> std::size_t <a class="code" href="a00412.xhtml#a46ffb6f2e58b47f1ef097bb3ddc3e33f">hash_value</a>(<span class="keyword">const</span> <a class="code" href="a01253.xhtml">Safir::Dob::Typesystem::InstanceId</a>&amp; val)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    {<span class="keywordflow">return</span> boost::hash&lt;Int64&gt;()(val.<a class="code" href="a01253.xhtml#acf24e8063b113e397ef82bc59327ca52">GetRawValue</a>());}</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;}</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="ttc" id="a01253_xhtml_acf24e8063b113e397ef82bc59327ca52"><div class="ttname"><a href="a01253.xhtml#acf24e8063b113e397ef82bc59327ca52">Safir::Dob::Typesystem::InstanceId::GetRawValue</a></div><div class="ttdeci">UnderlyingType GetRawValue() const</div><div class="ttdoc">Get the raw 64 bit integer identifier. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:174</div></div>
<div class="ttc" id="a01253_xhtml_abdc9f159d27c94eb091316c1a6f9a4bc"><div class="ttname"><a href="a01253.xhtml#abdc9f159d27c94eb091316c1a6f9a4bc">Safir::Dob::Typesystem::InstanceId::Utf8StringLength</a></div><div class="ttdeci">Int32 Utf8StringLength() const</div><div class="ttdoc">Get the length of the string when converted to UTF-8 encoding. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:191</div></div>
<div class="ttc" id="a00412_xhtml_a46ffb6f2e58b47f1ef097bb3ddc3e33f"><div class="ttname"><a href="a00412.xhtml#a46ffb6f2e58b47f1ef097bb3ddc3e33f">Safir::Dob::Typesystem::hash_value</a></div><div class="ttdeci">std::size_t hash_value(const Safir::Dob::Typesystem::ChannelId &amp;val)</div><div class="ttdef"><b>Definition:</b> ChannelId.h:228</div></div>
<div class="ttc" id="a01253_xhtml_af3f6dbff6a0574681451fd9c0b583857"><div class="ttname"><a href="a01253.xhtml#af3f6dbff6a0574681451fd9c0b583857">Safir::Dob::Typesystem::InstanceId::operator!=</a></div><div class="ttdeci">bool operator!=(const InstanceId &amp;other) const</div><div class="ttdoc">Inequality operator. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:134</div></div>
<div class="ttc" id="a01253_xhtml_a080aba38aa1baffaf288212ee80b81c7"><div class="ttname"><a href="a01253.xhtml#a080aba38aa1baffaf288212ee80b81c7">Safir::Dob::Typesystem::InstanceId::operator==</a></div><div class="ttdeci">bool operator==(const InstanceId &amp;other) const</div><div class="ttdoc">Equality operator. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:124</div></div>
<div class="ttc" id="a00116_xhtml_aa50218d805518247edfff3d9328be684"><div class="ttname"><a href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a></div><div class="ttdeci">#define __WFILE__</div><div class="ttdef"><b>Definition:</b> Exceptions.h:31</div></div>
<div class="ttc" id="a01253_xhtml_a5fc2683251d2d6f4e5ecc60c3120f63b"><div class="ttname"><a href="a01253.xhtml#a5fc2683251d2d6f4e5ecc60c3120f63b">Safir::Dob::Typesystem::InstanceId::GenerateRandom</a></div><div class="ttdeci">static InstanceId GenerateRandom()</div><div class="ttdoc">Returns a random instance id. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:54</div></div>
<div class="ttc" id="a00173_xhtml"><div class="ttname"><a href="a00173.xhtml">Utilities.h</a></div></div>
<div class="ttc" id="a00412_xhtml_a77c8a9fabe66e72ccbc66c729540b9b6"><div class="ttname"><a href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a></div><div class="ttdeci">DotsC_Int32 Int32</div><div class="ttdoc">32 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:66</div></div>
<div class="ttc" id="a01949_xhtml"><div class="ttname"><a href="a01949.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a01253_xhtml_aa8ef74bc608959f11ad3b0ed6e64dd20"><div class="ttname"><a href="a01253.xhtml#aa8ef74bc608959f11ad3b0ed6e64dd20">Safir::Dob::Typesystem::InstanceId::UnderlyingType</a></div><div class="ttdeci">Int64 UnderlyingType</div><div class="ttdef"><b>Definition:</b> InstanceId.h:167</div></div>
<div class="ttc" id="a00412_xhtml_a82357c789f9fee9d69beaf1993e4f20c"><div class="ttname"><a href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a></div><div class="ttdeci">DotsC_Int64 Int64</div><div class="ttdoc">64 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:69</div></div>
<div class="ttc" id="a01253_xhtml_aff40979b937b40e835e41131778c2d1c"><div class="ttname"><a href="a01253.xhtml#aff40979b937b40e835e41131778c2d1c">Safir::Dob::Typesystem::InstanceId::InstanceId</a></div><div class="ttdeci">InstanceId(const Dob::Typesystem::Int64 id)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:82</div></div>
<div class="ttc" id="a01253_xhtml_a780db918ba91567ac890957f5958f9df"><div class="ttname"><a href="a01253.xhtml#a780db918ba91567ac890957f5958f9df">Safir::Dob::Typesystem::InstanceId::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const InstanceId &amp;other) const</div><div class="ttdoc">Less-than operator. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:145</div></div>
<div class="ttc" id="a01253_xhtml_a1980d68352e94cdee611948d040d5b04"><div class="ttname"><a href="a01253.xhtml#a1980d68352e94cdee611948d040d5b04">Safir::Dob::Typesystem::InstanceId::InstanceId</a></div><div class="ttdeci">InstanceId()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:61</div></div>
<div class="ttc" id="a00421_xhtml_a590903d89625dc985b91ec3b195ef78b"><div class="ttname"><a href="a00421.xhtml#a590903d89625dc985b91ec3b195ef78b">Safir::Dob::Typesystem::Utilities::ToUtf8</a></div><div class="ttdeci">DOTS_CPP_API const std::string ToUtf8(const std::wstring &amp;wstr)</div><div class="ttdoc">Convert a std::wstring to UTF8-encoded std::string. </div></div>
<div class="ttc" id="a01253_xhtml_a02fa780aec6d76a58f450db9a6259ee2"><div class="ttname"><a href="a01253.xhtml#a02fa780aec6d76a58f450db9a6259ee2">Safir::Dob::Typesystem::InstanceId::ToString</a></div><div class="ttdeci">DOTS_CPP_API const std::wstring ToString() const</div><div class="ttdoc">Return a string representation of the instance id. </div></div>
<div class="ttc" id="a01253_xhtml_a84fdb9e9e5a4933f15a4d66ea0e91800"><div class="ttname"><a href="a01253.xhtml#a84fdb9e9e5a4933f15a4d66ea0e91800">Safir::Dob::Typesystem::InstanceId::Utf8String</a></div><div class="ttdeci">const std::string &amp; Utf8String() const</div><div class="ttdoc">Convert the string to UTF-8. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:213</div></div>
<div class="ttc" id="a01253_xhtml_a1abc1c807a0ea902e46e6089816e3fcb"><div class="ttname"><a href="a01253.xhtml#a1abc1c807a0ea902e46e6089816e3fcb">Safir::Dob::Typesystem::InstanceId::RemoveString</a></div><div class="ttdeci">void RemoveString()</div><div class="ttdoc">Remove the included string from the instance id. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:117</div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01237_xhtml"><div class="ttname"><a href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:361</div></div>
<div class="ttc" id="a01253_xhtml_af0e79760574c6252da0658a10bbe8d34"><div class="ttname"><a href="a01253.xhtml#af0e79760574c6252da0658a10bbe8d34">Safir::Dob::Typesystem::InstanceId::GetRawString</a></div><div class="ttdeci">const std::wstring &amp; GetRawString() const</div><div class="ttdoc">Get the string that was used to create this id. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:183</div></div>
<div class="ttc" id="a00116_xhtml"><div class="ttname"><a href="a00116.xhtml">Exceptions.h</a></div></div>
<div class="ttc" id="a01949_xhtml_a75f4ad2b9223b1c7783ec9303a67ec6e"><div class="ttname"><a href="a01949.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a></div><div class="ttdeci">#define DOTS_CPP_API</div><div class="ttdef"><b>Definition:</b> Defs.h:33</div></div>
<div class="ttc" id="a01253_xhtml"><div class="ttname"><a href="a01253.xhtml">Safir::Dob::Typesystem::InstanceId</a></div><div class="ttdoc">Class containing the identity of an instance. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:48</div></div>
<div class="ttc" id="a01253_xhtml_a0543a884f531a8f075c08fdd91ff2842"><div class="ttname"><a href="a01253.xhtml#a0543a884f531a8f075c08fdd91ff2842">Safir::Dob::Typesystem::InstanceId::InstanceId</a></div><div class="ttdeci">InstanceId(const std::wstring &amp;id)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:70</div></div>
<div class="ttc" id="a01253_xhtml_a7dc7a9cb05b620e44f50afc4cacd9ff5"><div class="ttname"><a href="a01253.xhtml#a7dc7a9cb05b620e44f50afc4cacd9ff5">Safir::Dob::Typesystem::InstanceId::InstanceId</a></div><div class="ttdeci">InstanceId(const Int64 id, const std::wstring &amp;idStr)</div><div class="ttdoc">Constructor. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:94</div></div>
<div class="ttc" id="a00412_xhtml_a74434cdf7c582d37ccf33d83ec9561e6"><div class="ttname"><a href="a00412.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">Safir::Dob::Typesystem::operator&lt;&lt;</a></div><div class="ttdeci">static std::wostream &amp; operator&lt;&lt;(std::wostream &amp;out, const ChannelId &amp;channelId)</div><div class="ttdef"><b>Definition:</b> ChannelId.h:224</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00122.xhtml">InstanceId.h</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:26 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
