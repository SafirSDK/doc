<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::Internal::CommonExceptionBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01213.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a01210.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::Internal::CommonExceptionBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Common functionality for the exception hierarchy of the DOB typesystem.  
 <a href="a01213.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00116_source.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::Internal::CommonExceptionBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01212.svg" width="1068" height="846"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::Internal::CommonExceptionBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01211.svg" width="232" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#a7eed9101a9468fd5c46f0b1cc341a2ed">CommonExceptionBase</a> (const std::wstring &amp;message, const std::wstring &amp;fileName, const <a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber)</td></tr>
<tr class="memdesc:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with exception information.  <a href="#a7eed9101a9468fd5c46f0b1cc341a2ed">More...</a><br /></td></tr>
<tr class="separator:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d973fce038604fc564c49248a318f77"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#a2d973fce038604fc564c49248a318f77">~CommonExceptionBase</a> ()  throw ()</td></tr>
<tr class="memdesc:a2d973fce038604fc564c49248a318f77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy the exception.  <a href="#a2d973fce038604fc564c49248a318f77">More...</a><br /></td></tr>
<tr class="separator:a2d973fce038604fc564c49248a318f77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab17dd886b85cebe96ae1486c851ed521"><td class="memItemLeft" align="right" valign="top">const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#ab17dd886b85cebe96ae1486c851ed521">GetExceptionInfo</a> () const</td></tr>
<tr class="memdesc:ab17dd886b85cebe96ae1486c851ed521"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a formatted string containing all the information in the exception.  <a href="#ab17dd886b85cebe96ae1486c851ed521">More...</a><br /></td></tr>
<tr class="separator:ab17dd886b85cebe96ae1486c851ed521"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae764670cf4b7dc5d7484bfc73d4009ec"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#ae764670cf4b7dc5d7484bfc73d4009ec">what</a> () const  throw ()</td></tr>
<tr class="memdesc:ae764670cf4b7dc5d7484bfc73d4009ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the GetExceptionInfo as a UTF8 encoded string.  <a href="#ae764670cf4b7dc5d7484bfc73d4009ec">More...</a><br /></td></tr>
<tr class="separator:ae764670cf4b7dc5d7484bfc73d4009ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a303b51cebede40f6968be2c4fefa93be"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#a303b51cebede40f6968be2c4fefa93be">GetTypeId</a> () const =0</td></tr>
<tr class="memdesc:a303b51cebede40f6968be2c4fefa93be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this exception.  <a href="#a303b51cebede40f6968be2c4fefa93be">More...</a><br /></td></tr>
<tr class="separator:a303b51cebede40f6968be2c4fefa93be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Selectors for exception information.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Probably you want to use the GetExceptionInfo method instead of these methods.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="a01213.xhtml#ab17dd886b85cebe96ae1486c851ed521" title="Get a formatted string containing all the information in the exception. ">GetExceptionInfo</a> </dd></dl>
</div></td></tr>
<tr class="memitem:a51fb8880789df8ffb95ad8be90049789"><td class="memItemLeft" align="right" valign="top">const std::wstring &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#a51fb8880789df8ffb95ad8be90049789">GetMessage</a> () const</td></tr>
<tr class="memdesc:a51fb8880789df8ffb95ad8be90049789"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the message about why the exception occurred.  <a href="#a51fb8880789df8ffb95ad8be90049789">More...</a><br /></td></tr>
<tr class="separator:a51fb8880789df8ffb95ad8be90049789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94009e6427481fcae72d0fc016ddc296"><td class="memItemLeft" align="right" valign="top">virtual const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#a94009e6427481fcae72d0fc016ddc296">GetName</a> () const =0</td></tr>
<tr class="memdesc:a94009e6427481fcae72d0fc016ddc296"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the exception name.  <a href="#a94009e6427481fcae72d0fc016ddc296">More...</a><br /></td></tr>
<tr class="separator:a94009e6427481fcae72d0fc016ddc296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad68d1966f9da8bc977801585f998a6e4"><td class="memItemLeft" align="right" valign="top">const std::wstring &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#ad68d1966f9da8bc977801585f998a6e4">GetFileName</a> () const</td></tr>
<tr class="memdesc:ad68d1966f9da8bc977801585f998a6e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the file where the exception occurred.  <a href="#ad68d1966f9da8bc977801585f998a6e4">More...</a><br /></td></tr>
<tr class="separator:ad68d1966f9da8bc977801585f998a6e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d4710279b4473bcb765b1486211a848"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01213.xhtml#a9d4710279b4473bcb765b1486211a848">GetLineNumber</a> () const</td></tr>
<tr class="memdesc:a9d4710279b4473bcb765b1486211a848"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the line number that the exception occurred on.  <a href="#a9d4710279b4473bcb765b1486211a848">More...</a><br /></td></tr>
<tr class="separator:a9d4710279b4473bcb765b1486211a848"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Common functionality for the exception hierarchy of the DOB typesystem. </p>
<p>This class contains the common parts of the <a class="el" href="a01217.xhtml" title="This is the base class of all Fundamental Exceptions. ">FundamentalException</a> and <a class="el" href="a01221.xhtml" title="This is the base class of all (non-Fundamental) Exceptions. ">Exception</a> base classes.</p>
<p>No exceptions except <a class="el" href="a01217.xhtml" title="This is the base class of all Fundamental Exceptions. ">FundamentalException</a> and <a class="el" href="a01221.xhtml" title="This is the base class of all (non-Fundamental) Exceptions. ">Exception</a> shall ever inherit from this class. See <a class="el" href="a01221.xhtml" title="This is the base class of all (non-Fundamental) Exceptions. ">Exception</a> and <a class="el" href="a01217.xhtml" title="This is the base class of all Fundamental Exceptions. ">FundamentalException</a> for more information on how to define your exceptions. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7eed9101a9468fd5c46f0b1cc341a2ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7eed9101a9468fd5c46f0b1cc341a2ed">&sect;&nbsp;</a></span>CommonExceptionBase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::Typesystem::Internal::CommonExceptionBase::CommonExceptionBase </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>message</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>fileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>lineNumber</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor with exception information. </p>
<p>Creates an exception that contains information about why and where the exception occurred.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">message</td><td>[in] - A message describing why the exception occurred. </td></tr>
    <tr><td class="paramname">fileName</td><td>[in] - The name of the file where the exception occurred. Always use <b>WFILE</b> as the argument for this parameter. </td></tr>
    <tr><td class="paramname">lineNumber</td><td>[in] - The line number that the exception occurred on. Always use <b>LINE</b> as the argument for this parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2d973fce038604fc564c49248a318f77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d973fce038604fc564c49248a318f77">&sect;&nbsp;</a></span>~CommonExceptionBase()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Safir::Dob::Typesystem::Internal::CommonExceptionBase::~CommonExceptionBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroy the exception. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab17dd886b85cebe96ae1486c851ed521"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab17dd886b85cebe96ae1486c851ed521">&sect;&nbsp;</a></span>GetExceptionInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetExceptionInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a formatted string containing all the information in the exception. </p>
<p>The string will look like this (yes, there's a line break in it): "ExceptionName at some_file_name.cpp: 453
 Description: Some kind of explanation of the exception".</p>
<dl class="section return"><dt>Returns</dt><dd>A formatted exception information string. </dd></dl>

</div>
</div>
<a id="ad68d1966f9da8bc977801585f998a6e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad68d1966f9da8bc977801585f998a6e4">&sect;&nbsp;</a></span>GetFileName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring&amp; Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetFileName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the name of the file where the exception occurred. </p>
<dl class="section return"><dt>Returns</dt><dd>The file where the exception occurred. </dd></dl>

</div>
</div>
<a id="a9d4710279b4473bcb765b1486211a848"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d4710279b4473bcb765b1486211a848">&sect;&nbsp;</a></span>GetLineNumber()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetLineNumber </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the line number that the exception occurred on. </p>
<dl class="section return"><dt>Returns</dt><dd>The line number where the exception occurred. </dd></dl>

<p>References <a class="el" href="a00416.xhtml#aef42299b0702e8f4edcab47112786a00">Safir::Dob::Typesystem::Members::GetTypeId()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01213_a9d4710279b4473bcb765b1486211a848_cgraph.svg" width="439" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a51fb8880789df8ffb95ad8be90049789"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51fb8880789df8ffb95ad8be90049789">&sect;&nbsp;</a></span>GetMessage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring&amp; Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetMessage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the message about why the exception occurred. </p>
<dl class="section return"><dt>Returns</dt><dd>The exception message. </dd></dl>

<p>References <a class="el" href="a00416.xhtml#a4072b311dc5af208a3fe1134ab67c911">Safir::Dob::Typesystem::Members::GetName()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01213_a51fb8880789df8ffb95ad8be90049789_cgraph.svg" width="439" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a94009e6427481fcae72d0fc016ddc296"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94009e6427481fcae72d0fc016ddc296">&sect;&nbsp;</a></span>GetName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::wstring Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the exception name. </p>
<dl class="section return"><dt>Returns</dt><dd>The name of the exception </dd></dl>

<p>Implemented in <a class="el" href="a01245.xhtml#ae9f7bf819e924b5156f155f4104ee354">Safir::Dob::Typesystem::ReadOnlyException</a>, <a class="el" href="a01241.xhtml#a6331aa3755c98f1fd21d2084e25d0fd4">Safir::Dob::Typesystem::NullException</a>, <a class="el" href="a01237.xhtml#a43ad840d4952a33c616b4dcd87966985">Safir::Dob::Typesystem::SoftwareViolationException</a>, <a class="el" href="a01233.xhtml#a586f624ec9891e546447cd9d37af76df">Safir::Dob::Typesystem::ConfigurationErrorException</a>, <a class="el" href="a01229.xhtml#a7372f20a32cd2994d8b8d6d83f46c20b">Safir::Dob::Typesystem::IncompatibleTypesException</a>, <a class="el" href="a01225.xhtml#a525dc85f8b50b4507ee072f50459c0f0">Safir::Dob::Typesystem::IllegalValueException</a>, <a class="el" href="a01461.xhtml#a6be40dee74ff1c4b528ca6cf23593d09">Safir::Databases::Odbc::IntegrityConstraintException</a>, <a class="el" href="a01465.xhtml#abca42117d4f3930486224897a5e8107a">Safir::Databases::Odbc::ReconnectException</a>, <a class="el" href="a01469.xhtml#a1c0980483ae4b6e64abf2359df06dbca">Safir::Databases::Odbc::RetryException</a>, <a class="el" href="a01473.xhtml#a77800ea18023326fc9622e3cdff16236">Safir::Databases::Odbc::TimeoutException</a>, <a class="el" href="a01477.xhtml#a8ddf178654b4be010b630f3d8286041e">Safir::Dob::AccessDeniedException</a>, <a class="el" href="a01545.xhtml#ab51dc3789f57525d5d55ce13bdcea581">Safir::Dob::GhostExistsException</a>, <a class="el" href="a01593.xhtml#ad57bebca4fda6e3b65219eef8d80ddb1">Safir::Dob::NotFoundException</a>, <a class="el" href="a01597.xhtml#a99df0af323402a8dad5e1587e9372ab0">Safir::Dob::NotOpenException</a>, and <a class="el" href="a01601.xhtml#ada241e4db94108b8e7fd7829817257e1">Safir::Dob::OverflowException</a>.</p>

</div>
</div>
<a id="a303b51cebede40f6968be2c4fefa93be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a303b51cebede40f6968be2c4fefa93be">&sect;&nbsp;</a></span>GetTypeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type id of this exception. </p>
<p>Gets the type id of the exception. Method is virtual to ensure that the right value gets returned for pointers or references.</p>
<p>Note: This method is overridden by all auto-generated classes.</p>
<dl class="section return"><dt>Returns</dt><dd>The TypeId of the exception. </dd></dl>

<p>Implemented in <a class="el" href="a01245.xhtml#a70d6e09626fdb865b5705b47c2dd4995">Safir::Dob::Typesystem::ReadOnlyException</a>, <a class="el" href="a01241.xhtml#a2c6dfa37669235a9b95992512eb2f8cd">Safir::Dob::Typesystem::NullException</a>, <a class="el" href="a01237.xhtml#a9a162951cf3891f9d676f9f2d94eca7f">Safir::Dob::Typesystem::SoftwareViolationException</a>, <a class="el" href="a01233.xhtml#a1961ef3e8300e56fc6714f288c7d9f12">Safir::Dob::Typesystem::ConfigurationErrorException</a>, <a class="el" href="a01229.xhtml#aa57fc8b61f751310a379dac83bcb0114">Safir::Dob::Typesystem::IncompatibleTypesException</a>, <a class="el" href="a01225.xhtml#a4da2ecc0a619b196c40f882ec931980f">Safir::Dob::Typesystem::IllegalValueException</a>, <a class="el" href="a01221.xhtml#aa08365526c1ec91cffd7442a43db0125">Safir::Dob::Typesystem::Exception</a>, <a class="el" href="a01217.xhtml#ab069195f0d3e1246aad6a3d8ada61e87">Safir::Dob::Typesystem::FundamentalException</a>, <a class="el" href="a01461.xhtml#a2e0fcba4afaa4c5f443ab453debbce74">Safir::Databases::Odbc::IntegrityConstraintException</a>, <a class="el" href="a01465.xhtml#a6f7be17d4755d9634475ba30d0d8197c">Safir::Databases::Odbc::ReconnectException</a>, <a class="el" href="a01469.xhtml#aaed60f2d882097cdafd72eece6ba7f1d">Safir::Databases::Odbc::RetryException</a>, <a class="el" href="a01473.xhtml#a9399c120a3a8dda7c85b9be77a39820b">Safir::Databases::Odbc::TimeoutException</a>, <a class="el" href="a01477.xhtml#a3095a1fabe1fde4dbeb4e2d114f3f89f">Safir::Dob::AccessDeniedException</a>, <a class="el" href="a01545.xhtml#adabb981467084efc60d3ff3b69e6d3c7">Safir::Dob::GhostExistsException</a>, <a class="el" href="a01593.xhtml#ae46dd5c20899a23436edfcc8c2b6cad1">Safir::Dob::NotFoundException</a>, <a class="el" href="a01597.xhtml#af765b6ed0c67542610910a69576dd2f5">Safir::Dob::NotOpenException</a>, and <a class="el" href="a01601.xhtml#adbe368ef1caaf5030fcf97627fb36515">Safir::Dob::OverflowException</a>.</p>

</div>
</div>
<a id="ae764670cf4b7dc5d7484bfc73d4009ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae764670cf4b7dc5d7484bfc73d4009ec">&sect;&nbsp;</a></span>what()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* Safir::Dob::Typesystem::Internal::CommonExceptionBase::what </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the GetExceptionInfo as a UTF8 encoded string. </p>
<p>This method is only provided to be compatible with the std::exception class.</p>
<p>If at all possible, use GetExceptionInfo instead since this method performs a copy and a conversion of the string. Note: This override allow catches of std::exception to still print the complete exception message.</p>
<dl class="section return"><dt>Returns</dt><dd>The exception information as a UTF8 encoded string. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00412.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00415.xhtml">Internal</a></li><li class="navelem"><a class="el" href="a01213.xhtml">CommonExceptionBase</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
