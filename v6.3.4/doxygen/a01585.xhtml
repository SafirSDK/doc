<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::NodeParameters Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01585.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="a01582.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::NodeParameters Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Contains paramaters for all nodes in the system.  
 <a href="a01585.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00296_source.xhtml">/home/lars/safir/safir-sdk-core/src/safir_dou/gen/cpp/include/Safir/Dob/NodeParameters.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::NodeParameters:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01584.svg" width="196" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::NodeParameters:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01583.svg" width="196" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa3cfb061bedd2254621bf5d1adfadb0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#aa3cfb061bedd2254621bf5d1adfadb0b">NodeParameters</a> ()</td></tr>
<tr class="separator:aa3cfb061bedd2254621bf5d1adfadb0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7beb86a291c3d5365dd3fe8d71104d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Safir::Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#aea7beb86a291c3d5365dd3fe8d71104d">Clone</a> () const</td></tr>
<tr class="memdesc:aea7beb86a291c3d5365dd3fe8d71104d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <a href="#aea7beb86a291c3d5365dd3fe8d71104d">More...</a><br /></td></tr>
<tr class="separator:aea7beb86a291c3d5365dd3fe8d71104d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5360b31a30720c0dd8bf41458b24c26f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a5360b31a30720c0dd8bf41458b24c26f">GetTypeId</a> () const</td></tr>
<tr class="memdesc:a5360b31a30720c0dd8bf41458b24c26f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <a href="#a5360b31a30720c0dd8bf41458b24c26f">More...</a><br /></td></tr>
<tr class="separator:a5360b31a30720c0dd8bf41458b24c26f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bf623ed6e99ed7057cb35678d4ccdb5"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a1bf623ed6e99ed7057cb35678d4ccdb5">IsChanged</a> ()</td></tr>
<tr class="memdesc:a1bf623ed6e99ed7057cb35678d4ccdb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <a href="#a1bf623ed6e99ed7057cb35678d4ccdb5">More...</a><br /></td></tr>
<tr class="separator:a1bf623ed6e99ed7057cb35678d4ccdb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac153750b5516710f08dcefcefc68461d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#ac153750b5516710f08dcefcefc68461d">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:ac153750b5516710f08dcefcefc68461d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <a href="#ac153750b5516710f08dcefcefc68461d">More...</a><br /></td></tr>
<tr class="separator:ac153750b5516710f08dcefcefc68461d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac930c68e8abaf8ac5fbd2e41e8a3e81d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#ac930c68e8abaf8ac5fbd2e41e8a3e81d">GetMember</a> (const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index)</td></tr>
<tr class="memdesc:ac930c68e8abaf8ac5fbd2e41e8a3e81d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <a href="#ac930c68e8abaf8ac5fbd2e41e8a3e81d">More...</a><br /></td></tr>
<tr class="separator:ac930c68e8abaf8ac5fbd2e41e8a3e81d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a788e7a9a09569b4cefb6a690d0e2c838"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a788e7a9a09569b4cefb6a690d0e2c838">GetMember</a> (const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) const</td></tr>
<tr class="memdesc:a788e7a9a09569b4cefb6a690d0e2c838"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <a href="#a788e7a9a09569b4cefb6a690d0e2c838">More...</a><br /></td></tr>
<tr class="separator:a788e7a9a09569b4cefb6a690d0e2c838"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11bf8d8778ca245c28bd27bb6868cc1d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a11bf8d8778ca245c28bd27bb6868cc1d">WriteToBlob</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle) const</td></tr>
<tr class="memdesc:a11bf8d8778ca245c28bd27bb6868cc1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write the object to a blob.  <a href="#a11bf8d8778ca245c28bd27bb6868cc1d">More...</a><br /></td></tr>
<tr class="separator:a11bf8d8778ca245c28bd27bb6868cc1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6776444def6809d833e47f2445eace31"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a6776444def6809d833e47f2445eace31">NodeParameters</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a6776444def6809d833e47f2445eace31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01605"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01605')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01605.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:af7250c4748af0c0a3221477ba8dee709 inherit pub_methods_a01605"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#af7250c4748af0c0a3221477ba8dee709">Parametrization</a> ()</td></tr>
<tr class="separator:af7250c4748af0c0a3221477ba8dee709 inherit pub_methods_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f18e22641a96decee971706f037eee0 inherit pub_methods_a01605"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#a2f18e22641a96decee971706f037eee0">Parametrization</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a2f18e22641a96decee971706f037eee0 inherit pub_methods_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01265"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01265')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01265.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01265"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#afac534c32310137c943104c4d3e3f309">Object</a> ()</td></tr>
<tr class="memdesc:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="a01265.xhtml#afac534c32310137c943104c4d3e3f309">More...</a><br /></td></tr>
<tr class="separator:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01265"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#a9f27069548b4ec8968a8c394ac3bedc2">~Object</a> ()</td></tr>
<tr class="memdesc:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="a01265.xhtml#a9f27069548b4ec8968a8c394ac3bedc2">More...</a><br /></td></tr>
<tr class="separator:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01265"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#a7e6f36f0b33c414711aae5966b5d2d5b">Object</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="memdesc:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an <a class="el" href="a01265.xhtml" title="The base class for all DOB objects. ">Object</a> from a blob.  <a href="a01265.xhtml#a7e6f36f0b33c414711aae5966b5d2d5b">More...</a><br /></td></tr>
<tr class="separator:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac8d98ba9796545105dfc39fa34cb4325"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00410.xhtml#a105ffe6253be26c0fad7583ab04eabbd">NodeParametersPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#ac8d98ba9796545105dfc39fa34cb4325">Create</a> ()</td></tr>
<tr class="separator:ac8d98ba9796545105dfc39fa34cb4325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9de13f957ed237b5f3667ce96ddd6e3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a01253.xhtml">Safir::Dob::Typesystem::InstanceId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#ae9de13f957ed237b5f3667ce96ddd6e3">SystemId</a> ()</td></tr>
<tr class="memdesc:ae9de13f957ed237b5f3667ce96ddd6e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies the Id of the System/System installation.  <a href="#ae9de13f957ed237b5f3667ce96ddd6e3">More...</a><br /></td></tr>
<tr class="separator:ae9de13f957ed237b5f3667ce96ddd6e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a627f775b3de1b12cbb5eeafd7260f3ff"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a627f775b3de1b12cbb5eeafd7260f3ff">SharedMemorySize</a> ()</td></tr>
<tr class="memdesc:a627f775b3de1b12cbb5eeafd7260f3ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies the amount of shared memory to allocate for the <a class="el" href="a00410.xhtml" title="This namespace contains all functionality of the DOB (Components DOSE and DOTS). ">Dob</a> distribution (in megabytes)  <a href="#a627f775b3de1b12cbb5eeafd7260f3ff">More...</a><br /></td></tr>
<tr class="separator:a627f775b3de1b12cbb5eeafd7260f3ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7662f0706af3b9a60a69585e7dc0eec3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a7662f0706af3b9a60a69585e7dc0eec3">MaxNumberOfConnections</a> ()</td></tr>
<tr class="memdesc:a7662f0706af3b9a60a69585e7dc0eec3"><td class="mdescLeft">&#160;</td><td class="mdescRight">This controls how many connections the local <a class="el" href="a00410.xhtml" title="This namespace contains all functionality of the DOB (Components DOSE and DOTS). ">Dob</a> instance can handle.  <a href="#a7662f0706af3b9a60a69585e7dc0eec3">More...</a><br /></td></tr>
<tr class="separator:a7662f0706af3b9a60a69585e7dc0eec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af26ccb45b41b5c5536752c7fa8dfd4e7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#af26ccb45b41b5c5536752c7fa8dfd4e7">MaxNodeNameLength</a> ()</td></tr>
<tr class="memdesc:af26ccb45b41b5c5536752c7fa8dfd4e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum string length of a node name and node type name.  <a href="#af26ccb45b41b5c5536752c7fa8dfd4e7">More...</a><br /></td></tr>
<tr class="separator:af26ccb45b41b5c5536752c7fa8dfd4e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedd08e8d1ebb4745c1f163aa0f6a860f"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#aedd08e8d1ebb4745c1f163aa0f6a860f">TerminateDoseMainWhenUnrecoverableError</a> ()</td></tr>
<tr class="memdesc:aedd08e8d1ebb4745c1f163aa0f6a860f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines if an unrecoverable error, typically an abondoned locked shared memory lock, causes a termination of dose_main.  <a href="#aedd08e8d1ebb4745c1f163aa0f6a860f">More...</a><br /></td></tr>
<tr class="separator:aedd08e8d1ebb4745c1f163aa0f6a860f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c32ca3459864a161c558a180157b419"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a9c32ca3459864a161c558a180157b419">DoseMainThreadWatchdogTimeout</a> ()</td></tr>
<tr class="memdesc:a9c32ca3459864a161c558a180157b419"><td class="mdescLeft">&#160;</td><td class="mdescRight">Min time (seconds) before an apparently hanging dose_main thread causes a termination of the dose_main program.  <a href="#a9c32ca3459864a161c558a180157b419">More...</a><br /></td></tr>
<tr class="separator:a9c32ca3459864a161c558a180157b419"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac01bda4cf4bab09d840afac6d9d17437"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#ac01bda4cf4bab09d840afac6d9d17437">NumberOfContexts</a> ()</td></tr>
<tr class="memdesc:ac01bda4cf4bab09d840afac6d9d17437"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of contexts in the system.  <a href="#ac01bda4cf4bab09d840afac6d9d17437">More...</a><br /></td></tr>
<tr class="separator:ac01bda4cf4bab09d840afac6d9d17437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91f74b123311cf336a18c78820d806a7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a91f74b123311cf336a18c78820d806a7">LocalContextsArraySize</a> ()</td></tr>
<tr class="separator:a91f74b123311cf336a18c78820d806a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9241172f25f4dc80f19ba1e19ed3b79c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a9241172f25f4dc80f19ba1e19ed3b79c">LocalContexts</a> (const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index)</td></tr>
<tr class="memdesc:a9241172f25f4dc80f19ba1e19ed3b79c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies for every context wether or not it is a local context.  <a href="#a9241172f25f4dc80f19ba1e19ed3b79c">More...</a><br /></td></tr>
<tr class="separator:a9241172f25f4dc80f19ba1e19ed3b79c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6100f1e210ef2a7ad3b4d90448c1e663"><td class="memItemLeft" align="right" valign="top">static std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a6100f1e210ef2a7ad3b4d90448c1e663">IncarnationBlacklistFilename</a> ()</td></tr>
<tr class="memdesc:a6100f1e210ef2a7ad3b4d90448c1e663"><td class="mdescLeft">&#160;</td><td class="mdescRight">Full filename where the system stores the incarnation blacklist.  <a href="#a6100f1e210ef2a7ad3b4d90448c1e663">More...</a><br /></td></tr>
<tr class="separator:a6100f1e210ef2a7ad3b4d90448c1e663"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad66d98da90452dc1844b2ad7d7efa565"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00414.xhtml#a1f7d47853ff927eca95fac2bca20d12c">Safir::Dob::Typesystem::Si64::Second</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#ad66d98da90452dc1844b2ad7d7efa565">LocalInterfaceTimeout</a> ()</td></tr>
<tr class="memdesc:ad66d98da90452dc1844b2ad7d7efa565"><td class="mdescLeft">&#160;</td><td class="mdescRight">How long to wait for the local interfaces becoming available before giving up.  <a href="#ad66d98da90452dc1844b2ad7d7efa565">More...</a><br /></td></tr>
<tr class="separator:ad66d98da90452dc1844b2ad7d7efa565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a902c23f11163d62d903a749ecf5726b0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#a902c23f11163d62d903a749ecf5726b0">NodeTypesArraySize</a> ()</td></tr>
<tr class="separator:a902c23f11163d62d903a749ecf5726b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbec0e3255410d461ee139df4a710145"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00410.xhtml#a3a46ae7777d189d1be469ae39b311a4d">Safir::Dob::NodeTypePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#abbec0e3255410d461ee139df4a710145">NodeTypes</a> (const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index)</td></tr>
<tr class="memdesc:abbec0e3255410d461ee139df4a710145"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the different node types in the system.  <a href="#abbec0e3255410d461ee139df4a710145">More...</a><br /></td></tr>
<tr class="separator:abbec0e3255410d461ee139df4a710145"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01605"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01605')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01605.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:a8e818c8c5ddf9da4a3d2ec2503a9ca78 inherit pub_static_methods_a01605"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00410.xhtml#a6c03fc6d2ff529cc05b35a9a5492bb3b">ParametrizationPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#a8e818c8c5ddf9da4a3d2ec2503a9ca78">Create</a> ()</td></tr>
<tr class="separator:a8e818c8c5ddf9da4a3d2ec2503a9ca78 inherit pub_static_methods_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01265"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01265')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01265.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01265"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#acb1399abd50543020f6b1638a698e379">Create</a> ()</td></tr>
<tr class="memdesc:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="a01265.xhtml" title="The base class for all DOB objects. ">Object</a>.  <a href="a01265.xhtml#acb1399abd50543020f6b1638a698e379">More...</a><br /></td></tr>
<tr class="separator:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:aaa0ef9e9c0b431a112a6ca62693f2379"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01585.xhtml#aaa0ef9e9c0b431a112a6ca62693f2379">ClassTypeId</a> = -4532363161627336967LL</td></tr>
<tr class="memdesc:aaa0ef9e9c0b431a112a6ca62693f2379"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01585.xhtml" title="Contains paramaters for all nodes in the system. ">NodeParameters</a>.  <a href="#aaa0ef9e9c0b431a112a6ca62693f2379">More...</a><br /></td></tr>
<tr class="separator:aaa0ef9e9c0b431a112a6ca62693f2379"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01605"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01605')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01605.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01605"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#ac1cdacddcacae4423fe3d3925dfb116d">ClassTypeId</a> = 8075666004421608370LL</td></tr>
<tr class="memdesc:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01605"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01605.xhtml" title="This class is intended to be used as baseclass for classes that only contains parameters. ">Parametrization</a>.  <a href="a01605.xhtml#ac1cdacddcacae4423fe3d3925dfb116d">More...</a><br /></td></tr>
<tr class="separator:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01265"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01265')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01265.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01265"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#af6c7867293f8c2459a5fc8fe8b6b0a2a">ClassTypeId</a> = 5955188366590963785LL</td></tr>
<tr class="memdesc:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">The TypeId of the <a class="el" href="a01265.xhtml" title="The base class for all DOB objects. ">Object</a> class.  <a href="a01265.xhtml#af6c7867293f8c2459a5fc8fe8b6b0a2a">More...</a><br /></td></tr>
<tr class="separator:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Contains paramaters for all nodes in the system. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa3cfb061bedd2254621bf5d1adfadb0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3cfb061bedd2254621bf5d1adfadb0b">&sect;&nbsp;</a></span>NodeParameters() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::NodeParameters::NodeParameters </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6776444def6809d833e47f2445eace31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6776444def6809d833e47f2445eace31">&sect;&nbsp;</a></span>NodeParameters() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::NodeParameters::NodeParameters </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aea7beb86a291c3d5365dd3fe8d71104d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea7beb86a291c3d5365dd3fe8d71104d">&sect;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Safir::Dob::Typesystem::ObjectPtr</a> Safir::Dob::NodeParameters::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a copy of the object. </p>
<p>Will create a copy of the object on the heap and return a smart pointer to it. Use boost::static_pointer_cast or boost::dynamic_pointer_cast to cast it to the pointer type that you're after.</p>
<dl class="section return"><dt>Returns</dt><dd>A smart pointer to the copy of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#acfcc23857f3714fa151d60844f52abdf">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="ac8d98ba9796545105dfc39fa34cb4325"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8d98ba9796545105dfc39fa34cb4325">&sect;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00410.xhtml#a105ffe6253be26c0fad7583ab04eabbd">NodeParametersPtr</a> Safir::Dob::NodeParameters::Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c32ca3459864a161c558a180157b419"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c32ca3459864a161c558a180157b419">&sect;&nbsp;</a></span>DoseMainThreadWatchdogTimeout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeParameters::DoseMainThreadWatchdogTimeout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Min time (seconds) before an apparently hanging dose_main thread causes a termination of the dose_main program. </p>

</div>
</div>
<a id="ac930c68e8abaf8ac5fbd2e41e8a3e81d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac930c68e8abaf8ac5fbd2e41e8a3e81d">&sect;&nbsp;</a></span>GetMember() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a>&amp; Safir::Dob::NodeParameters::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a2b38e5715ba1e4625022e63b5841f883">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a788e7a9a09569b4cefb6a690d0e2c838"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a788e7a9a09569b4cefb6a690d0e2c838">&sect;&nbsp;</a></span>GetMember() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a>&amp; Safir::Dob::NodeParameters::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a const reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A const reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a9cce3c7e5b93727ab4fb13ec845107ba">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a5360b31a30720c0dd8bf41458b24c26f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5360b31a30720c0dd8bf41458b24c26f">&sect;&nbsp;</a></span>GetTypeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::NodeParameters::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type id of this object. </p>
<p>Gets the type id of the object. Method is virtual to ensure that the right value gets returned for pointers or references.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The TypeId of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a998309b04fb709df9a6e4b6db8317b8e">Safir::Dob::Parametrization</a>.</p>

<p>References <a class="el" href="a00412.xhtml#a80f84535cdd4541aeac486ee6b541904">Safir::Dob::Typesystem::IsChanged()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01585_a5360b31a30720c0dd8bf41458b24c26f_cgraph.svg" width="636" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6100f1e210ef2a7ad3b4d90448c1e663"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6100f1e210ef2a7ad3b4d90448c1e663">&sect;&nbsp;</a></span>IncarnationBlacklistFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::wstring Safir::Dob::NodeParameters::IncarnationBlacklistFilename </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Full filename where the system stores the incarnation blacklist. </p>
<p>Use forward slashes as directory separator! </p>

</div>
</div>
<a id="a1bf623ed6e99ed7057cb35678d4ccdb5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bf623ed6e99ed7057cb35678d4ccdb5">&sect;&nbsp;</a></span>IsChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Safir::Dob::NodeParameters::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if any member of this object is changed. </p>
<p>This method will recursively check if any member of the object has its change flag set.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>True if any member has changed. </dd></dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#aaaa9d68856c38fc154552dfd7c9d9fd9">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a9241172f25f4dc80f19ba1e19ed3b79c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9241172f25f4dc80f19ba1e19ed3b79c">&sect;&nbsp;</a></span>LocalContexts()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Safir::Dob::NodeParameters::LocalContexts </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Specifies for every context wether or not it is a local context. </p>
<p>The array length must correspond to the NumberOfContexts parameter above. </p>

</div>
</div>
<a id="a91f74b123311cf336a18c78820d806a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91f74b123311cf336a18c78820d806a7">&sect;&nbsp;</a></span>LocalContextsArraySize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> Safir::Dob::NodeParameters::LocalContextsArraySize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad66d98da90452dc1844b2ad7d7efa565"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad66d98da90452dc1844b2ad7d7efa565">&sect;&nbsp;</a></span>LocalInterfaceTimeout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00414.xhtml#a1f7d47853ff927eca95fac2bca20d12c">Safir::Dob::Typesystem::Si64::Second</a> Safir::Dob::NodeParameters::LocalInterfaceTimeout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>How long to wait for the local interfaces becoming available before giving up. </p>
<p>I.e. if ControlAddress or DataAddress (as specified above) have not become available before this timeout expires safir_control will exit with an error. </p>

</div>
</div>
<a id="af26ccb45b41b5c5536752c7fa8dfd4e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af26ccb45b41b5c5536752c7fa8dfd4e7">&sect;&nbsp;</a></span>MaxNodeNameLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeParameters::MaxNodeNameLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Maximum string length of a node name and node type name. </p>

</div>
</div>
<a id="a7662f0706af3b9a60a69585e7dc0eec3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7662f0706af3b9a60a69585e7dc0eec3">&sect;&nbsp;</a></span>MaxNumberOfConnections()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeParameters::MaxNumberOfConnections </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This controls how many connections the local <a class="el" href="a00410.xhtml" title="This namespace contains all functionality of the DOB (Components DOSE and DOTS). ">Dob</a> instance can handle. </p>

</div>
</div>
<a id="abbec0e3255410d461ee139df4a710145"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbec0e3255410d461ee139df4a710145">&sect;&nbsp;</a></span>NodeTypes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00410.xhtml#a3a46ae7777d189d1be469ae39b311a4d">Safir::Dob::NodeTypePtr</a> Safir::Dob::NodeParameters::NodeTypes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Defines the different node types in the system. </p>

</div>
</div>
<a id="a902c23f11163d62d903a749ecf5726b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a902c23f11163d62d903a749ecf5726b0">&sect;&nbsp;</a></span>NodeTypesArraySize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> Safir::Dob::NodeParameters::NodeTypesArraySize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac01bda4cf4bab09d840afac6d9d17437"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac01bda4cf4bab09d840afac6d9d17437">&sect;&nbsp;</a></span>NumberOfContexts()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeParameters::NumberOfContexts </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The number of contexts in the system. </p>
<p>(The context numbering starts from 0.) </p>

</div>
</div>
<a id="ac153750b5516710f08dcefcefc68461d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac153750b5516710f08dcefcefc68461d">&sect;&nbsp;</a></span>SetChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Safir::Dob::NodeParameters::SetChanged </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Recursively set change flags in all members of this object. </p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - The value to set the change flags to </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a739f68dc602857c46e3234cf55f3e4ed">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a627f775b3de1b12cbb5eeafd7260f3ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a627f775b3de1b12cbb5eeafd7260f3ff">&sect;&nbsp;</a></span>SharedMemorySize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeParameters::SharedMemorySize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Specifies the amount of shared memory to allocate for the <a class="el" href="a00410.xhtml" title="This namespace contains all functionality of the DOB (Components DOSE and DOTS). ">Dob</a> distribution (in megabytes) </p>

</div>
</div>
<a id="ae9de13f957ed237b5f3667ce96ddd6e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9de13f957ed237b5f3667ce96ddd6e3">&sect;&nbsp;</a></span>SystemId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a01253.xhtml">Safir::Dob::Typesystem::InstanceId</a> Safir::Dob::NodeParameters::SystemId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Specifies the Id of the System/System installation. </p>

</div>
</div>
<a id="aedd08e8d1ebb4745c1f163aa0f6a860f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedd08e8d1ebb4745c1f163aa0f6a860f">&sect;&nbsp;</a></span>TerminateDoseMainWhenUnrecoverableError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Safir::Dob::NodeParameters::TerminateDoseMainWhenUnrecoverableError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Determines if an unrecoverable error, typically an abondoned locked shared memory lock, causes a termination of dose_main. </p>
<p>Consider setting this parameter to false when running dose_main under a debugger </p>

</div>
</div>
<a id="a11bf8d8778ca245c28bd27bb6868cc1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11bf8d8778ca245c28bd27bb6868cc1d">&sect;&nbsp;</a></span>WriteToBlob()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Safir::Dob::NodeParameters::WriteToBlob </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Write the object to a blob. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">handle</td><td>[in] - Handle to a blobWriter that is the destination of the serialized object. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a7683a4313c005322338a8683cdbde6f2">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aaa0ef9e9c0b431a112a6ca62693f2379"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa0ef9e9c0b431a112a6ca62693f2379">&sect;&nbsp;</a></span>ClassTypeId</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::NodeParameters::ClassTypeId = -4532363161627336967LL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Type id for <a class="el" href="a01585.xhtml" title="Contains paramaters for all nodes in the system. ">NodeParameters</a>. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a01585.xhtml">NodeParameters</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
