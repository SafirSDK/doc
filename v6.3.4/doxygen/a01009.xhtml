<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Databases::Odbc::Connection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01009.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="a01006.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Databases::Odbc::Connection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="a01009.xhtml" title="The Connection class models a connection made to the database engine. ">Connection</a> class models a connection made to the database engine.  
 <a href="a01009.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a01937_source.xhtml">Safir/Databases/Odbc/Connection.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Databases::Odbc::Connection:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01008.svg" width="170" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Databases::Odbc::Connection:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01007.svg" width="170" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a12744938a347d048cf1c1208afe1c790"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a12744938a347d048cf1c1208afe1c790">Connection</a> ()</td></tr>
<tr class="memdesc:a12744938a347d048cf1c1208afe1c790"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a12744938a347d048cf1c1208afe1c790">More...</a><br /></td></tr>
<tr class="separator:a12744938a347d048cf1c1208afe1c790"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02bdf90f6a9b73269df9f168f96a97b1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a02bdf90f6a9b73269df9f168f96a97b1">~Connection</a> ()</td></tr>
<tr class="memdesc:a02bdf90f6a9b73269df9f168f96a97b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a02bdf90f6a9b73269df9f168f96a97b1">More...</a><br /></td></tr>
<tr class="separator:a02bdf90f6a9b73269df9f168f96a97b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d1a28083b3bc234746c1e48de3ebcf0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a0d1a28083b3bc234746c1e48de3ebcf0">Alloc</a> (const <a class="el" href="a01013.xhtml">Environment</a> &amp;environment)</td></tr>
<tr class="memdesc:a0d1a28083b3bc234746c1e48de3ebcf0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates a new connection to the database.  <a href="#a0d1a28083b3bc234746c1e48de3ebcf0">More...</a><br /></td></tr>
<tr class="separator:a0d1a28083b3bc234746c1e48de3ebcf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1587fddb80bbef1729b3809aa6b5e55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#aa1587fddb80bbef1729b3809aa6b5e55">Free</a> ()</td></tr>
<tr class="memdesc:aa1587fddb80bbef1729b3809aa6b5e55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees the connection previously allocated to the database.  <a href="#aa1587fddb80bbef1729b3809aa6b5e55">More...</a><br /></td></tr>
<tr class="separator:aa1587fddb80bbef1729b3809aa6b5e55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbc830b46a5c8a3e49c6fb27ec145a59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#afbc830b46a5c8a3e49c6fb27ec145a59">Connect</a> (const std::wstring &amp;wszConnectionString)</td></tr>
<tr class="memdesc:afbc830b46a5c8a3e49c6fb27ec145a59"><td class="mdescLeft">&#160;</td><td class="mdescRight">establishes a connection to the database.  <a href="#afbc830b46a5c8a3e49c6fb27ec145a59">More...</a><br /></td></tr>
<tr class="separator:afbc830b46a5c8a3e49c6fb27ec145a59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae87fcaf60f4fc9ce6dd812b58bf903b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#ae87fcaf60f4fc9ce6dd812b58bf903b3">Connect</a> (char *cszConnectionString)</td></tr>
<tr class="memdesc:ae87fcaf60f4fc9ce6dd812b58bf903b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">establishes a connection to the database.  <a href="#ae87fcaf60f4fc9ce6dd812b58bf903b3">More...</a><br /></td></tr>
<tr class="separator:ae87fcaf60f4fc9ce6dd812b58bf903b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa445ef04a60225458165b713a47a5f51"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#aa445ef04a60225458165b713a47a5f51">Disconnect</a> ()</td></tr>
<tr class="memdesc:aa445ef04a60225458165b713a47a5f51"><td class="mdescLeft">&#160;</td><td class="mdescRight">disconnects from the database.  <a href="#aa445ef04a60225458165b713a47a5f51">More...</a><br /></td></tr>
<tr class="separator:aa445ef04a60225458165b713a47a5f51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a006ffbda5bb98dc507b87bb4eae395c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a006ffbda5bb98dc507b87bb4eae395c0">UseAutoTransactions</a> ()</td></tr>
<tr class="memdesc:a006ffbda5bb98dc507b87bb4eae395c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set odbc to automatically commit each transaction after a successful query.  <a href="#a006ffbda5bb98dc507b87bb4eae395c0">More...</a><br /></td></tr>
<tr class="separator:a006ffbda5bb98dc507b87bb4eae395c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d50be566ac1abc71a51cf4786dc3030"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a7d50be566ac1abc71a51cf4786dc3030">UseManualTransactions</a> ()</td></tr>
<tr class="memdesc:a7d50be566ac1abc71a51cf4786dc3030"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set odbc to require manual commits to end transactions.  <a href="#a7d50be566ac1abc71a51cf4786dc3030">More...</a><br /></td></tr>
<tr class="separator:a7d50be566ac1abc71a51cf4786dc3030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b02e7533bc44783e291739d7e89c3ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a6b02e7533bc44783e291739d7e89c3ea">Commit</a> ()</td></tr>
<tr class="memdesc:a6b02e7533bc44783e291739d7e89c3ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Commits the changes permanently made in this transaction.  <a href="#a6b02e7533bc44783e291739d7e89c3ea">More...</a><br /></td></tr>
<tr class="separator:a6b02e7533bc44783e291739d7e89c3ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac9df42f9c163665ba241f47d221b289"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#aac9df42f9c163665ba241f47d221b289">Rollback</a> ()</td></tr>
<tr class="memdesc:aac9df42f9c163665ba241f47d221b289"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove all changes made in this transaction.  <a href="#aac9df42f9c163665ba241f47d221b289">More...</a><br /></td></tr>
<tr class="separator:aac9df42f9c163665ba241f47d221b289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a626e3dc7290380e5ce0d7345a73ee015"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a626e3dc7290380e5ce0d7345a73ee015">SetConnectAttr</a> (long lAttribute, long lValue)</td></tr>
<tr class="memdesc:a626e3dc7290380e5ce0d7345a73ee015"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a value for a ODBC connection attribute.  <a href="#a626e3dc7290380e5ce0d7345a73ee015">More...</a><br /></td></tr>
<tr class="separator:a626e3dc7290380e5ce0d7345a73ee015"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af86d3a7fe22f91a0f8f350a7084d8247"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#af86d3a7fe22f91a0f8f350a7084d8247">SetConnectAttr</a> (long lAttribute, const std::wstring &amp;wszValue)</td></tr>
<tr class="memdesc:af86d3a7fe22f91a0f8f350a7084d8247"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a value for a ODBC connection attribute.  <a href="#af86d3a7fe22f91a0f8f350a7084d8247">More...</a><br /></td></tr>
<tr class="separator:af86d3a7fe22f91a0f8f350a7084d8247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6467394fa75892929430fb7ce8c0ee8f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a6467394fa75892929430fb7ce8c0ee8f">GetConnectAttr</a> (long lAttribute, long &amp;lValue) const</td></tr>
<tr class="memdesc:a6467394fa75892929430fb7ce8c0ee8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value for a ODBC connection attribute.  <a href="#a6467394fa75892929430fb7ce8c0ee8f">More...</a><br /></td></tr>
<tr class="separator:a6467394fa75892929430fb7ce8c0ee8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab340fca3178be3517ad134375f035deb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#ab340fca3178be3517ad134375f035deb">GetConnectAttr</a> (long lAttribute, wchar_t *wszValue, unsigned long ulLength) const</td></tr>
<tr class="memdesc:ab340fca3178be3517ad134375f035deb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value for a ODBC connection attribute.  <a href="#ab340fca3178be3517ad134375f035deb">More...</a><br /></td></tr>
<tr class="separator:ab340fca3178be3517ad134375f035deb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a192ce782291c376c9626d9673afba167"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a192ce782291c376c9626d9673afba167">GetDiagRec</a> (short sRecNumber, std::wstring &amp;SqlState, boost::int32_t &amp;NativeError, std::wstring &amp;MessageText, bool &amp;bDataRead) const</td></tr>
<tr class="memdesc:a192ce782291c376c9626d9673afba167"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a diagnostics record.  <a href="#a192ce782291c376c9626d9673afba167">More...</a><br /></td></tr>
<tr class="separator:a192ce782291c376c9626d9673afba167"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cbdd9396900d0c078eeb540ca782b16"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a2cbdd9396900d0c078eeb540ca782b16">IsValid</a> () const</td></tr>
<tr class="memdesc:a2cbdd9396900d0c078eeb540ca782b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if this connection is a valid allocated connection.  <a href="#a2cbdd9396900d0c078eeb540ca782b16">More...</a><br /></td></tr>
<tr class="separator:a2cbdd9396900d0c078eeb540ca782b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a3725749fd56453084a6f65a051dc6b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a6a3725749fd56453084a6f65a051dc6b">IsConnected</a> () const</td></tr>
<tr class="memdesc:a6a3725749fd56453084a6f65a051dc6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a connection has been established.  <a href="#a6a3725749fd56453084a6f65a051dc6b">More...</a><br /></td></tr>
<tr class="separator:a6a3725749fd56453084a6f65a051dc6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ae3996bf14406c2767b77dd8bdbcdbd"><td class="memItemLeft" align="right" valign="top">SQLHDBC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#a1ae3996bf14406c2767b77dd8bdbcdbd">Handle</a> () const</td></tr>
<tr class="memdesc:a1ae3996bf14406c2767b77dd8bdbcdbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the ODBC Handle of the environment.  <a href="#a1ae3996bf14406c2767b77dd8bdbcdbd">More...</a><br /></td></tr>
<tr class="separator:a1ae3996bf14406c2767b77dd8bdbcdbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:acc082c30eb517d5d6a525c7f04b7d42a"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01009.xhtml#acc082c30eb517d5d6a525c7f04b7d42a">Safir::Databases::Odbc::Statement</a></td></tr>
<tr class="separator:acc082c30eb517d5d6a525c7f04b7d42a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="a01009.xhtml" title="The Connection class models a connection made to the database engine. ">Connection</a> class models a connection made to the database engine. </p>
<p>An application should have one connection object per connection and in ODBC one connection can only process one statement at the time. All Connections needs to be allocated and deallocated before use.</p>
<dl class="deprecated"><dt><b><a class="el" href="a00404.xhtml#_deprecated000002">Deprecated:</a></b></dt><dd>All functionality in the <a class="el" href="a00409.xhtml" title="This namespace contains ODBC database support for Safir SDK Core. ">Safir::Databases::Odbc</a> namespace is deprecated. </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a12744938a347d048cf1c1208afe1c790"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12744938a347d048cf1c1208afe1c790">&sect;&nbsp;</a></span>Connection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Databases::Odbc::Connection::Connection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a id="a02bdf90f6a9b73269df9f168f96a97b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02bdf90f6a9b73269df9f168f96a97b1">&sect;&nbsp;</a></span>~Connection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Databases::Odbc::Connection::~Connection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0d1a28083b3bc234746c1e48de3ebcf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d1a28083b3bc234746c1e48de3ebcf0">&sect;&nbsp;</a></span>Alloc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::Alloc </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a01013.xhtml">Environment</a> &amp;&#160;</td>
          <td class="paramname"><em>environment</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocates a new connection to the database. </p>
<p>See SQLAllocHandle in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">environment</td><td>- the environment the connection is made through. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLAllocHandle failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6b02e7533bc44783e291739d7e89c3ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b02e7533bc44783e291739d7e89c3ea">&sect;&nbsp;</a></span>Commit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::Commit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Commits the changes permanently made in this transaction. </p>
<p>Call <a class="el" href="a01009.xhtml#a7d50be566ac1abc71a51cf4786dc3030" title="Set odbc to require manual commits to end transactions. ">UseManualTransactions()</a> to be able to use <a class="el" href="a01009.xhtml#a6b02e7533bc44783e291739d7e89c3ea" title="Commits the changes permanently made in this transaction. ">Commit()</a> and <a class="el" href="a01009.xhtml#aac9df42f9c163665ba241f47d221b289" title="Remove all changes made in this transaction. ">Rollback()</a> to end transactions. See SQLSetConnectAttr and the attribute SQL_ATTR_AUTOCOMMIT in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLEndTran failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afbc830b46a5c8a3e49c6fb27ec145a59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbc830b46a5c8a3e49c6fb27ec145a59">&sect;&nbsp;</a></span>Connect() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::Connect </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>wszConnectionString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>establishes a connection to the database. </p>
<p>See SQLDriverConnect in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">wszConnectionString</td><td>- an odbc connection string in which attributes for the connection to the RDBMS is contained. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLDriverConnect failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae87fcaf60f4fc9ce6dd812b58bf903b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae87fcaf60f4fc9ce6dd812b58bf903b3">&sect;&nbsp;</a></span>Connect() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::Connect </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>cszConnectionString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>establishes a connection to the database. </p>
<p>See SQLDriverConnect in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cszConnectionString</td><td>- an odbc connection string in which attributes for the connection to the RDBMS is contained. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLDriverConnect failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa445ef04a60225458165b713a47a5f51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa445ef04a60225458165b713a47a5f51">&sect;&nbsp;</a></span>Disconnect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::Disconnect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>disconnects from the database. </p>
<p>All statements are automatically freed by ODBC when disconnecting. After a disconnect statements have to be reallocated and prepared. Columns and parameters have to be rebound.</p>
<p>See SQLDisconnect in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01473.xhtml" title="The operation took longer then the specified timeout time to execute. ">TimeoutException</a></td><td>- Timeout has occurred. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa1587fddb80bbef1729b3809aa6b5e55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1587fddb80bbef1729b3809aa6b5e55">&sect;&nbsp;</a></span>Free()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::Free </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Frees the connection previously allocated to the database. </p>
<p>See SQLFreeHandle in ODBC documentation for more info. </p>

</div>
</div>
<a id="a6467394fa75892929430fb7ce8c0ee8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6467394fa75892929430fb7ce8c0ee8f">&sect;&nbsp;</a></span>GetConnectAttr() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::GetConnectAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long &amp;&#160;</td>
          <td class="paramname"><em>lValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a value for a ODBC connection attribute. </p>
<p>See SQLSetConnectAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">lValue</td><td>- The value of the attribute </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLGetConnectAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab340fca3178be3517ad134375f035deb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab340fca3178be3517ad134375f035deb">&sect;&nbsp;</a></span>GetConnectAttr() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::GetConnectAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wchar_t *&#160;</td>
          <td class="paramname"><em>wszValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>ulLength</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a value for a ODBC connection attribute. </p>
<p>See SQLSetConnectAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">wszValue</td><td>- The value of the attribute </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ulLength</td><td>- Size in bytes of the szValue buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLGetConnectAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a192ce782291c376c9626d9673afba167"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a192ce782291c376c9626d9673afba167">&sect;&nbsp;</a></span>GetDiagRec()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Connection::GetDiagRec </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>sRecNumber</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::wstring &amp;&#160;</td>
          <td class="paramname"><em>SqlState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">boost::int32_t &amp;&#160;</td>
          <td class="paramname"><em>NativeError</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::wstring &amp;&#160;</td>
          <td class="paramname"><em>MessageText</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>bDataRead</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a diagnostics record. </p>
<p>See SQLGetDiagRec in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sRecNumber</td><td>- The sql error record. Starts at 1. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">SqlState</td><td>- The five char sql state error code. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">NativeError</td><td>- Driver specific error code. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">MessageText</td><td>- The diagnostic message text string. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">bDataRead</td><td>- true if data has been placed in the buffers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1ae3996bf14406c2767b77dd8bdbcdbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ae3996bf14406c2767b77dd8bdbcdbd">&sect;&nbsp;</a></span>Handle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SQLHDBC Safir::Databases::Odbc::Connection::Handle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the ODBC Handle of the environment. </p>
<dl class="section return"><dt>Returns</dt><dd>An ODBC <a class="el" href="a01013.xhtml" title="The Environment class models the necessary setup each application neeeds in order to access the datab...">Environment</a> handle. </dd></dl>

</div>
</div>
<a id="a6a3725749fd56453084a6f65a051dc6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a3725749fd56453084a6f65a051dc6b">&sect;&nbsp;</a></span>IsConnected()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Connection::IsConnected </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if a connection has been established. </p>
<dl class="section return"><dt>Returns</dt><dd>An ODBC <a class="el" href="a01013.xhtml" title="The Environment class models the necessary setup each application neeeds in order to access the datab...">Environment</a> handle. </dd></dl>

</div>
</div>
<a id="a2cbdd9396900d0c078eeb540ca782b16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cbdd9396900d0c078eeb540ca782b16">&sect;&nbsp;</a></span>IsValid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Databases::Odbc::Connection::IsValid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if this connection is a valid allocated connection. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the connection is ok to use. </dd></dl>

<p>Referenced by <a class="el" href="a01017.xhtml#a084ff1ca2c5033e440a4bf3ca15af65d">Safir::Databases::Odbc::Statement::BindColumn()</a>, <a class="el" href="a01017.xhtml#a5d81aab962b1c84fcec0d420ca009e54">Safir::Databases::Odbc::Statement::BindLongParameter()</a>, <a class="el" href="a01017.xhtml#a80498e2e62d8c7bf5983100beb7bf14f">Safir::Databases::Odbc::Statement::BindParameter()</a>, <a class="el" href="a01017.xhtml#a5d6ffee4d4cdc80513813e54b805a3d0">Safir::Databases::Odbc::Statement::GetData()</a>, and <a class="el" href="a01017.xhtml#a6195945181f5002d7a0da5942110672b">Safir::Databases::Odbc::Statement::PutData()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01009_a2cbdd9396900d0c078eeb540ca782b16_icgraph.svg" width="430" height="314"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aac9df42f9c163665ba241f47d221b289"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac9df42f9c163665ba241f47d221b289">&sect;&nbsp;</a></span>Rollback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::Rollback </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove all changes made in this transaction. </p>
<p>Call <a class="el" href="a01009.xhtml#a7d50be566ac1abc71a51cf4786dc3030" title="Set odbc to require manual commits to end transactions. ">UseManualTransactions()</a> to be able to use <a class="el" href="a01009.xhtml#a6b02e7533bc44783e291739d7e89c3ea" title="Commits the changes permanently made in this transaction. ">Commit()</a> and <a class="el" href="a01009.xhtml#aac9df42f9c163665ba241f47d221b289" title="Remove all changes made in this transaction. ">Rollback()</a> to end transactions. See SQLSetConnectAttr and the attribute SQL_ATTR_AUTOCOMMIT in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLEndTran failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a626e3dc7290380e5ce0d7345a73ee015"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a626e3dc7290380e5ce0d7345a73ee015">&sect;&nbsp;</a></span>SetConnectAttr() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::SetConnectAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets a value for a ODBC connection attribute. </p>
<p>See SQLSetConnectAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lValue</td><td>- The value of the attribute to be set </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLSetConnectAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af86d3a7fe22f91a0f8f350a7084d8247"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af86d3a7fe22f91a0f8f350a7084d8247">&sect;&nbsp;</a></span>SetConnectAttr() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::SetConnectAttr </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>lAttribute</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>wszValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets a value for a ODBC connection attribute. </p>
<p>See SQLSetConnectAttr in ODBC documentation for more info.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">lAttribute</td><td>- An integer representing the attribute </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wszValue</td><td>- The value of the attribute to be set </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLSetConnectAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a006ffbda5bb98dc507b87bb4eae395c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a006ffbda5bb98dc507b87bb4eae395c0">&sect;&nbsp;</a></span>UseAutoTransactions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::UseAutoTransactions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set odbc to automatically commit each transaction after a successful query. </p>
<p>This is the default choice. See SQLSetConnectAttr and the attribute SQL_ATTR_AUTOCOMMIT in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLSetConnectAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7d50be566ac1abc71a51cf4786dc3030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d50be566ac1abc71a51cf4786dc3030">&sect;&nbsp;</a></span>UseManualTransactions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Databases::Odbc::Connection::UseManualTransactions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set odbc to require manual commits to end transactions. </p>
<p>Call this to be able to use <a class="el" href="a01009.xhtml#a6b02e7533bc44783e291739d7e89c3ea" title="Commits the changes permanently made in this transaction. ">Commit()</a> and <a class="el" href="a01009.xhtml#aac9df42f9c163665ba241f47d221b289" title="Remove all changes made in this transaction. ">Rollback()</a> to end transactions. See SQLSetConnectAttr and the attribute SQL_ATTR_AUTOCOMMIT in ODBC documentation for more info.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01465.xhtml" title="The database is down. ">ReconnectException</a></td><td>- SQLSetConnectAttr failed. Check GetDiagRec for info. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="acc082c30eb517d5d6a525c7f04b7d42a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc082c30eb517d5d6a525c7f04b7d42a">&sect;&nbsp;</a></span>Safir::Databases::Odbc::Statement</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="a01017.xhtml">Safir::Databases::Odbc::Statement</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00408.xhtml">Databases</a></li><li class="navelem"><a class="el" href="a00409.xhtml">Odbc</a></li><li class="navelem"><a class="el" href="a01009.xhtml">Connection</a></li>
    <li class="footer">Generated on Tue Nov 1 2016 11:04:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
