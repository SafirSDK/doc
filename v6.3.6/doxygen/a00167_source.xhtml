<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/ToolSupport/TypeRepository.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00167_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TypeRepository.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00167.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2004-2015 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Joel Ottosson / joot</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more Internals.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __DOTS_INTERNAL_TYPE_REPOSITORY_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __DOTS_INTERNAL_TYPE_REPOSITORY_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/LanguageInterfaceDefs.h&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;Safir/Utilities/Internal/Id.h&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>ToolSupport</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="comment">//forward declarations</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="a01333.xhtml">   42</a></span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">struct </span><a class="code" href="a01333.xhtml">TypeRepositoryTraits</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">class </span><a class="code" href="a01369.xhtml">ClassDescription</a>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">class </span><a class="code" href="a01353.xhtml">MemberDescription</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="a01337.xhtml">   49</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01337.xhtml">PropertyDescription</a></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a6e562a12e5a0c0ae6d5f8641cc37b2e4">FileName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId <a class="code" href="a01337.xhtml#a6c4e5c611f1eff72e1029e43054c9308">GetTypeId</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">GetName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="a01337.xhtml#aff72c56ebe16e698202947230ef2791c">GetNumberOfMembers</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keyword">virtual</span> DotsC_MemberIndex <a class="code" href="a01337.xhtml#a3e5c35d3df890f163082b53f1fed6a9e">GetMemberIndex</a>(<span class="keyword">const</span> std::string&amp; memberName) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01353.xhtml">MemberDescription</a>* <a class="code" href="a01337.xhtml#ae73d5afde1c9b149a6aa50a1953bd471">GetMember</a>(DotsC_MemberIndex index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    };</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="a01341.xhtml">  100</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01341.xhtml">ExceptionDescription</a></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a6e562a12e5a0c0ae6d5f8641cc37b2e4">FileName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId <a class="code" href="a01337.xhtml#a6c4e5c611f1eff72e1029e43054c9308">GetTypeId</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">GetName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01341.xhtml">ExceptionDescription</a>* GetBaseClass() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    };</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="a01345.xhtml">  137</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01345.xhtml">ParameterDescription</a></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">GetName</a>() <span class="keyword">const</span>=0; <span class="comment">//get the parameter name, no namespace and class name: MyParameter</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId GetClassTypeId() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetQualifiedName() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keyword">virtual</span> DotsC_MemberType GetMemberType() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId <a class="code" href="a01337.xhtml#a6c4e5c611f1eff72e1029e43054c9308">GetTypeId</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keyword">virtual</span> DotsC_CollectionType GetCollectionType() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keyword">virtual</span> DotsC_MemberType GetKeyType() <span class="keyword">const</span>=0; <span class="comment">//only valid if collectionType is Dictionary</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId GetKeyTypeId() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfValues() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsHidden() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="comment">//Get parameter values - depending on actual type of the parameter</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="comment">//For entityId use GetInt64Value for typeId and GetHashedValue for instanceId</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keyword">virtual</span> DotsC_Int32 GetInt32Value(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0; <span class="comment">//int32, enum</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keyword">virtual</span> DotsC_Int64 GetInt64Value(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0; <span class="comment">//int64, typeId</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keyword">virtual</span> DotsC_Float32 GetFloat32Value(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0; <span class="comment">//float32, si32</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keyword">virtual</span> DotsC_Float64 GetFloat64Value(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0; <span class="comment">//float64, si64</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> GetBoolValue(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetStringValue(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keyword">virtual</span> std::pair&lt;const char*, DotsC_Int32&gt; GetObjectValue(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keyword">virtual</span> std::pair&lt;const char*, DotsC_Int32&gt; GetBinaryValue(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keyword">virtual</span> std::pair&lt;DotsC_Int64, const char*&gt; GetHashedValue(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0; <span class="comment">//instanceId, channelId, handlerId</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keyword">virtual</span> DotsC_Int32 GetInt32Key(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keyword">virtual</span> DotsC_Int64 GetInt64Key(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetStringKey(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keyword">virtual</span> std::pair&lt;DotsC_Int64, const char*&gt; GetHashedKey(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0; <span class="comment">//instanceId, channelId, handlerId</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetIndexByUnifiedKey(DotsC_Int64 unifiedKey) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> std::map&lt;DotsC_Int64, int&gt;&amp; UnifiedKeyToIndexMap() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    };</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="a01349.xhtml">  321</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01349.xhtml">EnumDescription</a></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a6e562a12e5a0c0ae6d5f8641cc37b2e4">FileName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId <a class="code" href="a01337.xhtml#a6c4e5c611f1eff72e1029e43054c9308">GetTypeId</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">GetName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId GetCheckSum() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfValues() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetValueName(DotsC_EnumerationValue val) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetIndexOfValue(<span class="keyword">const</span> std::string&amp; valueName) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    };</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="a01353.xhtml">  378</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01353.xhtml">MemberDescription</a></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    {</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId <a class="code" href="a01337.xhtml#a6c4e5c611f1eff72e1029e43054c9308">GetTypeId</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">GetName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keyword">virtual</span> DotsC_MemberType GetMemberType() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <span class="keyword">virtual</span> DotsC_CollectionType GetCollectionType() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="keyword">virtual</span> DotsC_MemberType GetKeyType() <span class="keyword">const</span>=0; <span class="comment">//only valid if collectionType is Dictionary</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId GetKeyTypeId() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="a00416.xhtml#a5efb85582398aefa4de1e09b7aad3386">GetArraySize</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetMaxLength() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    };</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="a01357.xhtml">  442</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01357.xhtml">MemberMappingDescription</a></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    {</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keyword">virtual</span> DotsC_PropertyMappingKind GetMappingKind() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keyword">virtual</span> std::pair&lt;<span class="keyword">const</span> <a class="code" href="a01345.xhtml">ParameterDescription</a>*, <span class="keywordtype">int</span> <span class="comment">/*paramIndex*/</span>&gt; GetParameter() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="comment">//if mapped to member</span></div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment"></span>        <span class="keyword">virtual</span> <span class="keywordtype">int</span> MemberReferenceDepth() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keyword">virtual</span> std::pair&lt;DotsC_MemberIndex, DotsC_Int32&gt; GetMemberReference(<span class="keywordtype">int</span> depth) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    };</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno"><a class="line" href="a01361.xhtml">  479</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01361.xhtml">PropertyMappingDescription</a></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    {</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a6e562a12e5a0c0ae6d5f8641cc37b2e4">FileName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01337.xhtml">PropertyDescription</a>* GetProperty() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01369.xhtml">ClassDescription</a>* GetClass() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01357.xhtml">MemberMappingDescription</a>* GetMemberMapping(<span class="keywordtype">int</span> propertyMemberIndex) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    };</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno"><a class="line" href="a01365.xhtml">  517</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01365.xhtml">CreateRoutineDescription</a></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    {</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">GetName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfInParameters() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01353.xhtml">MemberDescription</a>* GetInParameterMember(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfDefaultValues() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01353.xhtml">MemberDescription</a>* GetDefaultValueMember(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="keyword">virtual</span> std::pair&lt;<span class="keyword">const</span> <a class="code" href="a01345.xhtml">ParameterDescription</a>*, <span class="keywordtype">int</span> <span class="comment">/*paramIndex*/</span>&gt; GetDefaultValue(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    };</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00569"></a><span class="lineno"><a class="line" href="a01369.xhtml">  569</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01369.xhtml">ClassDescription</a></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a6e562a12e5a0c0ae6d5f8641cc37b2e4">FileName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Summary</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="keyword">virtual</span> DotsC_TypeId <a class="code" href="a01337.xhtml#a6c4e5c611f1eff72e1029e43054c9308">GetTypeId</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">GetName</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01369.xhtml">ClassDescription</a>* GetBaseClass() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfDescendants() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01369.xhtml">ClassDescription</a>* GetDescendant(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="a01337.xhtml#aff72c56ebe16e698202947230ef2791c">GetNumberOfMembers</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfOwnMembers() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfInheritedMembers() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keyword">virtual</span> DotsC_MemberIndex <a class="code" href="a01337.xhtml#a3e5c35d3df890f163082b53f1fed6a9e">GetMemberIndex</a>(<span class="keyword">const</span> std::string&amp; memberName) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01353.xhtml">MemberDescription</a>* <a class="code" href="a01337.xhtml#ae73d5afde1c9b149a6aa50a1953bd471">GetMember</a>(DotsC_MemberIndex index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="a00418.xhtml#a10377189b1450ccbd19c4d35c10734a9">GetNumberOfParameters</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfOwnParameters() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfInheritedParameters() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01345.xhtml">ParameterDescription</a>* GetParameter(DotsC_ParameterIndex index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetPropertyIds(std::set&lt;DotsC_TypeId&gt;&amp; propertyIds) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01361.xhtml">PropertyMappingDescription</a>* GetPropertyMapping(DotsC_TypeId propertyTypeId, <span class="keywordtype">bool</span>&amp; isInherited) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfCreateRoutines() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01365.xhtml">CreateRoutineDescription</a>* GetCreateRoutine(<span class="keywordtype">int</span> index) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    };</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno"><a class="line" href="a01373.xhtml">  703</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01373.xhtml">TypeRepository</a></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    {</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <span class="comment">// Enumerations</span></div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="comment"></span>        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01349.xhtml">EnumDescription</a>* GetEnum(DotsC_TypeId typeId) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfEnums() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetAllEnumTypeIds(std::set&lt;DotsC_TypeId&gt;&amp; typeIds) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="comment">// Properties</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="comment"></span>        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01337.xhtml">PropertyDescription</a>* GetProperty(DotsC_TypeId typeId) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="a00417.xhtml#a72a8e31713d6252c3850b7ce4a0d4c2d">GetNumberOfProperties</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetAllPropertyTypeIds(std::set&lt;DotsC_TypeId&gt;&amp; typeIds) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        <span class="comment">// Classes</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="comment"></span>        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01369.xhtml">ClassDescription</a>* GetClass(DotsC_TypeId typeId) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="a00417.xhtml#a6432205b3070b9e634e31f7357859505">GetNumberOfClasses</a>() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetAllClassTypeIds(std::set&lt;DotsC_TypeId&gt;&amp; typeIds) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <span class="comment">// Exceptions</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        <span class="comment">//-----------------</span></div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="comment"></span>        <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a01341.xhtml">ExceptionDescription</a>* GetException(DotsC_TypeId typeId) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">int</span> GetNumberOfExceptions() <span class="keyword">const</span>=0;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetAllExceptionTypeIds(std::set&lt;DotsC_TypeId&gt;&amp; typeIds) <span class="keyword">const</span>=0;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    };</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00799"></a><span class="lineno"><a class="line" href="a01377.xhtml">  799</a></span>&#160;    <span class="keyword">template</span>&lt;&gt; <span class="keyword">struct </span><a class="code" href="a01333.xhtml">TypeRepositoryTraits</a>&lt;<a class="code" href="a01373.xhtml">TypeRepository</a>&gt;</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    {</div><div class="line"><a name="l00801"></a><span class="lineno"><a class="line" href="a01377.xhtml#a095e3a315ee806c89b1afa4eb2840682">  801</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01373.xhtml">TypeRepository</a> <a class="code" href="a01377.xhtml#a095e3a315ee806c89b1afa4eb2840682">RepositoryType</a>;</div><div class="line"><a name="l00802"></a><span class="lineno"><a class="line" href="a01377.xhtml#a0cd933d44a174cc2d851d77d7470d4b4">  802</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01369.xhtml">ClassDescription</a> <a class="code" href="a01377.xhtml#a0cd933d44a174cc2d851d77d7470d4b4">ClassDescriptionType</a>;</div><div class="line"><a name="l00803"></a><span class="lineno"><a class="line" href="a01377.xhtml#a144b701e132c3c9c0b41bbb2dbd6935f">  803</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01353.xhtml">MemberDescription</a> <a class="code" href="a01377.xhtml#a144b701e132c3c9c0b41bbb2dbd6935f">MemberDescriptionType</a>;</div><div class="line"><a name="l00804"></a><span class="lineno"><a class="line" href="a01377.xhtml#a839865b1023f584dc85488e1f5b1bd8c">  804</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01337.xhtml">PropertyDescription</a> <a class="code" href="a01377.xhtml#a839865b1023f584dc85488e1f5b1bd8c">PropertyDescriptionType</a>;</div><div class="line"><a name="l00805"></a><span class="lineno"><a class="line" href="a01377.xhtml#ab5b2ef3e90b51c86971dd1ae50ae99c3">  805</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01341.xhtml">ExceptionDescription</a> <a class="code" href="a01377.xhtml#ab5b2ef3e90b51c86971dd1ae50ae99c3">ExceptionDescriptionType</a>;</div><div class="line"><a name="l00806"></a><span class="lineno"><a class="line" href="a01377.xhtml#a4418c999d20ffb9745bbb00f71a2fda8">  806</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01345.xhtml">ParameterDescription</a> <a class="code" href="a01377.xhtml#a4418c999d20ffb9745bbb00f71a2fda8">ParameterDescriptionType</a>;</div><div class="line"><a name="l00807"></a><span class="lineno"><a class="line" href="a01377.xhtml#a58379db051c89afecd9b675c2d92cd83">  807</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01349.xhtml">EnumDescription</a> <a class="code" href="a01377.xhtml#a58379db051c89afecd9b675c2d92cd83">EnumDescriptionType</a>;</div><div class="line"><a name="l00808"></a><span class="lineno"><a class="line" href="a01377.xhtml#ade5a76a80f7b715a5f683ffd8e455f3b">  808</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01357.xhtml">MemberMappingDescription</a> <a class="code" href="a01377.xhtml#ade5a76a80f7b715a5f683ffd8e455f3b">MemberMappingDescriptionType</a>;</div><div class="line"><a name="l00809"></a><span class="lineno"><a class="line" href="a01377.xhtml#aeabcc0d426aad40eefd1ea633ad4dee3">  809</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01361.xhtml">PropertyMappingDescription</a> <a class="code" href="a01377.xhtml#aeabcc0d426aad40eefd1ea633ad4dee3">PropertyMappingDescriptionType</a>;</div><div class="line"><a name="l00810"></a><span class="lineno"><a class="line" href="a01377.xhtml#a5184d1e2aea7ffa8895a2fa9477e6449">  810</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01365.xhtml">CreateRoutineDescription</a> <a class="code" href="a01377.xhtml#a5184d1e2aea7ffa8895a2fa9477e6449">CreateRoutineDescriptionType</a>;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    };</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;}</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;}</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;}</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;} <span class="comment">//end namespace Safir::Dob::Typesystem::Internal</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="a01377_xhtml_ab5b2ef3e90b51c86971dd1ae50ae99c3"><div class="ttname"><a href="a01377.xhtml#ab5b2ef3e90b51c86971dd1ae50ae99c3">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::ExceptionDescriptionType</a></div><div class="ttdeci">ExceptionDescription ExceptionDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:805</div></div>
<div class="ttc" id="a01337_xhtml_a6c4e5c611f1eff72e1029e43054c9308"><div class="ttname"><a href="a01337.xhtml#a6c4e5c611f1eff72e1029e43054c9308">Safir::Dob::Typesystem::ToolSupport::PropertyDescription::GetTypeId</a></div><div class="ttdeci">virtual DotsC_TypeId GetTypeId() const =0</div><div class="ttdoc">Get the typeId of this property. </div></div>
<div class="ttc" id="a01377_xhtml_a4418c999d20ffb9745bbb00f71a2fda8"><div class="ttname"><a href="a01377.xhtml#a4418c999d20ffb9745bbb00f71a2fda8">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::ParameterDescriptionType</a></div><div class="ttdeci">ParameterDescription ParameterDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:806</div></div>
<div class="ttc" id="a00417_xhtml_a72a8e31713d6252c3850b7ce4a0d4c2d"><div class="ttname"><a href="a00417.xhtml#a72a8e31713d6252c3850b7ce4a0d4c2d">Safir::Dob::Typesystem::Operations::GetNumberOfProperties</a></div><div class="ttdeci">DOTS_CPP_API Dob::Typesystem::Int32 GetNumberOfProperties()</div><div class="ttdoc">Get the number of properties defined in the system. </div></div>
<div class="ttc" id="a01341_xhtml"><div class="ttname"><a href="a01341.xhtml">Safir::Dob::Typesystem::ToolSupport::ExceptionDescription</a></div><div class="ttdoc">Description of an exception type. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:100</div></div>
<div class="ttc" id="a01361_xhtml"><div class="ttname"><a href="a01361.xhtml">Safir::Dob::Typesystem::ToolSupport::PropertyMappingDescription</a></div><div class="ttdoc">Description of a property mapping. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:479</div></div>
<div class="ttc" id="a00416_xhtml_a5efb85582398aefa4de1e09b7aad3386"><div class="ttname"><a href="a00416.xhtml#a5efb85582398aefa4de1e09b7aad3386">Safir::Dob::Typesystem::Members::GetArraySize</a></div><div class="ttdeci">DOTS_CPP_API Dob::Typesystem::Int32 GetArraySize(const Dob::Typesystem::TypeId typeId, const Dob::Typesystem::MemberIndex member)</div><div class="ttdoc">Get the array size of a member. </div></div>
<div class="ttc" id="a01337_xhtml_a9680407decb94aef19feeeb3c77a422a"><div class="ttname"><a href="a01337.xhtml#a9680407decb94aef19feeeb3c77a422a">Safir::Dob::Typesystem::ToolSupport::PropertyDescription::GetName</a></div><div class="ttdeci">virtual const char * GetName() const =0</div><div class="ttdoc">Get qualified name of the property type. </div></div>
<div class="ttc" id="a01377_xhtml_a0cd933d44a174cc2d851d77d7470d4b4"><div class="ttname"><a href="a01377.xhtml#a0cd933d44a174cc2d851d77d7470d4b4">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::ClassDescriptionType</a></div><div class="ttdeci">ClassDescription ClassDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:802</div></div>
<div class="ttc" id="a01337_xhtml_acf8b95b584c8b5de152bab398f2fc772"><div class="ttname"><a href="a01337.xhtml#acf8b95b584c8b5de152bab398f2fc772">Safir::Dob::Typesystem::ToolSupport::PropertyDescription::Summary</a></div><div class="ttdeci">virtual const char * Summary() const =0</div><div class="ttdoc">Get a summary about this property. </div></div>
<div class="ttc" id="a01349_xhtml"><div class="ttname"><a href="a01349.xhtml">Safir::Dob::Typesystem::ToolSupport::EnumDescription</a></div><div class="ttdoc">Description of an enumeration type. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:321</div></div>
<div class="ttc" id="a01369_xhtml"><div class="ttname"><a href="a01369.xhtml">Safir::Dob::Typesystem::ToolSupport::ClassDescription</a></div><div class="ttdoc">Description of a class type. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:569</div></div>
<div class="ttc" id="a01337_xhtml_a6e562a12e5a0c0ae6d5f8641cc37b2e4"><div class="ttname"><a href="a01337.xhtml#a6e562a12e5a0c0ae6d5f8641cc37b2e4">Safir::Dob::Typesystem::ToolSupport::PropertyDescription::FileName</a></div><div class="ttdeci">virtual const char * FileName() const =0</div><div class="ttdoc">Get dou file path as a string. </div></div>
<div class="ttc" id="a01337_xhtml_a3e5c35d3df890f163082b53f1fed6a9e"><div class="ttname"><a href="a01337.xhtml#a3e5c35d3df890f163082b53f1fed6a9e">Safir::Dob::Typesystem::ToolSupport::PropertyDescription::GetMemberIndex</a></div><div class="ttdeci">virtual DotsC_MemberIndex GetMemberIndex(const std::string &amp;memberName) const =0</div><div class="ttdoc">Get index of a named member. </div></div>
<div class="ttc" id="a01337_xhtml"><div class="ttname"><a href="a01337.xhtml">Safir::Dob::Typesystem::ToolSupport::PropertyDescription</a></div><div class="ttdoc">Description of a property type. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:49</div></div>
<div class="ttc" id="a01357_xhtml"><div class="ttname"><a href="a01357.xhtml">Safir::Dob::Typesystem::ToolSupport::MemberMappingDescription</a></div><div class="ttdoc">Description of a property member mapping. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:442</div></div>
<div class="ttc" id="a00418_xhtml_a10377189b1450ccbd19c4d35c10734a9"><div class="ttname"><a href="a00418.xhtml#a10377189b1450ccbd19c4d35c10734a9">Safir::Dob::Typesystem::Parameters::GetNumberOfParameters</a></div><div class="ttdeci">DOTS_CPP_API Dob::Typesystem::Int32 GetNumberOfParameters(const Dob::Typesystem::TypeId typeId)</div><div class="ttdoc">Get the number of parameters defined in a class. </div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01345_xhtml"><div class="ttname"><a href="a01345.xhtml">Safir::Dob::Typesystem::ToolSupport::ParameterDescription</a></div><div class="ttdoc">Description of a parameter. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:137</div></div>
<div class="ttc" id="a01365_xhtml"><div class="ttname"><a href="a01365.xhtml">Safir::Dob::Typesystem::ToolSupport::CreateRoutineDescription</a></div><div class="ttdoc">Description of a create routine. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:517</div></div>
<div class="ttc" id="a01377_xhtml_a144b701e132c3c9c0b41bbb2dbd6935f"><div class="ttname"><a href="a01377.xhtml#a144b701e132c3c9c0b41bbb2dbd6935f">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::MemberDescriptionType</a></div><div class="ttdeci">MemberDescription MemberDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:803</div></div>
<div class="ttc" id="a01337_xhtml_ae73d5afde1c9b149a6aa50a1953bd471"><div class="ttname"><a href="a01337.xhtml#ae73d5afde1c9b149a6aa50a1953bd471">Safir::Dob::Typesystem::ToolSupport::PropertyDescription::GetMember</a></div><div class="ttdeci">virtual const MemberDescription * GetMember(DotsC_MemberIndex index) const =0</div><div class="ttdoc">Get a member description. </div></div>
<div class="ttc" id="a01377_xhtml_a095e3a315ee806c89b1afa4eb2840682"><div class="ttname"><a href="a01377.xhtml#a095e3a315ee806c89b1afa4eb2840682">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::RepositoryType</a></div><div class="ttdeci">TypeRepository RepositoryType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:801</div></div>
<div class="ttc" id="a01377_xhtml_aeabcc0d426aad40eefd1ea633ad4dee3"><div class="ttname"><a href="a01377.xhtml#aeabcc0d426aad40eefd1ea633ad4dee3">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::PropertyMappingDescriptionType</a></div><div class="ttdeci">PropertyMappingDescription PropertyMappingDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:809</div></div>
<div class="ttc" id="a01333_xhtml"><div class="ttname"><a href="a01333.xhtml">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits</a></div><div class="ttdef"><b>Definition:</b> TypeRepository.h:42</div></div>
<div class="ttc" id="a01373_xhtml"><div class="ttname"><a href="a01373.xhtml">Safir::Dob::Typesystem::ToolSupport::TypeRepository</a></div><div class="ttdoc">The TypeRepository class is the baseclass of any TypeRepository implementation. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:703</div></div>
<div class="ttc" id="a01353_xhtml"><div class="ttname"><a href="a01353.xhtml">Safir::Dob::Typesystem::ToolSupport::MemberDescription</a></div><div class="ttdoc">Description of a member. </div><div class="ttdef"><b>Definition:</b> TypeRepository.h:378</div></div>
<div class="ttc" id="a01377_xhtml_ade5a76a80f7b715a5f683ffd8e455f3b"><div class="ttname"><a href="a01377.xhtml#ade5a76a80f7b715a5f683ffd8e455f3b">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::MemberMappingDescriptionType</a></div><div class="ttdeci">MemberMappingDescription MemberMappingDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:808</div></div>
<div class="ttc" id="a01337_xhtml_aff72c56ebe16e698202947230ef2791c"><div class="ttname"><a href="a01337.xhtml#aff72c56ebe16e698202947230ef2791c">Safir::Dob::Typesystem::ToolSupport::PropertyDescription::GetNumberOfMembers</a></div><div class="ttdeci">virtual int GetNumberOfMembers() const =0</div><div class="ttdoc">Get the number of members contained by this property. </div></div>
<div class="ttc" id="a01377_xhtml_a5184d1e2aea7ffa8895a2fa9477e6449"><div class="ttname"><a href="a01377.xhtml#a5184d1e2aea7ffa8895a2fa9477e6449">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::CreateRoutineDescriptionType</a></div><div class="ttdeci">CreateRoutineDescription CreateRoutineDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:810</div></div>
<div class="ttc" id="a01377_xhtml_a58379db051c89afecd9b675c2d92cd83"><div class="ttname"><a href="a01377.xhtml#a58379db051c89afecd9b675c2d92cd83">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::EnumDescriptionType</a></div><div class="ttdeci">EnumDescription EnumDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:807</div></div>
<div class="ttc" id="a00417_xhtml_a6432205b3070b9e634e31f7357859505"><div class="ttname"><a href="a00417.xhtml#a6432205b3070b9e634e31f7357859505">Safir::Dob::Typesystem::Operations::GetNumberOfClasses</a></div><div class="ttdeci">DOTS_CPP_API Dob::Typesystem::Int32 GetNumberOfClasses()</div><div class="ttdoc">Get the number of classes defined in the system. </div></div>
<div class="ttc" id="a01377_xhtml_a839865b1023f584dc85488e1f5b1bd8c"><div class="ttname"><a href="a01377.xhtml#a839865b1023f584dc85488e1f5b1bd8c">Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt; TypeRepository &gt;::PropertyDescriptionType</a></div><div class="ttdeci">PropertyDescription PropertyDescriptionType</div><div class="ttdef"><b>Definition:</b> TypeRepository.h:804</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="dir_c1e123044e1c88c7836b2cb3c74b5ad2.xhtml">ToolSupport</a></li><li class="navelem"><a class="el" href="a00167.xhtml">TypeRepository.h</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:25 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
