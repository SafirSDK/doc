<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/SequenceContainer.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00149_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SequenceContainer.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00149.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2004-2015 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Joel Ottosson / joot</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more Internals.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00098.xhtml">Safir/Dob/Typesystem/ChannelId.h</a>&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00101.xhtml">Safir/Dob/Typesystem/ContainerBase.h</a>&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00110.xhtml">Safir/Dob/Typesystem/EntityId.h</a>&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00119.xhtml">Safir/Dob/Typesystem/HandlerId.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00131.xhtml">Safir/Dob/Typesystem/Object.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00173.xhtml">Safir/Dob/Typesystem/Utilities.h</a>&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;boost/container/vector.hpp&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="a01293.xhtml">   50</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01293.xhtml">SequenceContainerBase</a> : <span class="keyword">public</span> <a class="code" href="a01165.xhtml">ContainerBase</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="a01293.xhtml#a8d64b57879fc004366ace85de5d80b42">   54</a></span>&#160;        <span class="keyword">typedef</span> T <a class="code" href="a01293.xhtml#a8d64b57879fc004366ace85de5d80b42">ContainedType</a>;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="a01293.xhtml#a41c3e27fbfb99c72686fa2a1070c60a1">   55</a></span>&#160;        <span class="keyword">typedef</span> boost::container::vector&lt;T&gt; <a class="code" href="a01293.xhtml#a41c3e27fbfb99c72686fa2a1070c60a1">StorageType</a>;  <span class="comment">//we use boost version instead of std because we want to be able to use vector&lt;bool&gt; without warnings and errors.</span></div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="a01293.xhtml#a19f80c634b7079164fd29e527eec70f4">   56</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> StorageType::const_iterator <a class="code" href="a01293.xhtml#a19f80c634b7079164fd29e527eec70f4">const_iterator</a>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="a01293.xhtml#a132f1fe1c6cad965e5b5c3005176e619">   63</a></span>&#160;        <a class="code" href="a01293.xhtml#a132f1fe1c6cad965e5b5c3005176e619">SequenceContainerBase</a>()</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            :<a class="code" href="a01165.xhtml">ContainerBase</a>()</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            ,m_values()</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a01293.xhtml#a1f8897f6ad52a90078c78d514de847d4">   69</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a01293.xhtml#a1f8897f6ad52a90078c78d514de847d4">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <a class="code" href="a01293.xhtml#ad0698774cd16add2252f675f00259592">empty</a>();}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="a01293.xhtml#a5a76200b717ceaa2851a8108846bcacf">   71</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a01293.xhtml#a5a76200b717ceaa2851a8108846bcacf">SetNull</a>()</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <a class="code" href="a01293.xhtml#a523cd1742595488d911b29abf4b9464a">clear</a>();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="a01293.xhtml#a3e14e329eab2457ac5cf9d2b879f3eb1">   81</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="a01293.xhtml#a3e14e329eab2457ac5cf9d2b879f3eb1">size</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.size();}</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="a01293.xhtml#ad0698774cd16add2252f675f00259592">   87</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01293.xhtml#ad0698774cd16add2252f675f00259592">empty</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.empty();}</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="a01293.xhtml#a34cfd4556c897ff2f0c79348fc227d0e">   93</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01293.xhtml#a34cfd4556c897ff2f0c79348fc227d0e">front</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.front();}</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="a01293.xhtml#a22e4315f6c4a0fccbdb9d3b20b3e1b94">   99</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01293.xhtml#a22e4315f6c4a0fccbdb9d3b20b3e1b94">back</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.back();}</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="a01293.xhtml#ac937c2cb1a7d71b3ee30c26816c5a340">  105</a></span>&#160;        const_iterator <a class="code" href="a01293.xhtml#ac937c2cb1a7d71b3ee30c26816c5a340">begin</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.begin();}</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="a01293.xhtml#a6f1eda56550f9768d4358aaad59c34e3">  111</a></span>&#160;        const_iterator <a class="code" href="a01293.xhtml#a6f1eda56550f9768d4358aaad59c34e3">end</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_values.end();}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="a01293.xhtml#a523cd1742595488d911b29abf4b9464a">  117</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01293.xhtml#a523cd1742595488d911b29abf4b9464a">clear</a>()</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <a class="code" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            m_values.clear();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="a01293.xhtml#ad7d44abd2615e950079c040abae5122c">  129</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01293.xhtml#ad7d44abd2615e950079c040abae5122c">operator []</a>(<span class="keywordtype">size_t</span> index)<span class="keyword"> const</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">return</span> m_values[index];</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="a01293.xhtml#ad55b46d83630391aa0133db42b423e04">  140</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01293.xhtml#ad55b46d83630391aa0133db42b423e04">at</a>(<span class="keywordtype">size_t</span> index)<span class="keyword"> const</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">return</span> m_values.at(index);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="a01293.xhtml#a1427c59c055d2edee58adb3a548fdb56">  150</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01293.xhtml#a1427c59c055d2edee58adb3a548fdb56">push_back</a>(<span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <a class="code" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            m_values.push_back(val);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        }</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="a01293.xhtml#a0fe9256e1f9ac0cf78e2b4a515d65bcd">  161</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01293.xhtml#a0fe9256e1f9ac0cf78e2b4a515d65bcd">SetVal</a>(<span class="keywordtype">size_t</span> index, <span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <a class="code" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            m_values[index]=val;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="a01293.xhtml#ae4f7f2ab529c3ad54fae3415aff3f984">  172</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01293.xhtml#ae4f7f2ab529c3ad54fae3415aff3f984">GetVal</a>(<span class="keywordtype">size_t</span> index)<span class="keyword"> const</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">return</span> m_values[index];</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="a01293.xhtml#ad8daff190b39c542100a8daee7661532">  182</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01293.xhtml#ad8daff190b39c542100a8daee7661532">InsertAt</a>(<span class="keywordtype">size_t</span> index, <span class="keyword">const</span> ContainedType&amp; value)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <a class="code" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            m_values.insert(m_values.begin()+index, value);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="a01293.xhtml#a04b8d2dddd3a93ecfc3cc3b82abcf0d6">  192</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01293.xhtml#a04b8d2dddd3a93ecfc3cc3b82abcf0d6">EraseAt</a>(<span class="keywordtype">size_t</span> index)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <a class="code" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=<span class="keyword">true</span>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            m_values.erase(m_values.begin()+index);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="a01293.xhtml#a6bd32893a1036fd643e5e49c96bc738b">  203</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a01293.xhtml#a6bd32893a1036fd643e5e49c96bc738b">Copy</a>(<span class="keyword">const</span> <a class="code" href="a01165.xhtml">ContainerBase</a>&amp; that)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        {</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">this</span> != &amp;that)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="keywordflow">if</span> (<span class="keyword">typeid</span>(*<span class="keyword">this</span>) != <span class="keyword">typeid</span>(that))</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;Invalid call to Copy, containers are not of same type&quot;</span>,<a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="keyword">const</span> <a class="code" href="a01293.xhtml">SequenceContainerBase&lt;ContainedType&gt;</a>&amp; other=</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="a01293.xhtml">SequenceContainerBase&lt;ContainedType&gt;</a>&amp; <span class="keyword">&gt;</span>(that);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <a class="code" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>=other.<a class="code" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a>;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                m_values.clear();</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                m_values.reserve(other.m_values.size());</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordflow">for</span> (<span class="keyword">typename</span> StorageType::const_iterator it=other.m_values.begin(); it!=other.m_values.end(); ++it)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                    m_values.push_back(SequenceCopyHelper&lt;ContainedType&gt;::Copy(*it));</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> U&gt; <span class="keyword">struct </span>SequenceCopyHelper</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keyword">static</span> U <a class="code" href="a01293.xhtml#a6bd32893a1036fd643e5e49c96bc738b">Copy</a>(<span class="keyword">const</span> U&amp; val) {<span class="keywordflow">return</span> val;}</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        };</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> U&gt; <span class="keyword">struct </span>SequenceCopyHelper&lt; boost::shared_ptr&lt;U&gt; &gt;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keyword">static</span> boost::shared_ptr&lt;U&gt; <a class="code" href="a01293.xhtml#a6bd32893a1036fd643e5e49c96bc738b">Copy</a>(<span class="keyword">const</span> boost::shared_ptr&lt;U&gt; &amp; val) {<span class="keywordflow">return</span> boost::static_pointer_cast&lt;U&gt;(val-&gt;Clone());}</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        };</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        StorageType m_values;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    };</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="a01305.xhtml">  242</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01305.xhtml">SequenceContainer</a> : <span class="keyword">public</span> <a class="code" href="a01293.xhtml">SequenceContainerBase</a>&lt;T&gt;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01293.xhtml">SequenceContainerBase&lt;T&gt;</a> <a class="code" href="a01293.xhtml">Base</a>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="comment">//Override of inherited method. Parent comment describes this behaviour too..</span></div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="a01305.xhtml#a5d0ead7930988b48814c0150452ce65b">  248</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a01305.xhtml#a5d0ead7930988b48814c0150452ce65b">IsChanged</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Base::m_bIsChanged;}</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="comment">//Override of inherited method. Parent comment describes this behaviour too..</span></div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="a01305.xhtml#a41eebbf76cbb7312c22c36f6761b542a">  251</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a01305.xhtml#a41eebbf76cbb7312c22c36f6761b542a">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {Base::m_bIsChanged = changed;}</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    };</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="a01309.xhtml">  256</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01309.xhtml">GenericObjectSequenceContainerBase</a></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsChangedHere() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetChangedHere(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) = 0;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">size_t</span> <a class="code" href="a01293.xhtml#a3e14e329eab2457ac5cf9d2b879f3eb1">size</a>() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> GetObj(<span class="keyword">const</span> <span class="keywordtype">size_t</span> index) = 0;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keyword">virtual</span> <a class="code" href="a00412.xhtml#ad6e1376b0f912da9f8753cf590f26202">ObjectConstPtr</a> GetObj(<span class="keyword">const</span> <span class="keywordtype">size_t</span> index) <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keyword">friend</span> <span class="keywordtype">void</span> <a class="code" href="a00421.xhtml#adffc48c374b1a7e3fae14f61a209f64d">Utilities::MergeChanges</a>(<a class="code" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> into, <span class="keyword">const</span> <a class="code" href="a00412.xhtml#ad6e1376b0f912da9f8753cf590f26202">ObjectConstPtr</a>&amp; from);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> Merge(<span class="keyword">const</span> <a class="code" href="a01309.xhtml">GenericObjectSequenceContainerBase</a>&amp; other) = 0;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    };</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="a01313.xhtml">  333</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01313.xhtml">GenericObjectSequenceContainer</a></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        : <span class="keyword">public</span> <a class="code" href="a01293.xhtml">SequenceContainerBase</a>&lt;boost::shared_ptr&lt;T&gt; &gt;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        , <span class="keyword">public</span> <a class="code" href="a01309.xhtml">GenericObjectSequenceContainerBase</a></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    {</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01293.xhtml">SequenceContainerBase&lt;boost::shared_ptr&lt;T&gt;</a> &gt; <a class="code" href="a01293.xhtml">Base</a>;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="comment">//Override of inherited method. Parent comment describes this behaviour too..</span></div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="a01313.xhtml#aac99989ebbfd61d67672d7929a53fc0a">  341</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a01313.xhtml#aac99989ebbfd61d67672d7929a53fc0a">IsChanged</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keywordflow">if</span> (Base::m_bIsChanged)</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            }</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">typename</span> <a class="code" href="a01293.xhtml#a19f80c634b7079164fd29e527eec70f4">Base::const_iterator</a> it=Base::begin(); it!=Base::end(); ++it)</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            {</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                <span class="keywordflow">if</span> ((*it)-&gt;IsChanged()) <span class="comment">//something in an object has changed</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                {</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                }</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            }</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="a01313.xhtml#a547712b305c98207d9e2b60cf68d934e">  366</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01313.xhtml#a547712b305c98207d9e2b60cf68d934e">IsChangedHere</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="keywordflow">return</span> Base::m_bIsChanged;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        }</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="comment">//Override of inherited method. Parent comment describes this behaviour too..</span></div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="a01313.xhtml#a9ca2a786494b3eb563958b157e879921">  372</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a01313.xhtml#a9ca2a786494b3eb563958b157e879921">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            Base::m_bIsChanged = changed;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">typename</span> <a class="code" href="a01293.xhtml#a19f80c634b7079164fd29e527eec70f4">Base::const_iterator</a> it=Base::begin(); it!=Base::end(); ++it)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                (*it)-&gt;SetChanged(changed);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        }</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="a01313.xhtml#a7e75da9e1a7b4f6c474088dac1ae460f">  389</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01313.xhtml#a7e75da9e1a7b4f6c474088dac1ae460f">SetChangedHere</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            Base::m_bIsChanged = changed;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        }</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="a01313.xhtml#aada1bf660b0a18b3df87c9a41c49be2b">  394</a></span>&#160;        <span class="keywordtype">size_t</span> <a class="code" href="a01313.xhtml#aada1bf660b0a18b3df87c9a41c49be2b">size</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> Base::size();}</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="a01313.xhtml#a1d87f0ac2473d4b19e64350c40a072e0">  396</a></span>&#160;        <a class="code" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> <a class="code" href="a01313.xhtml#a1d87f0ac2473d4b19e64350c40a072e0">GetObj</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> index) {<span class="keywordflow">return</span> Base::operator[](index);}</div><div class="line"><a name="l00397"></a><span class="lineno"><a class="line" href="a01313.xhtml#a0494e8fa6be10dc61475c8c724f67a48">  397</a></span>&#160;        <a class="code" href="a00412.xhtml#ad6e1376b0f912da9f8753cf590f26202">ObjectConstPtr</a> <a class="code" href="a01313.xhtml#a0494e8fa6be10dc61475c8c724f67a48">GetObj</a>(<span class="keyword">const</span> <span class="keywordtype">size_t</span> index)<span class="keyword"> const </span>{<span class="keywordflow">return</span> Base::operator[](index);}</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> Merge(<span class="keyword">const</span> <a class="code" href="a01309.xhtml">GenericObjectSequenceContainerBase</a>&amp; that)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        {</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="preprocessor">#ifndef NDEBUG</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="keywordflow">if</span> (<span class="keyword">typeid</span>(<a class="code" href="a01313.xhtml">GenericObjectSequenceContainer&lt;T&gt;</a>) != <span class="keyword">typeid</span>(that))</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            {</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;Invalid call to Merge, containers are not of same type&quot;</span>,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                                 <a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            }</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keyword">const</span> <a class="code" href="a01313.xhtml">GenericObjectSequenceContainer&lt;T&gt;</a>&amp; other =</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="a01313.xhtml">GenericObjectSequenceContainer&lt;T&gt;</a>&amp;<span class="keyword">&gt;</span>(that);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <span class="comment">//Note: this function only gets called when IsChangedHere() == false</span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="keywordflow">if</span> (!other.<a class="code" href="a01313.xhtml#aac99989ebbfd61d67672d7929a53fc0a">IsChanged</a>())</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            <span class="keywordflow">if</span> (Base::size() != other.<a class="code" href="a01313.xhtml#aada1bf660b0a18b3df87c9a41c49be2b">size</a>())</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            {</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="a01237.xhtml">SoftwareViolationException</a>(L<span class="stringliteral">&quot;It is not possible to merge two object sequences of different sizes.&quot;</span>,</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                                 <a class="code" href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a>,__LINE__);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            }</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; Base::size(); ++i)</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                <span class="keywordflow">if</span> (other.<a class="code" href="a01293.xhtml#ad55b46d83630391aa0133db42b423e04">at</a>(i)-&gt;IsChanged())</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                    <span class="comment">//recurse</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    <a class="code" href="a00421.xhtml#adffc48c374b1a7e3fae14f61a209f64d">Utilities::MergeChanges</a>(Base::at(i),other.<a class="code" href="a01293.xhtml#ad55b46d83630391aa0133db42b423e04">at</a>(i));</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                }</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            }</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    };</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno"><a class="line" href="a00412.xhtml#a836bdb0a34c1efc1796ec4a7be0f875a">  446</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;std::wstring&gt;</a> <a class="code" href="a00412.xhtml#a836bdb0a34c1efc1796ec4a7be0f875a">StringSequenceContainer</a>;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno"><a class="line" href="a00412.xhtml#ab0a4c06b9fdb38ce5c421b07a1584856">  449</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;bool&gt;</a> <a class="code" href="a00412.xhtml#ab0a4c06b9fdb38ce5c421b07a1584856">BooleanSequenceContainer</a>;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno"><a class="line" href="a00412.xhtml#a932ab3f87e5409a8a3e57311e71a45d1">  452</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Int32&gt;</a> <a class="code" href="a00412.xhtml#a932ab3f87e5409a8a3e57311e71a45d1">Int32SequenceContainer</a>;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="a00412.xhtml#aaf36f8320f24d9f6f4ef920a1f620ea9">  455</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Int64&gt;</a> <a class="code" href="a00412.xhtml#aaf36f8320f24d9f6f4ef920a1f620ea9">Int64SequenceContainer</a>;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="a00412.xhtml#afee3c9b15b8f69319a9b77b2759539ac">  458</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Float32&gt;</a> <a class="code" href="a00412.xhtml#afee3c9b15b8f69319a9b77b2759539ac">Float32SequenceContainer</a>;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00461"></a><span class="lineno"><a class="line" href="a00412.xhtml#a806d6e3628833224de991ab9ae1d0678">  461</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Float64&gt;</a> <a class="code" href="a00412.xhtml#a806d6e3628833224de991ab9ae1d0678">Float64SequenceContainer</a>;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno"><a class="line" href="a00412.xhtml#a6d1650c15a05a1282eda713a9335d348">  464</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;TypeId&gt;</a> <a class="code" href="a00412.xhtml#a6d1650c15a05a1282eda713a9335d348">TypeIdSequenceContainer</a>;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno"><a class="line" href="a00412.xhtml#ae2b7ea899f009342514cf6501751372b">  467</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;InstanceId&gt;</a> <a class="code" href="a00412.xhtml#ae2b7ea899f009342514cf6501751372b">InstanceIdSequenceContainer</a>;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="a00412.xhtml#a78fad24e3bb01d965d4e0045480c3983">  470</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;EntityId&gt;</a> <a class="code" href="a00412.xhtml#a78fad24e3bb01d965d4e0045480c3983">EntityIdSequenceContainer</a>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="a00412.xhtml#ab0b6eea1a068c99a61c785628aaa1b4c">  473</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;ChannelId&gt;</a> <a class="code" href="a00412.xhtml#ab0b6eea1a068c99a61c785628aaa1b4c">ChannelIdSequenceContainer</a>;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="a00412.xhtml#a24f555aa28c0df1f66d85343dc0cdf89">  476</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;HandlerId&gt;</a> <a class="code" href="a00412.xhtml#a24f555aa28c0df1f66d85343dc0cdf89">HandlerIdSequenceContainer</a>;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno"><a class="line" href="a00412.xhtml#a8ff0c76a9375b693e5773f7fba9a405b">  479</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Binary&gt;</a> <a class="code" href="a00412.xhtml#a8ff0c76a9375b693e5773f7fba9a405b">BinarySequenceContainer</a>;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno"><a class="line" href="a00412.xhtml#a5a7111f037d6248393276be716ff85e0">  482</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a01313.xhtml">GenericObjectSequenceContainer&lt;Object&gt;</a> <a class="code" href="a00412.xhtml#a5a7111f037d6248393276be716ff85e0">ObjectSequenceContainer</a>;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <span class="comment">// SI-types (32-bits)</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keyword">namespace </span>Si32</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    {</div><div class="line"><a name="l00492"></a><span class="lineno"><a class="line" href="a00413.xhtml#aa6e79cebd530f0022718ce46599ffe02">  492</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Ampere&gt;</a> <a class="code" href="a00414.xhtml#a1f50bccf1113ac3fba450b6f47de9160">AmpereSequenceContainer</a>;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno"><a class="line" href="a00413.xhtml#a12641b003145724f927a6210f93579ba">  495</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;CubicMeter&gt;</a> <a class="code" href="a00414.xhtml#a9e1dc6432135641ef3d7718deed6db7a">CubicMeterSequenceContainer</a>;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="a00413.xhtml#a394ddc15a77e23c1c458726db1f88749">  498</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Hertz&gt;</a> <a class="code" href="a00414.xhtml#a015121812712823846ec82405b8a0983">HertzSequenceContainer</a>;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno"><a class="line" href="a00413.xhtml#a255d48caf619a9190b0083495a40270a">  501</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Joule&gt;</a> <a class="code" href="a00414.xhtml#a63d820d8a60c185bb93079bad668867e">JouleSequenceContainer</a>;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno"><a class="line" href="a00413.xhtml#a0c66697885c727823e70060badc7b425">  504</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Kelvin&gt;</a> <a class="code" href="a00414.xhtml#aed3b31ba61bce7920583fe6d5191d9f8">KelvinSequenceContainer</a>;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno"><a class="line" href="a00413.xhtml#ad74415205a576a1489cd6b93ab012f1d">  507</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Kilogram&gt;</a> <a class="code" href="a00414.xhtml#af6a34f3008fc6900b32ddbe447dfca69">KilogramSequenceContainer</a>;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno"><a class="line" href="a00413.xhtml#accc7c21eede69edb071bfc9dffd0dff6">  510</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Meter&gt;</a> <a class="code" href="a00414.xhtml#a182b0976cecefdbd412d5ded98b2a0ad">MeterSequenceContainer</a>;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="a00413.xhtml#a3d987c3850aadc0ce3bde96492000387">  513</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;MeterPerSecond&gt;</a> <a class="code" href="a00414.xhtml#a64fa51e30868a576479e044bcc4b33e9">MeterPerSecondSequenceContainer</a>;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno"><a class="line" href="a00413.xhtml#a29dc1359b32110930be45449b798fd08">  516</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;MeterPerSecondSquared&gt;</a> <a class="code" href="a00414.xhtml#a5b993965ae102a8b21a47d3a26eca3e3">MeterPerSecondSquaredSequenceContainer</a>;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="a00413.xhtml#ad16a15e64609ad3f5d3eedfd66cd6601">  519</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Newton&gt;</a> <a class="code" href="a00414.xhtml#a1d24d5e1a093bce624cd5dcf78df9d87">NewtonSequenceContainer</a>;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno"><a class="line" href="a00413.xhtml#a2b00a6117f59dd232e1a875b21afb1bd">  522</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Pascal&gt;</a> <a class="code" href="a00414.xhtml#ab3cc91351de85fbbbc05163d1e8fd5ab">PascalSequenceContainer</a>;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="a00413.xhtml#aa5c0f735c4b59080fde2ea854ed16970">  525</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Radian&gt;</a> <a class="code" href="a00414.xhtml#a3eececd33e73ffe46220e2eed7371dea">RadianSequenceContainer</a>;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno"><a class="line" href="a00413.xhtml#a40bc4aecd8d7c88c127121cb3d837855">  528</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;RadianPerSecond&gt;</a> <a class="code" href="a00414.xhtml#a47c971883d40e0f37777b86eae9d844f">RadianPerSecondSequenceContainer</a>;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno"><a class="line" href="a00413.xhtml#acc1addba5eb2b671bc1bf22b7b01b48c">  531</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;RadianPerSecondSquared&gt;</a> <a class="code" href="a00414.xhtml#abcf36a43b98b3a2267d663170d81cee8">RadianPerSecondSquaredSequenceContainer</a>;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno"><a class="line" href="a00413.xhtml#afb19ed6b1b02beaad411a84f37a3090b">  534</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Second&gt;</a> <a class="code" href="a00414.xhtml#a5a85a40cb798a11b4bb43967deea2023">SecondSequenceContainer</a>;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno"><a class="line" href="a00413.xhtml#a1b4d474505145bac109c3a6759850929">  537</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;SquareMeter&gt;</a> <a class="code" href="a00414.xhtml#a4575cc7dec002ae968b5ccd52afb221f">SquareMeterSequenceContainer</a>;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00540"></a><span class="lineno"><a class="line" href="a00413.xhtml#ad04d315ba35a4951f948be394690ff10">  540</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Steradian&gt;</a> <a class="code" href="a00414.xhtml#a64492a7f33efb401063fc1fde8d7222f">SteradianSequenceContainer</a>;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="a00413.xhtml#af8cb938eb72fbd0f7e478bc24dee9c47">  543</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Volt&gt;</a> <a class="code" href="a00414.xhtml#ae11d922f1e90d5be712b4e9d148b0610">VoltSequenceContainer</a>;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="a00413.xhtml#ad31cf2ca1c44cd02fa7535ef54830db0">  546</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Watt&gt;</a> <a class="code" href="a00414.xhtml#a0f7b77cb4c1f3da5f47aad9f9a81d105">WattSequenceContainer</a>;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    }</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="comment">// SI-types (64-bits)</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="comment">//--------------------------------------------------</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keyword">namespace </span>Si64</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    {</div><div class="line"><a name="l00555"></a><span class="lineno"><a class="line" href="a00414.xhtml#a1f50bccf1113ac3fba450b6f47de9160">  555</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Ampere&gt;</a> <a class="code" href="a00414.xhtml#a1f50bccf1113ac3fba450b6f47de9160">AmpereSequenceContainer</a>;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno"><a class="line" href="a00414.xhtml#a9e1dc6432135641ef3d7718deed6db7a">  558</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;CubicMeter&gt;</a> <a class="code" href="a00414.xhtml#a9e1dc6432135641ef3d7718deed6db7a">CubicMeterSequenceContainer</a>;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00561"></a><span class="lineno"><a class="line" href="a00414.xhtml#a015121812712823846ec82405b8a0983">  561</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Hertz&gt;</a> <a class="code" href="a00414.xhtml#a015121812712823846ec82405b8a0983">HertzSequenceContainer</a>;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno"><a class="line" href="a00414.xhtml#a63d820d8a60c185bb93079bad668867e">  564</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Joule&gt;</a> <a class="code" href="a00414.xhtml#a63d820d8a60c185bb93079bad668867e">JouleSequenceContainer</a>;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno"><a class="line" href="a00414.xhtml#aed3b31ba61bce7920583fe6d5191d9f8">  567</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Kelvin&gt;</a> <a class="code" href="a00414.xhtml#aed3b31ba61bce7920583fe6d5191d9f8">KelvinSequenceContainer</a>;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno"><a class="line" href="a00414.xhtml#af6a34f3008fc6900b32ddbe447dfca69">  570</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Kilogram&gt;</a> <a class="code" href="a00414.xhtml#af6a34f3008fc6900b32ddbe447dfca69">KilogramSequenceContainer</a>;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00573"></a><span class="lineno"><a class="line" href="a00414.xhtml#a182b0976cecefdbd412d5ded98b2a0ad">  573</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Meter&gt;</a> <a class="code" href="a00414.xhtml#a182b0976cecefdbd412d5ded98b2a0ad">MeterSequenceContainer</a>;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno"><a class="line" href="a00414.xhtml#a64fa51e30868a576479e044bcc4b33e9">  576</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;MeterPerSecond&gt;</a> <a class="code" href="a00414.xhtml#a64fa51e30868a576479e044bcc4b33e9">MeterPerSecondSequenceContainer</a>;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno"><a class="line" href="a00414.xhtml#a5b993965ae102a8b21a47d3a26eca3e3">  579</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;MeterPerSecondSquared&gt;</a> <a class="code" href="a00414.xhtml#a5b993965ae102a8b21a47d3a26eca3e3">MeterPerSecondSquaredSequenceContainer</a>;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno"><a class="line" href="a00414.xhtml#a1d24d5e1a093bce624cd5dcf78df9d87">  582</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Newton&gt;</a> <a class="code" href="a00414.xhtml#a1d24d5e1a093bce624cd5dcf78df9d87">NewtonSequenceContainer</a>;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno"><a class="line" href="a00414.xhtml#ab3cc91351de85fbbbc05163d1e8fd5ab">  585</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Pascal&gt;</a> <a class="code" href="a00414.xhtml#ab3cc91351de85fbbbc05163d1e8fd5ab">PascalSequenceContainer</a>;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno"><a class="line" href="a00414.xhtml#a3eececd33e73ffe46220e2eed7371dea">  588</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Radian&gt;</a> <a class="code" href="a00414.xhtml#a3eececd33e73ffe46220e2eed7371dea">RadianSequenceContainer</a>;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno"><a class="line" href="a00414.xhtml#a47c971883d40e0f37777b86eae9d844f">  591</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;RadianPerSecond&gt;</a> <a class="code" href="a00414.xhtml#a47c971883d40e0f37777b86eae9d844f">RadianPerSecondSequenceContainer</a>;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00594"></a><span class="lineno"><a class="line" href="a00414.xhtml#abcf36a43b98b3a2267d663170d81cee8">  594</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;RadianPerSecondSquared&gt;</a> <a class="code" href="a00414.xhtml#abcf36a43b98b3a2267d663170d81cee8">RadianPerSecondSquaredSequenceContainer</a>;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno"><a class="line" href="a00414.xhtml#a5a85a40cb798a11b4bb43967deea2023">  597</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Second&gt;</a> <a class="code" href="a00414.xhtml#a5a85a40cb798a11b4bb43967deea2023">SecondSequenceContainer</a>;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno"><a class="line" href="a00414.xhtml#a4575cc7dec002ae968b5ccd52afb221f">  600</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;SquareMeter&gt;</a> <a class="code" href="a00414.xhtml#a4575cc7dec002ae968b5ccd52afb221f">SquareMeterSequenceContainer</a>;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno"><a class="line" href="a00414.xhtml#a64492a7f33efb401063fc1fde8d7222f">  603</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Steradian&gt;</a> <a class="code" href="a00414.xhtml#a64492a7f33efb401063fc1fde8d7222f">SteradianSequenceContainer</a>;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno"><a class="line" href="a00414.xhtml#ae11d922f1e90d5be712b4e9d148b0610">  606</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Volt&gt;</a> <a class="code" href="a00414.xhtml#ae11d922f1e90d5be712b4e9d148b0610">VoltSequenceContainer</a>;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno"><a class="line" href="a00414.xhtml#a0f7b77cb4c1f3da5f47aad9f9a81d105">  609</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01305.xhtml">SequenceContainer&lt;Watt&gt;</a> <a class="code" href="a00414.xhtml#a0f7b77cb4c1f3da5f47aad9f9a81d105">WattSequenceContainer</a>;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    }</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;}</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;}</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;}</div><div class="ttc" id="a00412_xhtml_a78fad24e3bb01d965d4e0045480c3983"><div class="ttname"><a href="a00412.xhtml#a78fad24e3bb01d965d4e0045480c3983">Safir::Dob::Typesystem::EntityIdSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; EntityId &gt; EntityIdSequenceContainer</div><div class="ttdoc">A container containing EntityId values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:470</div></div>
<div class="ttc" id="a00412_xhtml_a932ab3f87e5409a8a3e57311e71a45d1"><div class="ttname"><a href="a00412.xhtml#a932ab3f87e5409a8a3e57311e71a45d1">Safir::Dob::Typesystem::Int32SequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Int32 &gt; Int32SequenceContainer</div><div class="ttdoc">A container containing 32 bit integer values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:452</div></div>
<div class="ttc" id="a00412_xhtml_a836bdb0a34c1efc1796ec4a7be0f875a"><div class="ttname"><a href="a00412.xhtml#a836bdb0a34c1efc1796ec4a7be0f875a">Safir::Dob::Typesystem::StringSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; std::wstring &gt; StringSequenceContainer</div><div class="ttdoc">A container containing string values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:446</div></div>
<div class="ttc" id="a00414_xhtml_a015121812712823846ec82405b8a0983"><div class="ttname"><a href="a00414.xhtml#a015121812712823846ec82405b8a0983">Safir::Dob::Typesystem::Si64::HertzSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Hertz &gt; HertzSequenceContainer</div><div class="ttdoc">A container containing 64 bit Hertz values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:561</div></div>
<div class="ttc" id="a00412_xhtml_a8ff0c76a9375b693e5773f7fba9a405b"><div class="ttname"><a href="a00412.xhtml#a8ff0c76a9375b693e5773f7fba9a405b">Safir::Dob::Typesystem::BinarySequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Binary &gt; BinarySequenceContainer</div><div class="ttdoc">A container containing Binary values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:479</div></div>
<div class="ttc" id="a00412_xhtml_a24f555aa28c0df1f66d85343dc0cdf89"><div class="ttname"><a href="a00412.xhtml#a24f555aa28c0df1f66d85343dc0cdf89">Safir::Dob::Typesystem::HandlerIdSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; HandlerId &gt; HandlerIdSequenceContainer</div><div class="ttdoc">A container containing HandlerId values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:476</div></div>
<div class="ttc" id="a01305_xhtml_a5d0ead7930988b48814c0150452ce65b"><div class="ttname"><a href="a01305.xhtml#a5d0ead7930988b48814c0150452ce65b">Safir::Dob::Typesystem::SequenceContainer::IsChanged</a></div><div class="ttdeci">virtual bool IsChanged() const</div><div class="ttdoc">Is the change flag set on the container? </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:248</div></div>
<div class="ttc" id="a00412_xhtml_a806d6e3628833224de991ab9ae1d0678"><div class="ttname"><a href="a00412.xhtml#a806d6e3628833224de991ab9ae1d0678">Safir::Dob::Typesystem::Float64SequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Float64 &gt; Float64SequenceContainer</div><div class="ttdoc">A container containing 64 bit floating point values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:461</div></div>
<div class="ttc" id="a00414_xhtml_aed3b31ba61bce7920583fe6d5191d9f8"><div class="ttname"><a href="a00414.xhtml#aed3b31ba61bce7920583fe6d5191d9f8">Safir::Dob::Typesystem::Si64::KelvinSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Kelvin &gt; KelvinSequenceContainer</div><div class="ttdoc">A container containing 64 bit Kelvin values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:567</div></div>
<div class="ttc" id="a00116_xhtml_aa50218d805518247edfff3d9328be684"><div class="ttname"><a href="a00116.xhtml#aa50218d805518247edfff3d9328be684">__WFILE__</a></div><div class="ttdeci">#define __WFILE__</div><div class="ttdef"><b>Definition:</b> Exceptions.h:31</div></div>
<div class="ttc" id="a00412_xhtml_a5a7111f037d6248393276be716ff85e0"><div class="ttname"><a href="a00412.xhtml#a5a7111f037d6248393276be716ff85e0">Safir::Dob::Typesystem::ObjectSequenceContainer</a></div><div class="ttdeci">GenericObjectSequenceContainer&lt; Object &gt; ObjectSequenceContainer</div><div class="ttdoc">A container containing Object values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:482</div></div>
<div class="ttc" id="a00414_xhtml_a5b993965ae102a8b21a47d3a26eca3e3"><div class="ttname"><a href="a00414.xhtml#a5b993965ae102a8b21a47d3a26eca3e3">Safir::Dob::Typesystem::Si64::MeterPerSecondSquaredSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; MeterPerSecondSquared &gt; MeterPerSecondSquaredSequenceContainer</div><div class="ttdoc">A container containing 64 bit MeterPerSecondSquared values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:579</div></div>
<div class="ttc" id="a00412_xhtml_ab0a4c06b9fdb38ce5c421b07a1584856"><div class="ttname"><a href="a00412.xhtml#ab0a4c06b9fdb38ce5c421b07a1584856">Safir::Dob::Typesystem::BooleanSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; bool &gt; BooleanSequenceContainer</div><div class="ttdoc">A container containing boolean values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:449</div></div>
<div class="ttc" id="a01313_xhtml_a547712b305c98207d9e2b60cf68d934e"><div class="ttname"><a href="a01313.xhtml#a547712b305c98207d9e2b60cf68d934e">Safir::Dob::Typesystem::GenericObjectSequenceContainer::IsChangedHere</a></div><div class="ttdeci">bool IsChangedHere() const</div><div class="ttdoc">Is the change flag in the container set? </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:366</div></div>
<div class="ttc" id="a00412_xhtml_ab0b6eea1a068c99a61c785628aaa1b4c"><div class="ttname"><a href="a00412.xhtml#ab0b6eea1a068c99a61c785628aaa1b4c">Safir::Dob::Typesystem::ChannelIdSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; ChannelId &gt; ChannelIdSequenceContainer</div><div class="ttdoc">A container containing ChannelId values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:473</div></div>
<div class="ttc" id="a00110_xhtml"><div class="ttname"><a href="a00110.xhtml">EntityId.h</a></div></div>
<div class="ttc" id="a00173_xhtml"><div class="ttname"><a href="a00173.xhtml">Utilities.h</a></div></div>
<div class="ttc" id="a01293_xhtml_ad55b46d83630391aa0133db42b423e04"><div class="ttname"><a href="a01293.xhtml#ad55b46d83630391aa0133db42b423e04">Safir::Dob::Typesystem::SequenceContainerBase::at</a></div><div class="ttdeci">const ContainedType &amp; at(size_t index) const</div><div class="ttdoc">operator [] - Get const reference to the value with specified index. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:140</div></div>
<div class="ttc" id="a01165_xhtml_a4257d6efb8b17e914896bf4ee9b1d7b8"><div class="ttname"><a href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a></div><div class="ttdeci">bool m_bIsChanged</div><div class="ttdoc">The variable containing the change flag. </div><div class="ttdef"><b>Definition:</b> ContainerBase.h:124</div></div>
<div class="ttc" id="a00414_xhtml_af6a34f3008fc6900b32ddbe447dfca69"><div class="ttname"><a href="a00414.xhtml#af6a34f3008fc6900b32ddbe447dfca69">Safir::Dob::Typesystem::Si64::KilogramSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Kilogram &gt; KilogramSequenceContainer</div><div class="ttdoc">A container containing 64 bit Kilogram values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:570</div></div>
<div class="ttc" id="a01313_xhtml_a7e75da9e1a7b4f6c474088dac1ae460f"><div class="ttname"><a href="a01313.xhtml#a7e75da9e1a7b4f6c474088dac1ae460f">Safir::Dob::Typesystem::GenericObjectSequenceContainer::SetChangedHere</a></div><div class="ttdeci">void SetChangedHere(const bool changed)</div><div class="ttdoc">Set the change flag in the container. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:389</div></div>
<div class="ttc" id="a01313_xhtml_aac99989ebbfd61d67672d7929a53fc0a"><div class="ttname"><a href="a01313.xhtml#aac99989ebbfd61d67672d7929a53fc0a">Safir::Dob::Typesystem::GenericObjectSequenceContainer::IsChanged</a></div><div class="ttdeci">virtual bool IsChanged() const</div><div class="ttdoc">Is the change flag set on the container? </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:341</div></div>
<div class="ttc" id="a00414_xhtml_ab3cc91351de85fbbbc05163d1e8fd5ab"><div class="ttname"><a href="a00414.xhtml#ab3cc91351de85fbbbc05163d1e8fd5ab">Safir::Dob::Typesystem::Si64::PascalSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Pascal &gt; PascalSequenceContainer</div><div class="ttdoc">A container containing 64 bit Pascal values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:585</div></div>
<div class="ttc" id="a01305_xhtml_a41eebbf76cbb7312c22c36f6761b542a"><div class="ttname"><a href="a01305.xhtml#a41eebbf76cbb7312c22c36f6761b542a">Safir::Dob::Typesystem::SequenceContainer::SetChanged</a></div><div class="ttdeci">virtual void SetChanged(const bool changed)</div><div class="ttdoc">Set the containers change flag. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:251</div></div>
<div class="ttc" id="a01313_xhtml_aada1bf660b0a18b3df87c9a41c49be2b"><div class="ttname"><a href="a01313.xhtml#aada1bf660b0a18b3df87c9a41c49be2b">Safir::Dob::Typesystem::GenericObjectSequenceContainer::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">size - Get the size of the sequence, i.e number of contained values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:394</div></div>
<div class="ttc" id="a00412_xhtml_ad6e1376b0f912da9f8753cf590f26202"><div class="ttname"><a href="a00412.xhtml#ad6e1376b0f912da9f8753cf590f26202">Safir::Dob::Typesystem::ObjectConstPtr</a></div><div class="ttdeci">boost::shared_ptr&lt; const Object &gt; ObjectConstPtr</div><div class="ttdoc">A smart pointer to a const Object. </div><div class="ttdef"><b>Definition:</b> Object.h:47</div></div>
<div class="ttc" id="a00421_xhtml_adffc48c374b1a7e3fae14f61a209f64d"><div class="ttname"><a href="a00421.xhtml#adffc48c374b1a7e3fae14f61a209f64d">Safir::Dob::Typesystem::Utilities::MergeChanges</a></div><div class="ttdeci">DOTS_CPP_API void MergeChanges(ObjectPtr into, const ObjectConstPtr &amp;from)</div><div class="ttdoc">Merge the changed members (recursively) from one object into another. </div></div>
<div class="ttc" id="a01293_xhtml_a04b8d2dddd3a93ecfc3cc3b82abcf0d6"><div class="ttname"><a href="a01293.xhtml#a04b8d2dddd3a93ecfc3cc3b82abcf0d6">Safir::Dob::Typesystem::SequenceContainerBase::EraseAt</a></div><div class="ttdeci">void EraseAt(size_t index)</div><div class="ttdoc">EraseAt - Erase a value at specified index. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:192</div></div>
<div class="ttc" id="a01293_xhtml_a3e14e329eab2457ac5cf9d2b879f3eb1"><div class="ttname"><a href="a01293.xhtml#a3e14e329eab2457ac5cf9d2b879f3eb1">Safir::Dob::Typesystem::SequenceContainerBase::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdoc">size - Get the size of the sequence, i.e number of contained values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:81</div></div>
<div class="ttc" id="a01293_xhtml_a22e4315f6c4a0fccbdb9d3b20b3e1b94"><div class="ttname"><a href="a01293.xhtml#a22e4315f6c4a0fccbdb9d3b20b3e1b94">Safir::Dob::Typesystem::SequenceContainerBase::back</a></div><div class="ttdeci">const ContainedType &amp; back() const</div><div class="ttdoc">back - Get a const reference to the last value in the sequence. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:99</div></div>
<div class="ttc" id="a00412_xhtml_ae2b7ea899f009342514cf6501751372b"><div class="ttname"><a href="a00412.xhtml#ae2b7ea899f009342514cf6501751372b">Safir::Dob::Typesystem::InstanceIdSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; InstanceId &gt; InstanceIdSequenceContainer</div><div class="ttdoc">A container containing InstanceId values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:467</div></div>
<div class="ttc" id="a01293_xhtml_a19f80c634b7079164fd29e527eec70f4"><div class="ttname"><a href="a01293.xhtml#a19f80c634b7079164fd29e527eec70f4">Safir::Dob::Typesystem::SequenceContainerBase::const_iterator</a></div><div class="ttdeci">StorageType::const_iterator const_iterator</div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:56</div></div>
<div class="ttc" id="a01309_xhtml"><div class="ttname"><a href="a01309.xhtml">Safir::Dob::Typesystem::GenericObjectSequenceContainerBase</a></div><div class="ttdoc">Base class for all object sequences. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:256</div></div>
<div class="ttc" id="a00098_xhtml"><div class="ttname"><a href="a00098.xhtml">ChannelId.h</a></div></div>
<div class="ttc" id="a00414_xhtml_a64492a7f33efb401063fc1fde8d7222f"><div class="ttname"><a href="a00414.xhtml#a64492a7f33efb401063fc1fde8d7222f">Safir::Dob::Typesystem::Si64::SteradianSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Steradian &gt; SteradianSequenceContainer</div><div class="ttdoc">A container containing 64 bit Steradian values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:603</div></div>
<div class="ttc" id="a01293_xhtml_a6bd32893a1036fd643e5e49c96bc738b"><div class="ttname"><a href="a01293.xhtml#a6bd32893a1036fd643e5e49c96bc738b">Safir::Dob::Typesystem::SequenceContainerBase::Copy</a></div><div class="ttdeci">virtual void Copy(const ContainerBase &amp;that)</div><div class="ttdoc">Copy - Copy all the members from &quot;that&quot; into &quot;this&quot;. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:203</div></div>
<div class="ttc" id="a01293_xhtml_a1427c59c055d2edee58adb3a548fdb56"><div class="ttname"><a href="a01293.xhtml#a1427c59c055d2edee58adb3a548fdb56">Safir::Dob::Typesystem::SequenceContainerBase::push_back</a></div><div class="ttdeci">void push_back(const ContainedType &amp;val)</div><div class="ttdoc">push_back - Insert a new value last in the sequence. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:150</div></div>
<div class="ttc" id="a00414_xhtml_a0f7b77cb4c1f3da5f47aad9f9a81d105"><div class="ttname"><a href="a00414.xhtml#a0f7b77cb4c1f3da5f47aad9f9a81d105">Safir::Dob::Typesystem::Si64::WattSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Watt &gt; WattSequenceContainer</div><div class="ttdoc">A container containing 64 bit Watt values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:609</div></div>
<div class="ttc" id="a00414_xhtml_a63d820d8a60c185bb93079bad668867e"><div class="ttname"><a href="a00414.xhtml#a63d820d8a60c185bb93079bad668867e">Safir::Dob::Typesystem::Si64::JouleSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Joule &gt; JouleSequenceContainer</div><div class="ttdoc">A container containing 64 bit Joule values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:564</div></div>
<div class="ttc" id="a01293_xhtml_a132f1fe1c6cad965e5b5c3005176e619"><div class="ttname"><a href="a01293.xhtml#a132f1fe1c6cad965e5b5c3005176e619">Safir::Dob::Typesystem::SequenceContainerBase::SequenceContainerBase</a></div><div class="ttdeci">SequenceContainerBase()</div><div class="ttdoc">Default Constructor. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:63</div></div>
<div class="ttc" id="a00414_xhtml_a1d24d5e1a093bce624cd5dcf78df9d87"><div class="ttname"><a href="a00414.xhtml#a1d24d5e1a093bce624cd5dcf78df9d87">Safir::Dob::Typesystem::Si64::NewtonSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Newton &gt; NewtonSequenceContainer</div><div class="ttdoc">A container containing 64 bit Newton values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:582</div></div>
<div class="ttc" id="a01293_xhtml_a5a76200b717ceaa2851a8108846bcacf"><div class="ttname"><a href="a01293.xhtml#a5a76200b717ceaa2851a8108846bcacf">Safir::Dob::Typesystem::SequenceContainerBase::SetNull</a></div><div class="ttdeci">virtual void SetNull()</div><div class="ttdoc">Set the container to null. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:71</div></div>
<div class="ttc" id="a00414_xhtml_a47c971883d40e0f37777b86eae9d844f"><div class="ttname"><a href="a00414.xhtml#a47c971883d40e0f37777b86eae9d844f">Safir::Dob::Typesystem::Si64::RadianPerSecondSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; RadianPerSecond &gt; RadianPerSecondSequenceContainer</div><div class="ttdoc">A container containing 64 bit RadianPerSecond values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:591</div></div>
<div class="ttc" id="a01293_xhtml_ac937c2cb1a7d71b3ee30c26816c5a340"><div class="ttname"><a href="a01293.xhtml#ac937c2cb1a7d71b3ee30c26816c5a340">Safir::Dob::Typesystem::SequenceContainerBase::begin</a></div><div class="ttdeci">const_iterator begin() const</div><div class="ttdoc">begin - Get const_iterator pointing to the first element in the sequence. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:105</div></div>
<div class="ttc" id="a00414_xhtml_a4575cc7dec002ae968b5ccd52afb221f"><div class="ttname"><a href="a00414.xhtml#a4575cc7dec002ae968b5ccd52afb221f">Safir::Dob::Typesystem::Si64::SquareMeterSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; SquareMeter &gt; SquareMeterSequenceContainer</div><div class="ttdoc">A container containing 64 bit SquareMeter values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:600</div></div>
<div class="ttc" id="a00101_xhtml"><div class="ttname"><a href="a00101.xhtml">ContainerBase.h</a></div></div>
<div class="ttc" id="a00131_xhtml"><div class="ttname"><a href="a00131.xhtml">Object.h</a></div></div>
<div class="ttc" id="a01293_xhtml_ae4f7f2ab529c3ad54fae3415aff3f984"><div class="ttname"><a href="a01293.xhtml#ae4f7f2ab529c3ad54fae3415aff3f984">Safir::Dob::Typesystem::SequenceContainerBase::GetVal</a></div><div class="ttdeci">const ContainedType &amp; GetVal(size_t index) const</div><div class="ttdoc">GetVal - Get const reference to the value with specified index. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:172</div></div>
<div class="ttc" id="a00412_xhtml_a6d1650c15a05a1282eda713a9335d348"><div class="ttname"><a href="a00412.xhtml#a6d1650c15a05a1282eda713a9335d348">Safir::Dob::Typesystem::TypeIdSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; TypeId &gt; TypeIdSequenceContainer</div><div class="ttdoc">A container containing TypeId values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:464</div></div>
<div class="ttc" id="a00412_xhtml_aaf36f8320f24d9f6f4ef920a1f620ea9"><div class="ttname"><a href="a00412.xhtml#aaf36f8320f24d9f6f4ef920a1f620ea9">Safir::Dob::Typesystem::Int64SequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Int64 &gt; Int64SequenceContainer</div><div class="ttdoc">A container containing 64 bit integer values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:455</div></div>
<div class="ttc" id="a01293_xhtml_ad8daff190b39c542100a8daee7661532"><div class="ttname"><a href="a01293.xhtml#ad8daff190b39c542100a8daee7661532">Safir::Dob::Typesystem::SequenceContainerBase::InsertAt</a></div><div class="ttdeci">void InsertAt(size_t index, const ContainedType &amp;value)</div><div class="ttdoc">InsertAt - Insert a new value at specified index. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:182</div></div>
<div class="ttc" id="a01293_xhtml_a0fe9256e1f9ac0cf78e2b4a515d65bcd"><div class="ttname"><a href="a01293.xhtml#a0fe9256e1f9ac0cf78e2b4a515d65bcd">Safir::Dob::Typesystem::SequenceContainerBase::SetVal</a></div><div class="ttdeci">void SetVal(size_t index, const ContainedType &amp;val)</div><div class="ttdoc">SetVal - Update a specific value. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:161</div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01237_xhtml"><div class="ttname"><a href="a01237.xhtml">Safir::Dob::Typesystem::SoftwareViolationException</a></div><div class="ttdoc">Meant to be used when something goes very wrong. </div><div class="ttdef"><b>Definition:</b> Exceptions.h:361</div></div>
<div class="ttc" id="a01305_xhtml"><div class="ttname"><a href="a01305.xhtml">Safir::Dob::Typesystem::SequenceContainer</a></div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:242</div></div>
<div class="ttc" id="a01293_xhtml_a41c3e27fbfb99c72686fa2a1070c60a1"><div class="ttname"><a href="a01293.xhtml#a41c3e27fbfb99c72686fa2a1070c60a1">Safir::Dob::Typesystem::SequenceContainerBase::StorageType</a></div><div class="ttdeci">boost::container::vector&lt; T &gt; StorageType</div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:55</div></div>
<div class="ttc" id="a01313_xhtml_a0494e8fa6be10dc61475c8c724f67a48"><div class="ttname"><a href="a01313.xhtml#a0494e8fa6be10dc61475c8c724f67a48">Safir::Dob::Typesystem::GenericObjectSequenceContainer::GetObj</a></div><div class="ttdeci">ObjectConstPtr GetObj(const size_t index) const</div><div class="ttdoc">Get a const generic poionter to the object at the specified index. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:397</div></div>
<div class="ttc" id="a00414_xhtml_a64fa51e30868a576479e044bcc4b33e9"><div class="ttname"><a href="a00414.xhtml#a64fa51e30868a576479e044bcc4b33e9">Safir::Dob::Typesystem::Si64::MeterPerSecondSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; MeterPerSecond &gt; MeterPerSecondSequenceContainer</div><div class="ttdoc">A container containing 64 bit MeterPerSecond values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:576</div></div>
<div class="ttc" id="a01165_xhtml"><div class="ttname"><a href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a></div><div class="ttdoc">Base class for all Containers. </div><div class="ttdef"><b>Definition:</b> ContainerBase.h:43</div></div>
<div class="ttc" id="a00414_xhtml_a9e1dc6432135641ef3d7718deed6db7a"><div class="ttname"><a href="a00414.xhtml#a9e1dc6432135641ef3d7718deed6db7a">Safir::Dob::Typesystem::Si64::CubicMeterSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; CubicMeter &gt; CubicMeterSequenceContainer</div><div class="ttdoc">A container containing 64 bit CubicMeter values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:558</div></div>
<div class="ttc" id="a00414_xhtml_a182b0976cecefdbd412d5ded98b2a0ad"><div class="ttname"><a href="a00414.xhtml#a182b0976cecefdbd412d5ded98b2a0ad">Safir::Dob::Typesystem::Si64::MeterSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Meter &gt; MeterSequenceContainer</div><div class="ttdoc">A container containing 64 bit Meter values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:573</div></div>
<div class="ttc" id="a01313_xhtml"><div class="ttname"><a href="a01313.xhtml">Safir::Dob::Typesystem::GenericObjectSequenceContainer</a></div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:333</div></div>
<div class="ttc" id="a00414_xhtml_abcf36a43b98b3a2267d663170d81cee8"><div class="ttname"><a href="a00414.xhtml#abcf36a43b98b3a2267d663170d81cee8">Safir::Dob::Typesystem::Si64::RadianPerSecondSquaredSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; RadianPerSecondSquared &gt; RadianPerSecondSquaredSequenceContainer</div><div class="ttdoc">A container containing 64 bit RadianPerSecondSquared values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:594</div></div>
<div class="ttc" id="a01293_xhtml_a1f8897f6ad52a90078c78d514de847d4"><div class="ttname"><a href="a01293.xhtml#a1f8897f6ad52a90078c78d514de847d4">Safir::Dob::Typesystem::SequenceContainerBase::IsNull</a></div><div class="ttdeci">virtual bool IsNull() const</div><div class="ttdoc">Is the container set to null? </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:69</div></div>
<div class="ttc" id="a01293_xhtml_ad7d44abd2615e950079c040abae5122c"><div class="ttname"><a href="a01293.xhtml#ad7d44abd2615e950079c040abae5122c">Safir::Dob::Typesystem::SequenceContainerBase::operator[]</a></div><div class="ttdeci">const ContainedType &amp; operator[](size_t index) const</div><div class="ttdoc">operator [] - Get const reference to the value with specified index. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:129</div></div>
<div class="ttc" id="a00414_xhtml_a3eececd33e73ffe46220e2eed7371dea"><div class="ttname"><a href="a00414.xhtml#a3eececd33e73ffe46220e2eed7371dea">Safir::Dob::Typesystem::Si64::RadianSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Radian &gt; RadianSequenceContainer</div><div class="ttdoc">A container containing 64 bit Radian values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:588</div></div>
<div class="ttc" id="a01293_xhtml"><div class="ttname"><a href="a01293.xhtml">Safir::Dob::Typesystem::SequenceContainerBase</a></div><div class="ttdoc">Container class for sequences of values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:50</div></div>
<div class="ttc" id="a01293_xhtml_a34cfd4556c897ff2f0c79348fc227d0e"><div class="ttname"><a href="a01293.xhtml#a34cfd4556c897ff2f0c79348fc227d0e">Safir::Dob::Typesystem::SequenceContainerBase::front</a></div><div class="ttdeci">const ContainedType &amp; front() const</div><div class="ttdoc">front - Get a const reference to the first value in the sequence. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:93</div></div>
<div class="ttc" id="a01293_xhtml_a6f1eda56550f9768d4358aaad59c34e3"><div class="ttname"><a href="a01293.xhtml#a6f1eda56550f9768d4358aaad59c34e3">Safir::Dob::Typesystem::SequenceContainerBase::end</a></div><div class="ttdeci">const_iterator end() const</div><div class="ttdoc">end - Get const_iterator pointing past the last element in the sequence. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:111</div></div>
<div class="ttc" id="a00412_xhtml_afee3c9b15b8f69319a9b77b2759539ac"><div class="ttname"><a href="a00412.xhtml#afee3c9b15b8f69319a9b77b2759539ac">Safir::Dob::Typesystem::Float32SequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Float32 &gt; Float32SequenceContainer</div><div class="ttdoc">A container containing 32 bit floating point values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:458</div></div>
<div class="ttc" id="a01293_xhtml_ad0698774cd16add2252f675f00259592"><div class="ttname"><a href="a01293.xhtml#ad0698774cd16add2252f675f00259592">Safir::Dob::Typesystem::SequenceContainerBase::empty</a></div><div class="ttdeci">bool empty() const</div><div class="ttdoc">empty - Check if sequence is empty. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:87</div></div>
<div class="ttc" id="a01313_xhtml_a9ca2a786494b3eb563958b157e879921"><div class="ttname"><a href="a01313.xhtml#a9ca2a786494b3eb563958b157e879921">Safir::Dob::Typesystem::GenericObjectSequenceContainer::SetChanged</a></div><div class="ttdeci">virtual void SetChanged(const bool changed)</div><div class="ttdoc">Set the containers change flag. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:372</div></div>
<div class="ttc" id="a00414_xhtml_a1f50bccf1113ac3fba450b6f47de9160"><div class="ttname"><a href="a00414.xhtml#a1f50bccf1113ac3fba450b6f47de9160">Safir::Dob::Typesystem::Si64::AmpereSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Ampere &gt; AmpereSequenceContainer</div><div class="ttdoc">A container containing 64 bit Ampere values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:555</div></div>
<div class="ttc" id="a01293_xhtml_a523cd1742595488d911b29abf4b9464a"><div class="ttname"><a href="a01293.xhtml#a523cd1742595488d911b29abf4b9464a">Safir::Dob::Typesystem::SequenceContainerBase::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">clear - Clear the sequence, i.e remove all values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:117</div></div>
<div class="ttc" id="a00412_xhtml_ae11ede843efcf067a9327a9ef8b90b86"><div class="ttname"><a href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Safir::Dob::Typesystem::ObjectPtr</a></div><div class="ttdeci">boost::shared_ptr&lt; Object &gt; ObjectPtr</div><div class="ttdoc">A smart pointer to an Object. </div><div class="ttdef"><b>Definition:</b> Object.h:41</div></div>
<div class="ttc" id="a00414_xhtml_a5a85a40cb798a11b4bb43967deea2023"><div class="ttname"><a href="a00414.xhtml#a5a85a40cb798a11b4bb43967deea2023">Safir::Dob::Typesystem::Si64::SecondSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Second &gt; SecondSequenceContainer</div><div class="ttdoc">A container containing 64 bit Second values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:597</div></div>
<div class="ttc" id="a00119_xhtml"><div class="ttname"><a href="a00119.xhtml">HandlerId.h</a></div></div>
<div class="ttc" id="a00414_xhtml_ae11d922f1e90d5be712b4e9d148b0610"><div class="ttname"><a href="a00414.xhtml#ae11d922f1e90d5be712b4e9d148b0610">Safir::Dob::Typesystem::Si64::VoltSequenceContainer</a></div><div class="ttdeci">SequenceContainer&lt; Volt &gt; VoltSequenceContainer</div><div class="ttdoc">A container containing 64 bit Volt values. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:606</div></div>
<div class="ttc" id="a01293_xhtml_a8d64b57879fc004366ace85de5d80b42"><div class="ttname"><a href="a01293.xhtml#a8d64b57879fc004366ace85de5d80b42">Safir::Dob::Typesystem::SequenceContainerBase::ContainedType</a></div><div class="ttdeci">T ContainedType</div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:54</div></div>
<div class="ttc" id="a01313_xhtml_a1d87f0ac2473d4b19e64350c40a072e0"><div class="ttname"><a href="a01313.xhtml#a1d87f0ac2473d4b19e64350c40a072e0">Safir::Dob::Typesystem::GenericObjectSequenceContainer::GetObj</a></div><div class="ttdeci">ObjectPtr GetObj(const size_t index)</div><div class="ttdoc">Get a generic poionter to the object at the specified index. </div><div class="ttdef"><b>Definition:</b> SequenceContainer.h:396</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00149.xhtml">SequenceContainer.h</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:25 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
