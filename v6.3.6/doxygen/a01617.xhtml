<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::PersistenceParameters Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01617.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="a01614.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::PersistenceParameters Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class has no summary.  
 <a href="a01617.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00317_source.xhtml">/home/lars/safir/safir-sdk-core/src/safir_dou/gen/cpp/include/Safir/Dob/PersistenceParameters.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::PersistenceParameters:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01616.svg" width="235" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::PersistenceParameters:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01615.svg" width="235" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5fbf12d696648630cff32f3b4ea0e344"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a5fbf12d696648630cff32f3b4ea0e344">PersistenceParameters</a> ()</td></tr>
<tr class="separator:a5fbf12d696648630cff32f3b4ea0e344"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8c966d0ef55c531fe6606ce5173a3bb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Safir::Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#ab8c966d0ef55c531fe6606ce5173a3bb">Clone</a> () const</td></tr>
<tr class="memdesc:ab8c966d0ef55c531fe6606ce5173a3bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <a href="#ab8c966d0ef55c531fe6606ce5173a3bb">More...</a><br /></td></tr>
<tr class="separator:ab8c966d0ef55c531fe6606ce5173a3bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51df63ddb31f7adc8c1b1ca5f2af04fa"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a51df63ddb31f7adc8c1b1ca5f2af04fa">GetTypeId</a> () const</td></tr>
<tr class="memdesc:a51df63ddb31f7adc8c1b1ca5f2af04fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <a href="#a51df63ddb31f7adc8c1b1ca5f2af04fa">More...</a><br /></td></tr>
<tr class="separator:a51df63ddb31f7adc8c1b1ca5f2af04fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2198ec842eaf5895a586550bd0b3a088"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a2198ec842eaf5895a586550bd0b3a088">IsChanged</a> ()</td></tr>
<tr class="memdesc:a2198ec842eaf5895a586550bd0b3a088"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <a href="#a2198ec842eaf5895a586550bd0b3a088">More...</a><br /></td></tr>
<tr class="separator:a2198ec842eaf5895a586550bd0b3a088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0aa4d7d948647e75d09392a57bf4839"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#ac0aa4d7d948647e75d09392a57bf4839">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:ac0aa4d7d948647e75d09392a57bf4839"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <a href="#ac0aa4d7d948647e75d09392a57bf4839">More...</a><br /></td></tr>
<tr class="separator:ac0aa4d7d948647e75d09392a57bf4839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9f4b394c8d3133eecd87ea4f0f7354e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#af9f4b394c8d3133eecd87ea4f0f7354e">GetMember</a> (const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index)</td></tr>
<tr class="memdesc:af9f4b394c8d3133eecd87ea4f0f7354e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <a href="#af9f4b394c8d3133eecd87ea4f0f7354e">More...</a><br /></td></tr>
<tr class="separator:af9f4b394c8d3133eecd87ea4f0f7354e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7b3c6187a0775dcf2e8a54089a42b18"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#ae7b3c6187a0775dcf2e8a54089a42b18">GetMember</a> (const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) const</td></tr>
<tr class="memdesc:ae7b3c6187a0775dcf2e8a54089a42b18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <a href="#ae7b3c6187a0775dcf2e8a54089a42b18">More...</a><br /></td></tr>
<tr class="separator:ae7b3c6187a0775dcf2e8a54089a42b18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f8d46302ff47f69e51fa14c9f5ffc69"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a6f8d46302ff47f69e51fa14c9f5ffc69">WriteToBlob</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle) const</td></tr>
<tr class="memdesc:a6f8d46302ff47f69e51fa14c9f5ffc69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write the object to a blob.  <a href="#a6f8d46302ff47f69e51fa14c9f5ffc69">More...</a><br /></td></tr>
<tr class="separator:a6f8d46302ff47f69e51fa14c9f5ffc69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07b4fe0e88004920020ab53f079ddff7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a07b4fe0e88004920020ab53f079ddff7">PersistenceParameters</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a07b4fe0e88004920020ab53f079ddff7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01605"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01605')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01605.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:af7250c4748af0c0a3221477ba8dee709 inherit pub_methods_a01605"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#af7250c4748af0c0a3221477ba8dee709">Parametrization</a> ()</td></tr>
<tr class="separator:af7250c4748af0c0a3221477ba8dee709 inherit pub_methods_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f18e22641a96decee971706f037eee0 inherit pub_methods_a01605"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#a2f18e22641a96decee971706f037eee0">Parametrization</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a2f18e22641a96decee971706f037eee0 inherit pub_methods_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01265"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01265')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01265.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01265"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#afac534c32310137c943104c4d3e3f309">Object</a> ()</td></tr>
<tr class="memdesc:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="a01265.xhtml#afac534c32310137c943104c4d3e3f309">More...</a><br /></td></tr>
<tr class="separator:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01265"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#a9f27069548b4ec8968a8c394ac3bedc2">~Object</a> ()</td></tr>
<tr class="memdesc:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="a01265.xhtml#a9f27069548b4ec8968a8c394ac3bedc2">More...</a><br /></td></tr>
<tr class="separator:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01265"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#a7e6f36f0b33c414711aae5966b5d2d5b">Object</a> (<a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="memdesc:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an <a class="el" href="a01265.xhtml" title="The base class for all DOB objects. ">Object</a> from a blob.  <a href="a01265.xhtml#a7e6f36f0b33c414711aae5966b5d2d5b">More...</a><br /></td></tr>
<tr class="separator:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a62a5968e5974a6e93e85f1c18d44f847"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00410.xhtml#acb35286f6e442be9bd9c985b95262066">PersistenceParametersPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a62a5968e5974a6e93e85f1c18d44f847">Create</a> ()</td></tr>
<tr class="separator:a62a5968e5974a6e93e85f1c18d44f847"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fbcb9b789190d7efeeb7b67ebbc471a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a01609.xhtml#a85b6b4d7e03487ee51956956daf801ff">Safir::Dob::PersistenceBackend::Enumeration</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a7fbcb9b789190d7efeeb7b67ebbc471a">Backend</a> (const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> enumId=<a class="el" href="a01609.xhtml#a62dd61339649785b8cfc16ee29c60db0">Safir::Dob::PersistenceBackend::Checksum</a>)</td></tr>
<tr class="memdesc:a7fbcb9b789190d7efeeb7b67ebbc471a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Which backend should DOPE use (Currently 'None', 'File', and 'Odbc' are supported).  <a href="#a7fbcb9b789190d7efeeb7b67ebbc471a">More...</a><br /></td></tr>
<tr class="separator:a7fbcb9b789190d7efeeb7b67ebbc471a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a87b30fc748764f3cb66fef34ccfd72"><td class="memItemLeft" align="right" valign="top">static std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a5a87b30fc748764f3cb66fef34ccfd72">FileStoragePath</a> ()</td></tr>
<tr class="memdesc:a5a87b30fc748764f3cb66fef34ccfd72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Full path where the File storage backend stores its data.  <a href="#a5a87b30fc748764f3cb66fef34ccfd72">More...</a><br /></td></tr>
<tr class="separator:a5a87b30fc748764f3cb66fef34ccfd72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc65f2262bd7af6ed564a9f0df87f52a"><td class="memItemLeft" align="right" valign="top">static std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#abc65f2262bd7af6ed564a9f0df87f52a">OdbcStorageConnectString</a> ()</td></tr>
<tr class="memdesc:abc65f2262bd7af6ed564a9f0df87f52a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The string to use for connection to the physical storage.  <a href="#abc65f2262bd7af6ed564a9f0df87f52a">More...</a><br /></td></tr>
<tr class="separator:abc65f2262bd7af6ed564a9f0df87f52a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af704079b735be91f88de60b5a0d89710"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#af704079b735be91f88de60b5a0d89710">XmlDataColumnSize</a> ()</td></tr>
<tr class="memdesc:af704079b735be91f88de60b5a0d89710"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of bytes that can be written for each entry to the XmlData column in the database.  <a href="#af704079b735be91f88de60b5a0d89710">More...</a><br /></td></tr>
<tr class="separator:af704079b735be91f88de60b5a0d89710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24f8d7a31a1305db4016da0253030cae"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a24f8d7a31a1305db4016da0253030cae">TypeNameColumnSize</a> ()</td></tr>
<tr class="memdesc:a24f8d7a31a1305db4016da0253030cae"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of bytes that can be written for each entry to the TypeName column in the database.  <a href="#a24f8d7a31a1305db4016da0253030cae">More...</a><br /></td></tr>
<tr class="separator:a24f8d7a31a1305db4016da0253030cae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1057ba097a242cf996b9d68094cab5ae"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a1057ba097a242cf996b9d68094cab5ae">BinaryDataColumnSize</a> ()</td></tr>
<tr class="memdesc:a1057ba097a242cf996b9d68094cab5ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the BinaryData column in the database.  <a href="#a1057ba097a242cf996b9d68094cab5ae">More...</a><br /></td></tr>
<tr class="separator:a1057ba097a242cf996b9d68094cab5ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d0b57760b60f91162f5e8b80a5fd678"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a7d0b57760b60f91162f5e8b80a5fd678">BinarySmallDataColumnSize</a> ()</td></tr>
<tr class="memdesc:a7d0b57760b60f91162f5e8b80a5fd678"><td class="mdescLeft">&#160;</td><td class="mdescRight">The size of the BinarySmallData column in the database.  <a href="#a7d0b57760b60f91162f5e8b80a5fd678">More...</a><br /></td></tr>
<tr class="separator:a7d0b57760b60f91162f5e8b80a5fd678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ce1cccaeb69f6b47c2dd49a152a70c3"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a6ce1cccaeb69f6b47c2dd49a152a70c3">StandaloneMode</a> ()</td></tr>
<tr class="memdesc:a6ce1cccaeb69f6b47c2dd49a152a70c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">StandaloneMode means that each dope that is started is saving its own persistent data.  <a href="#a6ce1cccaeb69f6b47c2dd49a152a70c3">More...</a><br /></td></tr>
<tr class="separator:a6ce1cccaeb69f6b47c2dd49a152a70c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0cc382f374582d6361cf9625a67c78b"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#aa0cc382f374582d6361cf9625a67c78b">TestMode</a> ()</td></tr>
<tr class="memdesc:aa0cc382f374582d6361cf9625a67c78b"><td class="mdescLeft">&#160;</td><td class="mdescRight">TestMode allow initial injections without persistence started.  <a href="#aa0cc382f374582d6361cf9625a67c78b">More...</a><br /></td></tr>
<tr class="separator:aa0cc382f374582d6361cf9625a67c78b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01605"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01605')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01605.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:a8e818c8c5ddf9da4a3d2ec2503a9ca78 inherit pub_static_methods_a01605"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00410.xhtml#a6c03fc6d2ff529cc05b35a9a5492bb3b">ParametrizationPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#a8e818c8c5ddf9da4a3d2ec2503a9ca78">Create</a> ()</td></tr>
<tr class="separator:a8e818c8c5ddf9da4a3d2ec2503a9ca78 inherit pub_static_methods_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01265"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01265')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01265.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01265"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#acb1399abd50543020f6b1638a698e379">Create</a> ()</td></tr>
<tr class="memdesc:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="a01265.xhtml" title="The base class for all DOB objects. ">Object</a>.  <a href="a01265.xhtml#acb1399abd50543020f6b1638a698e379">More...</a><br /></td></tr>
<tr class="separator:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a235f59be8649dfbf29780b8b93cadc27"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01617.xhtml#a235f59be8649dfbf29780b8b93cadc27">ClassTypeId</a> = 8276373340234567943LL</td></tr>
<tr class="memdesc:a235f59be8649dfbf29780b8b93cadc27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01617.xhtml" title="This class has no summary. ">PersistenceParameters</a>.  <a href="#a235f59be8649dfbf29780b8b93cadc27">More...</a><br /></td></tr>
<tr class="separator:a235f59be8649dfbf29780b8b93cadc27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01605"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01605')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01605.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01605"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01605.xhtml#ac1cdacddcacae4423fe3d3925dfb116d">ClassTypeId</a> = 8075666004421608370LL</td></tr>
<tr class="memdesc:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01605"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01605.xhtml" title="This class is intended to be used as baseclass for classes that only contains parameters. ">Parametrization</a>.  <a href="a01605.xhtml#ac1cdacddcacae4423fe3d3925dfb116d">More...</a><br /></td></tr>
<tr class="separator:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01265"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01265')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01265.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01265"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01265.xhtml#af6c7867293f8c2459a5fc8fe8b6b0a2a">ClassTypeId</a> = 5955188366590963785LL</td></tr>
<tr class="memdesc:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01265"><td class="mdescLeft">&#160;</td><td class="mdescRight">The TypeId of the <a class="el" href="a01265.xhtml" title="The base class for all DOB objects. ">Object</a> class.  <a href="a01265.xhtml#af6c7867293f8c2459a5fc8fe8b6b0a2a">More...</a><br /></td></tr>
<tr class="separator:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01265"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class has no summary. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5fbf12d696648630cff32f3b4ea0e344"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fbf12d696648630cff32f3b4ea0e344">&sect;&nbsp;</a></span>PersistenceParameters() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::PersistenceParameters::PersistenceParameters </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a07b4fe0e88004920020ab53f079ddff7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07b4fe0e88004920020ab53f079ddff7">&sect;&nbsp;</a></span>PersistenceParameters() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::PersistenceParameters::PersistenceParameters </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7fbcb9b789190d7efeeb7b67ebbc471a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fbcb9b789190d7efeeb7b67ebbc471a">&sect;&nbsp;</a></span>Backend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a01609.xhtml#a85b6b4d7e03487ee51956956daf801ff">Safir::Dob::PersistenceBackend::Enumeration</a> Safir::Dob::PersistenceParameters::Backend </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td>
          <td class="paramname"><em>enumId</em> = <code><a class="el" href="a01609.xhtml#a62dd61339649785b8cfc16ee29c60db0">Safir::Dob::PersistenceBackend::Checksum</a></code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Which backend should DOPE use (Currently 'None', 'File', and 'Odbc' are supported). </p>

</div>
</div>
<a id="a1057ba097a242cf996b9d68094cab5ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1057ba097a242cf996b9d68094cab5ae">&sect;&nbsp;</a></span>BinaryDataColumnSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::PersistenceParameters::BinaryDataColumnSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The size of the BinaryData column in the database. </p>
<p>Unit is bytes. </p>

</div>
</div>
<a id="a7d0b57760b60f91162f5e8b80a5fd678"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d0b57760b60f91162f5e8b80a5fd678">&sect;&nbsp;</a></span>BinarySmallDataColumnSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::PersistenceParameters::BinarySmallDataColumnSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The size of the BinarySmallData column in the database. </p>
<p>Unit is bytes. </p>

</div>
</div>
<a id="ab8c966d0ef55c531fe6606ce5173a3bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8c966d0ef55c531fe6606ce5173a3bb">&sect;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Safir::Dob::Typesystem::ObjectPtr</a> Safir::Dob::PersistenceParameters::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a copy of the object. </p>
<p>Will create a copy of the object on the heap and return a smart pointer to it. Use boost::static_pointer_cast or boost::dynamic_pointer_cast to cast it to the pointer type that you're after.</p>
<dl class="section return"><dt>Returns</dt><dd>A smart pointer to the copy of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#acfcc23857f3714fa151d60844f52abdf">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a62a5968e5974a6e93e85f1c18d44f847"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62a5968e5974a6e93e85f1c18d44f847">&sect;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00410.xhtml#acb35286f6e442be9bd9c985b95262066">PersistenceParametersPtr</a> Safir::Dob::PersistenceParameters::Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5a87b30fc748764f3cb66fef34ccfd72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a87b30fc748764f3cb66fef34ccfd72">&sect;&nbsp;</a></span>FileStoragePath()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::wstring Safir::Dob::PersistenceParameters::FileStoragePath </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Full path where the File storage backend stores its data. </p>
<p>Use forward slashes as directory separator! </p>

</div>
</div>
<a id="af9f4b394c8d3133eecd87ea4f0f7354e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9f4b394c8d3133eecd87ea4f0f7354e">&sect;&nbsp;</a></span>GetMember() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a>&amp; Safir::Dob::PersistenceParameters::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a2b38e5715ba1e4625022e63b5841f883">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="ae7b3c6187a0775dcf2e8a54089a42b18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7b3c6187a0775dcf2e8a54089a42b18">&sect;&nbsp;</a></span>GetMember() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a>&amp; Safir::Dob::PersistenceParameters::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a const reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A const reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a9cce3c7e5b93727ab4fb13ec845107ba">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a51df63ddb31f7adc8c1b1ca5f2af04fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51df63ddb31f7adc8c1b1ca5f2af04fa">&sect;&nbsp;</a></span>GetTypeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::PersistenceParameters::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type id of this object. </p>
<p>Gets the type id of the object. Method is virtual to ensure that the right value gets returned for pointers or references.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The TypeId of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a998309b04fb709df9a6e4b6db8317b8e">Safir::Dob::Parametrization</a>.</p>

<p>References <a class="el" href="a00412.xhtml#a80f84535cdd4541aeac486ee6b541904">Safir::Dob::Typesystem::IsChanged()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01617_a51df63ddb31f7adc8c1b1ca5f2af04fa_cgraph.svg" width="675" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2198ec842eaf5895a586550bd0b3a088"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2198ec842eaf5895a586550bd0b3a088">&sect;&nbsp;</a></span>IsChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Safir::Dob::PersistenceParameters::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if any member of this object is changed. </p>
<p>This method will recursively check if any member of the object has its change flag set.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>True if any member has changed. </dd></dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#aaaa9d68856c38fc154552dfd7c9d9fd9">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="abc65f2262bd7af6ed564a9f0df87f52a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc65f2262bd7af6ed564a9f0df87f52a">&sect;&nbsp;</a></span>OdbcStorageConnectString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::wstring Safir::Dob::PersistenceParameters::OdbcStorageConnectString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The string to use for connection to the physical storage. </p>

</div>
</div>
<a id="ac0aa4d7d948647e75d09392a57bf4839"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0aa4d7d948647e75d09392a57bf4839">&sect;&nbsp;</a></span>SetChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Safir::Dob::PersistenceParameters::SetChanged </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Recursively set change flags in all members of this object. </p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - The value to set the change flags to </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a739f68dc602857c46e3234cf55f3e4ed">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a6ce1cccaeb69f6b47c2dd49a152a70c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ce1cccaeb69f6b47c2dd49a152a70c3">&sect;&nbsp;</a></span>StandaloneMode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Safir::Dob::PersistenceParameters::StandaloneMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>StandaloneMode means that each dope that is started is saving its own persistent data. </p>
<p>Only valid if when several dope_main runs on different nodes in a redundant system. Use with extreme caution. You are responsible for starting the nodes in the correct order! THIS FUNCTIONALITY IS DEPRECATED </p>

</div>
</div>
<a id="aa0cc382f374582d6361cf9625a67c78b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0cc382f374582d6361cf9625a67c78b">&sect;&nbsp;</a></span>TestMode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Safir::Dob::PersistenceParameters::TestMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>TestMode allow initial injections without persistence started. </p>

</div>
</div>
<a id="a24f8d7a31a1305db4016da0253030cae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24f8d7a31a1305db4016da0253030cae">&sect;&nbsp;</a></span>TypeNameColumnSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::PersistenceParameters::TypeNameColumnSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The number of bytes that can be written for each entry to the TypeName column in the database. </p>
<p>Note that this is not in characters, but in bytes, so depending on the value of TextColumnsAreUtf8 and your platform a character can be from 1 to 4 bytes. </p>

</div>
</div>
<a id="a6f8d46302ff47f69e51fa14c9f5ffc69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f8d46302ff47f69e51fa14c9f5ffc69">&sect;&nbsp;</a></span>WriteToBlob()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Safir::Dob::PersistenceParameters::WriteToBlob </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00412.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Write the object to a blob. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">handle</td><td>[in] - Handle to a blobWriter that is the destination of the serialized object. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01605.xhtml#a7683a4313c005322338a8683cdbde6f2">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="af704079b735be91f88de60b5a0d89710"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af704079b735be91f88de60b5a0d89710">&sect;&nbsp;</a></span>XmlDataColumnSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::PersistenceParameters::XmlDataColumnSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The number of bytes that can be written for each entry to the XmlData column in the database. </p>
<p>Note that this is not in characters, but in bytes, so depending on the value of TextColumnsAreUtf8 and your platform a character can be from 1 to 4 bytes. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a235f59be8649dfbf29780b8b93cadc27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a235f59be8649dfbf29780b8b93cadc27">&sect;&nbsp;</a></span>ClassTypeId</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::PersistenceParameters::ClassTypeId = 8276373340234567943LL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Type id for <a class="el" href="a01617.xhtml" title="This class has no summary. ">PersistenceParameters</a>. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a01617.xhtml">PersistenceParameters</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:27 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
