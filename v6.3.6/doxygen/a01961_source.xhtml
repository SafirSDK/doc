<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/ToolSupport/Serialization.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01961_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Serialization.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a01961.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2004-2015 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Joel Ottosson / joot</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more Internals.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __DOTS_INTERNAL_SERIALIZATION_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __DOTS_INTERNAL_SERIALIZATION_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00161.xhtml">Safir/Dob/Typesystem/ToolSupport/ParseError.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/BasicTypeOperations.h&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/BlobToXmlSerializer.h&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/BlobToJsonSerializer.h&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/XmlToBlobSerializer.h&gt;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/JsonToBlobSerializer.h&gt;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/RepositoryToStringHelper.h&gt;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">namespace </span>ToolSupport</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">class </span>TypeRepository;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="a00419.xhtml#a9bfa630132cfa4bce70346113a1ca561">   56</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#a9bfa630132cfa4bce70346113a1ca561">BinaryToBase64</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* binary, <span class="keywordtype">size_t</span> size, std::ostringstream&amp; base64)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        std::string bin(binary, size); <span class="comment">//Improvement: fix implementation to accept &#39;const char*&#39; and avoid this copying</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        base64&lt;&lt;Internal::SerializationUtils::ToBase64(bin,<span class="keyword">false</span>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a00421.xhtml#a21eba57c6b1b8d22a3d0a2d4dc0d2b58">   69</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#a79d7c14eb4dceb07d107a38e31292290">Base64ToBinary</a>(<span class="keyword">const</span> std::string&amp; base64Str, std::vector&lt;char&gt;&amp; binary)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        std::string bin;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        Internal::SerializationUtils::FromBase64(base64Str, bin); <span class="comment">//Improvement: fix implementation to accept vector and avoid this copying</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        binary.insert(binary.begin(), bin.begin(), bin.end());</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="a00419.xhtml#abf1df2b6d65e30cf8d4719ff87f17a4f">   85</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#abf1df2b6d65e30cf8d4719ff87f17a4f">BinaryToXml</a>(<span class="keyword">const</span> RepositoryT* repository, <span class="keyword">const</span> <span class="keywordtype">char</span>* blob, std::ostringstream&amp; xml)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        (Internal::BlobToXmlSerializer&lt;RepositoryT&gt;(repository))(blob, xml);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="a00419.xhtml#ab81d76172716f4bc19cca72fe2409bcb">   99</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#ab81d76172716f4bc19cca72fe2409bcb">XmlToBinary</a>(<span class="keyword">const</span> RepositoryT* repository, <span class="keyword">const</span> <span class="keywordtype">char</span>* xml, std::vector&lt;char&gt;&amp; binary)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        (Internal::XmlToBlobSerializer&lt;RepositoryT&gt;(repository))(xml, binary);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="a00419.xhtml#a855912b5f64793958d826a076bb0efe1">  113</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#a855912b5f64793958d826a076bb0efe1">BinaryToJson</a>(<span class="keyword">const</span> RepositoryT* repository, <span class="keyword">const</span> <span class="keywordtype">char</span>* blob, std::ostringstream&amp; json)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        (Internal::BlobToJsonSerializer&lt;RepositoryT&gt;(repository))(blob, json);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="a00419.xhtml#af68e48f98f82b13e2e0a8bbab40c62e5">  127</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#af68e48f98f82b13e2e0a8bbab40c62e5">JsonToBinary</a>(<span class="keyword">const</span> RepositoryT* repository, <span class="keyword">const</span> <span class="keywordtype">char</span>* json, std::vector&lt;char&gt;&amp; binary)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        (Internal::JsonToBlobSerializer&lt;RepositoryT&gt;(repository))(json, binary);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="a00419.xhtml#a81c09ce71c19d83bf6fcc57560750971">  146</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#a81c09ce71c19d83bf6fcc57560750971">RepositoryToString</a>(<span class="keyword">const</span> RepositoryT* repository, <span class="keywordtype">bool</span> includeCreateRoutines, std::ostream &amp;os)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        (Internal::ToStringHelper&lt;RepositoryT&gt;(repository, includeCreateRoutines)).RepositoryToString(os);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT&gt;</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="a00419.xhtml#ae95a99850bc3937b6ba054d2ca4fa73e">  159</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="a00419.xhtml#ae95a99850bc3937b6ba054d2ca4fa73e">TypeToString</a>(<span class="keyword">const</span> RepositoryT* repository, DotsC_TypeId typeId, std::ostream &amp;os)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        (Internal::ToStringHelper&lt;RepositoryT&gt;(repository, <span class="keyword">false</span>)).TypeInfoToString(typeId, os);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;} <span class="comment">//end namespace Safir::Dob::Typesystem::ToolSupport</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="a00419_xhtml_a855912b5f64793958d826a076bb0efe1"><div class="ttname"><a href="a00419.xhtml#a855912b5f64793958d826a076bb0efe1">Safir::Dob::Typesystem::ToolSupport::BinaryToJson</a></div><div class="ttdeci">void BinaryToJson(const RepositoryT *repository, const char *blob, std::ostringstream &amp;json)</div><div class="ttdoc">Serializes binary representation of an object to json. </div><div class="ttdef"><b>Definition:</b> Serialization.h:113</div></div>
<div class="ttc" id="a00419_xhtml_a9bfa630132cfa4bce70346113a1ca561"><div class="ttname"><a href="a00419.xhtml#a9bfa630132cfa4bce70346113a1ca561">Safir::Dob::Typesystem::ToolSupport::BinaryToBase64</a></div><div class="ttdeci">void BinaryToBase64(const char *binary, size_t size, std::ostringstream &amp;base64)</div><div class="ttdoc">Encodes binary data to base64. </div><div class="ttdef"><b>Definition:</b> Serialization.h:56</div></div>
<div class="ttc" id="a00419_xhtml_ae95a99850bc3937b6ba054d2ca4fa73e"><div class="ttname"><a href="a00419.xhtml#ae95a99850bc3937b6ba054d2ca4fa73e">Safir::Dob::Typesystem::ToolSupport::TypeToString</a></div><div class="ttdeci">void TypeToString(const RepositoryT *repository, DotsC_TypeId typeId, std::ostream &amp;os)</div><div class="ttdoc">Writes a complete text description of a type. </div><div class="ttdef"><b>Definition:</b> Serialization.h:159</div></div>
<div class="ttc" id="a00419_xhtml_abf1df2b6d65e30cf8d4719ff87f17a4f"><div class="ttname"><a href="a00419.xhtml#abf1df2b6d65e30cf8d4719ff87f17a4f">Safir::Dob::Typesystem::ToolSupport::BinaryToXml</a></div><div class="ttdeci">void BinaryToXml(const RepositoryT *repository, const char *blob, std::ostringstream &amp;xml)</div><div class="ttdoc">Serializes binary representation of an object to xml. </div><div class="ttdef"><b>Definition:</b> Serialization.h:85</div></div>
<div class="ttc" id="a00419_xhtml_af68e48f98f82b13e2e0a8bbab40c62e5"><div class="ttname"><a href="a00419.xhtml#af68e48f98f82b13e2e0a8bbab40c62e5">Safir::Dob::Typesystem::ToolSupport::JsonToBinary</a></div><div class="ttdeci">void JsonToBinary(const RepositoryT *repository, const char *json, std::vector&lt; char &gt; &amp;binary)</div><div class="ttdoc">Converts a json representation of an object to binary form. </div><div class="ttdef"><b>Definition:</b> Serialization.h:127</div></div>
<div class="ttc" id="a00161_xhtml"><div class="ttname"><a href="a00161.xhtml">ParseError.h</a></div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a00419_xhtml_a79d7c14eb4dceb07d107a38e31292290"><div class="ttname"><a href="a00419.xhtml#a79d7c14eb4dceb07d107a38e31292290">Safir::Dob::Typesystem::ToolSupport::Base64ToBinary</a></div><div class="ttdeci">void Base64ToBinary(const std::string &amp;base64Str, std::vector&lt; char &gt; &amp;binary)</div><div class="ttdoc">Decodes base64 data into binary data. </div><div class="ttdef"><b>Definition:</b> Serialization.h:69</div></div>
<div class="ttc" id="a00419_xhtml_a81c09ce71c19d83bf6fcc57560750971"><div class="ttname"><a href="a00419.xhtml#a81c09ce71c19d83bf6fcc57560750971">Safir::Dob::Typesystem::ToolSupport::RepositoryToString</a></div><div class="ttdeci">void RepositoryToString(const RepositoryT *repository, bool includeCreateRoutines, std::ostream &amp;os)</div><div class="ttdoc">Writes a complete text description of a type repository and all of its content. </div><div class="ttdef"><b>Definition:</b> Serialization.h:146</div></div>
<div class="ttc" id="a00419_xhtml_ab81d76172716f4bc19cca72fe2409bcb"><div class="ttname"><a href="a00419.xhtml#ab81d76172716f4bc19cca72fe2409bcb">Safir::Dob::Typesystem::ToolSupport::XmlToBinary</a></div><div class="ttdeci">void XmlToBinary(const RepositoryT *repository, const char *xml, std::vector&lt; char &gt; &amp;binary)</div><div class="ttdoc">Converts a xml representation of an object to binary form. </div><div class="ttdef"><b>Definition:</b> Serialization.h:99</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="dir_c1e123044e1c88c7836b2cb3c74b5ad2.xhtml">ToolSupport</a></li><li class="navelem"><a class="el" href="a01961.xhtml">Serialization.h</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:25 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
