<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/ContainerProxies.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00104_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ContainerProxies.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00104.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2008-2013 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Lars Hagstr√∂m / stlrha</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __DOTS_CONTAINER_PROXIES_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define __DOTS_CONTAINER_PROXIES_H__</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00176.xhtml">Safir/Dob/Typesystem/ValueContainers.h</a>&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00134.xhtml">Safir/Dob/Typesystem/ObjectContainer.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="a01169.xhtml">   38</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01169.xhtml">ContainerProxy</a></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="a01169.xhtml#abaa058f04bd0ad00ef1b0abd7062c337">   41</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> T::ContainedType <a class="code" href="a01169.xhtml#abaa058f04bd0ad00ef1b0abd7062c337">ContainedType</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="a01169.xhtml#aee484c8b103392ebd8dd3587b5f6e3dc">   43</a></span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a01169.xhtml#aee484c8b103392ebd8dd3587b5f6e3dc">ContainerProxy</a>(T&amp; container):m_container(container){}</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="a01169.xhtml#a0bf21fdc1fbe4d7ec5ef438dd985d971">   45</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#a0bf21fdc1fbe4d7ec5ef438dd985d971">operator=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; other)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">if</span> (other.<a class="code" href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">IsNull</a>())</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                m_container.SetNull();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                m_container.SetVal(other.<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="a01169.xhtml#a9a15126fecfcb8e6acdbcb850cea0849">   58</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#a9a15126fecfcb8e6acdbcb850cea0849">operator=</a>(<span class="keyword">const</span> ContainedType other) {m_container.SetVal(other);<span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="a01169.xhtml#a9bfdd74da119fd329f4606c9dd82ca9f">   60</a></span>&#160;        <span class="keyword">operator</span> <span class="keyword">const</span> <a class="code" href="a01169.xhtml#abaa058f04bd0ad00ef1b0abd7062c337">ContainedType</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetVal();}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">   62</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsNull();}</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="a01169.xhtml#aae1965248ea8e4d1506a5526fc88ab16">   63</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01169.xhtml#aae1965248ea8e4d1506a5526fc88ab16">SetNull</a>() {m_container.SetNull();}</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="a01169.xhtml#a29a2d807cd4c60d3e49ea0880471d873">   64</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01169.xhtml#a29a2d807cd4c60d3e49ea0880471d873">IsChanged</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsChanged();}</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="a01169.xhtml#a13ab9216ceea1f123dac115b4a1dd3e6">   65</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01169.xhtml#a13ab9216ceea1f123dac115b4a1dd3e6">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {m_container.SetChanged(changed);}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">   68</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(<span class="keyword">const</span> ContainedType value)  {m_container.SetVal(value);}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">   70</a></span>&#160;        <span class="keyword">const</span> ContainedType <a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetVal();}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="a01169.xhtml#a43c32d7c0a3122e890e28f239b8503bb">   72</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01169.xhtml#a43c32d7c0a3122e890e28f239b8503bb">SetOrdinal</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#a00d0cfa6b6bd63861a6bce433a0ce757">EnumerationValue</a> value){m_container.SetOrdinal(value);}</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="a01169.xhtml#a371bba23569b09db0ba22744dcdbb361">   73</a></span>&#160;        <a class="code" href="a00412.xhtml#a00d0cfa6b6bd63861a6bce433a0ce757">EnumerationValue</a> <a class="code" href="a01169.xhtml#a371bba23569b09db0ba22744dcdbb361">GetOrdinal</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetOrdinal();}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="a01169.xhtml#aa7b4b36fe3a94f21407c91f9544521bf">   75</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01169.xhtml#aa7b4b36fe3a94f21407c91f9544521bf">Copy</a> (<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; that) {m_container.Copy(that.m_container);}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="a01169.xhtml#a8000f9a390c21c04e2922da04d98a43b">   77</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#a8000f9a390c21c04e2922da04d98a43b">operator++ </a>()    <span class="comment">// prefix ++</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            ContainedType val = <a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>();</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            ++val;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(val);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="comment">//Does not return anything since I&#39;m not sure what it should return.</span></div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="a01169.xhtml#a07666df3291afe366a311a00cd715c29">   86</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01169.xhtml#a8000f9a390c21c04e2922da04d98a43b">operator++ </a>(<span class="keywordtype">int</span>) <span class="comment">// postfix ++</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            ++(*this);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="a01169.xhtml#ae47bd8c3142fd064f668c78f53094df0">   91</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#ae47bd8c3142fd064f668c78f53094df0">operator-- </a>()    <span class="comment">// prefix --</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            ContainedType val = <a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            --val;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(val);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">//Does not return anything since I&#39;m not sure what it should return.</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="a01169.xhtml#a4a86943e73c1379d2e1173928ef05730">  100</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01169.xhtml#ae47bd8c3142fd064f668c78f53094df0">operator-- </a>(<span class="keywordtype">int</span>) <span class="comment">// postfix --</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            --(*this);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="a01169.xhtml#a98c77cfd23e28b337e670411f82d9d63">  106</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#a98c77cfd23e28b337e670411f82d9d63">operator+= </a>(<span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>() + val);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="a01169.xhtml#a7e5d89b0b1f33d1746b013357fb78826">  112</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#a7e5d89b0b1f33d1746b013357fb78826">operator-= </a>(<span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>() - val);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="a01169.xhtml#a02f473a7fb1bd430836aeed1fbafd542">  118</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#a02f473a7fb1bd430836aeed1fbafd542">operator*= </a>(<span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>() * val);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="a01169.xhtml#ae235fef7a97dfafc7091795c2f405194">  124</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#ae235fef7a97dfafc7091795c2f405194">operator/= </a>(<span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>() / val);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="a01169.xhtml#ab8333d9b888720ded3d3ad7685393b77">  130</a></span>&#160;        <span class="keyword">const</span> T&amp; <a class="code" href="a01169.xhtml#ab8333d9b888720ded3d3ad7685393b77">GetContainer</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="a01169.xhtml#a88d49b0a89a6d5e56e1787a0802d9920">  131</a></span>&#160;        T&amp; <a class="code" href="a01169.xhtml#a88d49b0a89a6d5e56e1787a0802d9920">GetContainer</a>() {<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        T&amp; m_container;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    };</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">  136</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator==</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;ChannelIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01161.xhtml">ChannelId</a>&amp; second)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {<span class="keywordflow">return</span> second == first;}</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">  138</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;ChannelIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01161.xhtml">ChannelId</a>&amp; second)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {<span class="keywordflow">return</span> second != first;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    </div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="a00412.xhtml#a6c7b5e691c69bf933ad20398a537027c">  141</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator==</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;HandlerIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01249.xhtml">HandlerId</a>&amp; second)</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {<span class="keywordflow">return</span> second == first;}</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="a00412.xhtml#af19e155b4cfba87f7bbca07bb6006177">  143</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;HandlerIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01249.xhtml">HandlerId</a>&amp; second)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    {<span class="keywordflow">return</span> second != first;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="a00412.xhtml#a33b3a761f8503cebdd8a4fc82128a06f">  146</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator==</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;InstanceIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01253.xhtml">InstanceId</a>&amp; second)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {<span class="keywordflow">return</span> second == first;}</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="a00412.xhtml#a32f0eedcaf119696f92e3b79415fbd9f">  148</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;InstanceIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01253.xhtml">InstanceId</a>&amp; second)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    {<span class="keywordflow">return</span> second != first;}</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="a00412.xhtml#af270f926b0c79717f3d88a5352b1b4ba">  151</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator==</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;EntityIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01205.xhtml">EntityId</a>&amp; second)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {<span class="keywordflow">return</span> second == first;}</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="a00412.xhtml#a42ea40624ed54440a6b7155f58b76ef5">  153</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy&lt;EntityIdContainer&gt;</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01205.xhtml">EntityId</a>&amp; second)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    {<span class="keywordflow">return</span> second != first;}</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="a01173.xhtml">  158</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01169.xhtml">ContainerProxy</a>&lt;<a class="code" href="a01389.xhtml">StringContainer</a>&gt;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="a01173.xhtml#a96f023149bfe5d97327ba38446e0eae9">  161</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01389.xhtml#ae52784f8e4bcd9e2275774ccb4df1bd6">StringContainer::ContainedType</a> <a class="code" href="a01173.xhtml#a96f023149bfe5d97327ba38446e0eae9">ContainedType</a>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="a01173.xhtml#a2428630aa54ce49393bb2199c87eab38">  163</a></span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a01173.xhtml#a2428630aa54ce49393bb2199c87eab38">ContainerProxy</a>(<a class="code" href="a01389.xhtml">StringContainer</a>&amp; container):m_container(container){}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="a01173.xhtml#ae56f725133ba32e08575bcdd3d5daea0">  165</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01173.xhtml#ae56f725133ba32e08575bcdd3d5daea0">operator=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; other)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">if</span> (other.<a class="code" href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">IsNull</a>())</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                m_container.<a class="code" href="a01169.xhtml#aae1965248ea8e4d1506a5526fc88ab16">SetNull</a>();</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                m_container.SetVal(other.<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>());</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="a01173.xhtml#a02ddae09a934d52e4ee6657241cfebeb">  178</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01173.xhtml#a02ddae09a934d52e4ee6657241cfebeb">operator=</a>(<span class="keyword">const</span> ContainedType&amp; other) {m_container.<a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(other);<span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="a01173.xhtml#ab3055e43a43452ff1d0d0269e76fdb90">  180</a></span>&#160;        <span class="keyword">operator</span> <span class="keyword">const</span> ContainedType&amp; () <span class="keyword">const</span> {<span class="keywordflow">return</span> m_container.GetVal();}</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="a01173.xhtml#add420d991bd0b3552e26015e132bb82f">  182</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01173.xhtml#add420d991bd0b3552e26015e132bb82f">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsNull();}</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="a01173.xhtml#a4fa4e1995c10d1212f8e489bc07f11ee">  183</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01173.xhtml#a4fa4e1995c10d1212f8e489bc07f11ee">SetNull</a>() {m_container.SetNull();}</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="a01173.xhtml#a54fb73dfbbb3a275379a2cdf4987f0ab">  184</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01173.xhtml#a54fb73dfbbb3a275379a2cdf4987f0ab">IsChanged</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsChanged();}</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="a01173.xhtml#a0a27b524b5bfd637aafb0a64c660d073">  185</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01173.xhtml#a0a27b524b5bfd637aafb0a64c660d073">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {m_container.SetChanged(changed);}</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="a01173.xhtml#aa95fe9630195d09785ad723cce368c93">  188</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01173.xhtml#aa95fe9630195d09785ad723cce368c93">SetVal</a>(<span class="keyword">const</span> ContainedType&amp; value)  {m_container.SetVal(value);}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="a01173.xhtml#a15fa0145033a5a922317db72f4b449c8">  190</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01173.xhtml#a15fa0145033a5a922317db72f4b449c8">GetVal</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetVal();}</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="a01173.xhtml#afcad4e6b57696489c27f5d94400a17a3">  192</a></span>&#160;        <a class="code" href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Int32</a> <a class="code" href="a01173.xhtml#afcad4e6b57696489c27f5d94400a17a3">Utf8StringLength</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.Utf8StringLength();}</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="a01173.xhtml#a15f7375d0e710b6810c26c5e18bf9856">  193</a></span>&#160;        <span class="keyword">const</span> std::string &amp; <a class="code" href="a01173.xhtml#a15f7375d0e710b6810c26c5e18bf9856">Utf8String</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.Utf8String();}</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="a01173.xhtml#a52e726e08442a8cd9e294b1f4e2ddd78">  195</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01173.xhtml#a52e726e08442a8cd9e294b1f4e2ddd78">Copy</a> (<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; that) {m_container.Copy(that.m_container);}</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="a01173.xhtml#a53a36cd5b318af201c425521c4c49a08">  197</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01169.xhtml#a98c77cfd23e28b337e670411f82d9d63">operator+= </a>(<span class="keyword">const</span> ContainedType&amp; val)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>() + val);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="a01173.xhtml#aff6fdaa97e7e894d009c2a027af50ba2">  203</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator== </a>(<span class="keyword">const</span> ContainedType&amp; val)<span class="keyword"> const</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">return</span> m_container.GetVal() == val;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        }</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="a01173.xhtml#a5ba7c289ec47ce8682c4605c49ace9d7">  208</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!= </a>(<span class="keyword">const</span> ContainedType&amp; val)<span class="keyword"> const</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="keywordflow">return</span> m_container.GetVal() != val;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        }</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="a01173.xhtml#a1c72292d68f1f5753eb8d1c084cff75e">  213</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="a01389.xhtml">StringContainer</a>&amp; <a class="code" href="a01173.xhtml#a1c72292d68f1f5753eb8d1c084cff75e">GetContainer</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="a01173.xhtml#a8c214d8acbcd7aca32edd4b63e66db2b">  214</a></span>&#160;        <a class="code" href="a01389.xhtml">StringContainer</a>&amp; <a class="code" href="a01173.xhtml#a8c214d8acbcd7aca32edd4b63e66db2b">GetContainer</a>() {<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="a01389.xhtml">StringContainer</a>&amp; m_container;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    };</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    </div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="a00412.xhtml#a93ae9833fc00ba39211178ebf3d8d2a0">  220</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator==</a>(<span class="keyword">const</span> std::wstring&amp; first, <span class="keyword">const</span> <a class="code" href="a01173.xhtml">ContainerProxy&lt;StringContainer&gt;</a>&amp; second)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    {<span class="keywordflow">return</span> second == first;}</div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="a00412.xhtml#a0945f2ba5e6967d2b66483fb200c2d58">  222</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!=</a>(<span class="keyword">const</span> std::wstring&amp; first, <span class="keyword">const</span> <a class="code" href="a01173.xhtml">ContainerProxy&lt;StringContainer&gt;</a>&amp; second)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    {<span class="keywordflow">return</span> second != first;}</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="a01177.xhtml">  227</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01169.xhtml">ContainerProxy</a>&lt;<a class="code" href="a01393.xhtml">BinaryContainer</a>&gt;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="a01177.xhtml#aa7f59745c067a0336550b9cd059bd6be">  230</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01393.xhtml#a885497118ab25abb1544731fd5e78880">BinaryContainer::ContainedType</a> <a class="code" href="a01177.xhtml#aa7f59745c067a0336550b9cd059bd6be">ContainedType</a>;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="a01177.xhtml#aec07508f2a072e6d7a890a09715c522b">  232</a></span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a01177.xhtml#aec07508f2a072e6d7a890a09715c522b">ContainerProxy</a>(<a class="code" href="a01393.xhtml">BinaryContainer</a>&amp; container):m_container(container){}</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="a01177.xhtml#a73c234fdf59da7b2168c82899c932bdc">  234</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01177.xhtml#a73c234fdf59da7b2168c82899c932bdc">operator=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; other)</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">if</span> (other.<a class="code" href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">IsNull</a>())</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            {</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                m_container.<a class="code" href="a01169.xhtml#aae1965248ea8e4d1506a5526fc88ab16">SetNull</a>();</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                m_container.SetVal(other.<a class="code" href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">GetVal</a>());</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            }</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="a01177.xhtml#a5c58039a6cbfc20d64e845b101d855c3">  247</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01177.xhtml#a5c58039a6cbfc20d64e845b101d855c3">operator=</a>(<span class="keyword">const</span> ContainedType&amp; other) {m_container.<a class="code" href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">SetVal</a>(other);<span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="a01177.xhtml#af077676bea7904dd4814f54cfab86b26">  249</a></span>&#160;        <span class="keyword">operator</span> <span class="keyword">const</span> ContainedType&amp; () <span class="keyword">const</span> {<span class="keywordflow">return</span> m_container.GetVal();}</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="a01177.xhtml#a2d550b976c866c76468c6b65d3176ec6">  251</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01177.xhtml#a2d550b976c866c76468c6b65d3176ec6">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsNull();}</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="a01177.xhtml#a4e57444015ad3536cd9aa3ee39ce0608">  252</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01177.xhtml#a4e57444015ad3536cd9aa3ee39ce0608">SetNull</a>() {m_container.SetNull();}</div><div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="a01177.xhtml#a8754c182836bbc7474a50ee1863e2a14">  253</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01177.xhtml#a8754c182836bbc7474a50ee1863e2a14">IsChanged</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsChanged();}</div><div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="a01177.xhtml#a6aa2d3f022f8285203bd2f954db957fe">  254</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01177.xhtml#a6aa2d3f022f8285203bd2f954db957fe">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {m_container.SetChanged(changed);}</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="a01177.xhtml#a065e7217d42cffc93470caa45dab94d3">  257</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01177.xhtml#a065e7217d42cffc93470caa45dab94d3">SetVal</a>(<span class="keyword">const</span> ContainedType&amp; value)  {m_container.SetVal(value);}</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="a01177.xhtml#a7544c42fb5cae78c83c6e0a5efb8161a">  259</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01177.xhtml#a7544c42fb5cae78c83c6e0a5efb8161a">GetVal</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetVal();}</div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="a01177.xhtml#a650b7136586d3aa9b1c28ad91519353e">  260</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01177.xhtml#a650b7136586d3aa9b1c28ad91519353e">Copy</a> (<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; that) {m_container.Copy(that.m_container);}</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="a01177.xhtml#a34d913d36b0c1e608f7bf80294181375">  262</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator== </a>(<span class="keyword">const</span> ContainedType&amp; val)<span class="keyword"> const</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">return</span> m_container.GetVal() == val;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="a01177.xhtml#aab633e6417d183ac9847189b37afc944">  267</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!= </a>(<span class="keyword">const</span> ContainedType&amp; val)<span class="keyword"> const</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">return</span> m_container.GetVal() != val;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        }</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="a01177.xhtml#a429052f1737c5e556949669deff7d1ef">  272</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="a01393.xhtml">BinaryContainer</a>&amp; <a class="code" href="a01177.xhtml#a429052f1737c5e556949669deff7d1ef">GetContainer</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="a01177.xhtml#a2a46508fc40ac3b90c83c8bc91bc3b97">  273</a></span>&#160;        <a class="code" href="a01393.xhtml">BinaryContainer</a>&amp; <a class="code" href="a01177.xhtml#a2a46508fc40ac3b90c83c8bc91bc3b97">GetContainer</a>() {<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <a class="code" href="a01393.xhtml">BinaryContainer</a>&amp; m_container;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    };</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="a00412.xhtml#ac7676df3c944e6bd5a12f0d1460f7f59">  278</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">operator==</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Binary</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01177.xhtml">ContainerProxy&lt;BinaryContainer&gt;</a>&amp; second)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    {<span class="keywordflow">return</span> second == first;}</div><div class="line"><a name="l00280"></a><span class="lineno"><a class="line" href="a00412.xhtml#a662bd4998878d41236c770f63dacf38e">  280</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">operator!=</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Binary</a>&amp; first, <span class="keyword">const</span> <a class="code" href="a01177.xhtml">ContainerProxy&lt;BinaryContainer&gt;</a>&amp; second)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    {<span class="keywordflow">return</span> second != first;}</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> U&gt;</div><div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="a01181.xhtml">  285</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01169.xhtml">ContainerProxy</a>&lt;<a class="code" href="a01273.xhtml">ObjectContainerImpl</a>&lt;U&gt; &gt;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="a01181.xhtml#aa429030b9a6ddd9cec27704aa3286f27">  288</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> <a class="code" href="a01273.xhtml">ObjectContainerImpl&lt;U&gt;::T_Ptr</a> <a class="code" href="a01181.xhtml#aa429030b9a6ddd9cec27704aa3286f27">ContainedType</a>;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="a01181.xhtml#a883a2ab8a0df6431e61bc5429bbeaf95">  290</a></span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a01181.xhtml#a883a2ab8a0df6431e61bc5429bbeaf95">ContainerProxy</a>(<a class="code" href="a01273.xhtml">ObjectContainerImpl&lt;U&gt;</a>&amp; container):m_container(container){}</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="a01181.xhtml#a204a5b7124f769a39637a0589158fd96">  292</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01181.xhtml#a204a5b7124f769a39637a0589158fd96">operator=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; other)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        {</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">if</span> (other.<a class="code" href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">IsNull</a>())</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            {</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                m_container.<a class="code" href="a01169.xhtml#aae1965248ea8e4d1506a5526fc88ab16">SetNull</a>();</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            }</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                m_container.SetPtr(other);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        }</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="a01181.xhtml#a2e9bbf0ac8471e068cd2494d20723fc1">  305</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01181.xhtml#a2e9bbf0ac8471e068cd2494d20723fc1">operator=</a>(<span class="keyword">const</span> ContainedType&amp; other) {m_container.SetPtr(other);<span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="a01181.xhtml#a9df119d3f72e0f29bea3c00d9a755f23">  307</a></span>&#160;        <span class="keyword">operator</span> <span class="keyword">const</span> <a class="code" href="a01169.xhtml#abaa058f04bd0ad00ef1b0abd7062c337">ContainedType</a> ()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetPtr();}</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="a01181.xhtml#afbd90c1f9a61da6b98362e948815f681">  309</a></span>&#160;        U* <a class="code" href="a01181.xhtml#afbd90c1f9a61da6b98362e948815f681">operator-&gt;</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> m_container.operator-&gt;(); }</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="a01181.xhtml#ac1391da4c37b510270d25a80bd670278">  312</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01181.xhtml#ac1391da4c37b510270d25a80bd670278">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsNull();}</div><div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="a01181.xhtml#ae482199d35f588783bcdfb9d8bc70e1a">  313</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01181.xhtml#ae482199d35f588783bcdfb9d8bc70e1a">SetNull</a>() {m_container.SetNull();}</div><div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="a01181.xhtml#a3852068a8ec05ec079a8185cbda20d6f">  314</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01181.xhtml#a3852068a8ec05ec079a8185cbda20d6f">IsChanged</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsChanged();}</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="a01181.xhtml#af93b905030c30d2aaeade34c290b60f3">  315</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01181.xhtml#af93b905030c30d2aaeade34c290b60f3">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {m_container.SetChanged(changed);}</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="a01181.xhtml#a0eca8cb598ca81325f6035471dddaf01">  317</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01181.xhtml#a0eca8cb598ca81325f6035471dddaf01">SetChangedHere</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {m_container.SetChangedHere(changed);}</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="a01181.xhtml#a4006c6132d5dc8b974ca967ea6cf5648">  318</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01181.xhtml#a4006c6132d5dc8b974ca967ea6cf5648">IsChangedHere</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsChangedHere();}</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="a01181.xhtml#a42b68b12bb12d71c5ccb4b40084b47dc">  320</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01181.xhtml#a42b68b12bb12d71c5ccb4b40084b47dc">SetPtr</a>(<span class="keyword">const</span> ContainedType&amp; ptr)  {m_container.SetPtr(ptr);}</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="a01181.xhtml#a9d15bf2c40f64f878824e704b6cc0529">  321</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01181.xhtml#a9d15bf2c40f64f878824e704b6cc0529">SetPtr</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a>&amp; ptr)      {m_container.SetPtr(ptr);}</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="a01181.xhtml#a679325b218ea4e0b16ceabc0fef79bb9">  323</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01181.xhtml#a679325b218ea4e0b16ceabc0fef79bb9">GetPtr</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetPtr();}</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="a01181.xhtml#a905616112e4df4fddf89d251f223d783">  324</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01181.xhtml#a905616112e4df4fddf89d251f223d783">Copy</a> (<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; that) {m_container.Copy(that.m_container);}</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="a01181.xhtml#a121a5f3cdffb347799bbdedcf8535fd0">  326</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="a01273.xhtml">ObjectContainerImpl&lt;U&gt;</a>&amp; <a class="code" href="a01181.xhtml#a121a5f3cdffb347799bbdedcf8535fd0">GetContainer</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="a01181.xhtml#aff0b66ade3d9fb739f08cd1a8b678e20">  327</a></span>&#160;        <a class="code" href="a01273.xhtml">ObjectContainerImpl&lt;U&gt;</a>&amp; <a class="code" href="a01181.xhtml#aff0b66ade3d9fb739f08cd1a8b678e20">GetContainer</a>() {<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <a class="code" href="a01273.xhtml">ObjectContainerImpl&lt;U&gt;</a>&amp; m_container;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    };</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="a01185.xhtml">  334</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01169.xhtml">ContainerProxy</a>&lt;<a class="code" href="a01273.xhtml">ObjectContainerImpl</a>&lt;<a class="code" href="a01265.xhtml">Object</a>&gt; &gt;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="a01185.xhtml#ac830549a9e37be55cd400ecd5c5d6672">  337</a></span>&#160;        <span class="keyword">typedef</span> <a class="code" href="a01273.xhtml#aad8d4cf8ce538be8bd5f36a16c3ba438">ObjectContainerImpl&lt;Object&gt;::T_Ptr</a> <a class="code" href="a01185.xhtml#ac830549a9e37be55cd400ecd5c5d6672">ContainedType</a>;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="a01185.xhtml#a03061710e9c540f32dc67352ca203ac4">  339</a></span>&#160;        <span class="keyword">explicit</span> <a class="code" href="a01185.xhtml#a03061710e9c540f32dc67352ca203ac4">ContainerProxy</a>(<a class="code" href="a01277.xhtml">ObjectContainerImpl&lt;Object&gt;</a>&amp; container):m_container(container){}</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno"><a class="line" href="a01185.xhtml#aa03837df68e52410f796b77927843a05">  341</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01185.xhtml#aa03837df68e52410f796b77927843a05">operator=</a>(<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; other)</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        {</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keywordflow">if</span> (other.<a class="code" href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">IsNull</a>())</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            {</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                m_container.<a class="code" href="a01169.xhtml#aae1965248ea8e4d1506a5526fc88ab16">SetNull</a>();</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            }</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            {</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                m_container.SetPtr(other);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            }</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        }</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="a01185.xhtml#a960a92cc222d1f41b7935ba13eb8de3b">  354</a></span>&#160;        <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; <a class="code" href="a01185.xhtml#a960a92cc222d1f41b7935ba13eb8de3b">operator=</a>(<span class="keyword">const</span> ContainedType&amp; other) {m_container.SetPtr(other);<span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="a01185.xhtml#aa0371ccb965c8b2ca4ae45e98af350f3">  356</a></span>&#160;        <span class="keyword">operator</span> <span class="keyword">const</span> <a class="code" href="a01169.xhtml#abaa058f04bd0ad00ef1b0abd7062c337">ContainedType</a> ()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetPtr();}</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="a01185.xhtml#a12dfff3dc732ba6d018dd7099261570c">  358</a></span>&#160;        <a class="code" href="a01265.xhtml">Object</a>* <a class="code" href="a01185.xhtml#a12dfff3dc732ba6d018dd7099261570c">operator-&gt;</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> m_container.operator-&gt;(); }</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="a01185.xhtml#aa7997578d6945eeba7502c28faa634f4">  361</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01185.xhtml#aa7997578d6945eeba7502c28faa634f4">IsNull</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsNull();}</div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="a01185.xhtml#a7bd402ec48d25d5be1a601592e977c8f">  362</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01185.xhtml#a7bd402ec48d25d5be1a601592e977c8f">SetNull</a>() {m_container.SetNull();}</div><div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="a01185.xhtml#ac6fe52a75d86378254f75baea89efff9">  363</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01185.xhtml#ac6fe52a75d86378254f75baea89efff9">IsChanged</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsChanged();}</div><div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="a01185.xhtml#a1d76eecec717e05be4f97ca544a8aa2b">  364</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01185.xhtml#a1d76eecec717e05be4f97ca544a8aa2b">SetChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {m_container.SetChanged(changed);}</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="a01185.xhtml#a76ca7a69b8851ee04092554de8d0d50a">  366</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01185.xhtml#a76ca7a69b8851ee04092554de8d0d50a">SetChangedHere</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> changed) {m_container.SetChangedHere(changed);}</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="a01185.xhtml#a5ff9aa798534bd196ceb5aa76ef1de5a">  367</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01185.xhtml#a5ff9aa798534bd196ceb5aa76ef1de5a">IsChangedHere</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.IsChangedHere();}</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="a01185.xhtml#add246644c7963d77206811dd3786c141">  369</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01185.xhtml#add246644c7963d77206811dd3786c141">SetPtr</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a>&amp; ptr)      {m_container.SetPtr(ptr);}</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="a01185.xhtml#a7d31e13db5568e1bf4b97acef43dd219">  371</a></span>&#160;        <span class="keyword">const</span> ContainedType&amp; <a class="code" href="a01185.xhtml#a7d31e13db5568e1bf4b97acef43dd219">GetPtr</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container.GetPtr();}</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno"><a class="line" href="a01185.xhtml#ae758d809da23c2e8f0a9cd13939e3d08">  373</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01185.xhtml#ae758d809da23c2e8f0a9cd13939e3d08">Copy</a> (<span class="keyword">const</span> <a class="code" href="a01169.xhtml">ContainerProxy</a>&amp; that) {m_container.Copy(that.m_container);}</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="a01185.xhtml#a606f6ce905895495b05f18878e95b5f6">  375</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="a01277.xhtml">ObjectContainerImpl&lt;Object&gt;</a>&amp; <a class="code" href="a01185.xhtml#a606f6ce905895495b05f18878e95b5f6">GetContainer</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="a01185.xhtml#ac175fc1dacbe7183973a2eab69d2c1fd">  376</a></span>&#160;        <a class="code" href="a01277.xhtml">ObjectContainerImpl&lt;Object&gt;</a>&amp; <a class="code" href="a01185.xhtml#ac175fc1dacbe7183973a2eab69d2c1fd">GetContainer</a>() {<span class="keywordflow">return</span> m_container;}</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        <a class="code" href="a01277.xhtml">ObjectContainerImpl&lt;Object&gt;</a>&amp; m_container;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    };</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;}</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;}</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="ttc" id="a01185_xhtml_a76ca7a69b8851ee04092554de8d0d50a"><div class="ttname"><a href="a01185.xhtml#a76ca7a69b8851ee04092554de8d0d50a">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::SetChangedHere</a></div><div class="ttdeci">void SetChangedHere(const bool changed)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:366</div></div>
<div class="ttc" id="a00134_xhtml"><div class="ttname"><a href="a00134.xhtml">ObjectContainer.h</a></div></div>
<div class="ttc" id="a01181_xhtml_a2e9bbf0ac8471e068cd2494d20723fc1"><div class="ttname"><a href="a01181.xhtml#a2e9bbf0ac8471e068cd2494d20723fc1">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainedType &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:305</div></div>
<div class="ttc" id="a01177_xhtml_a7544c42fb5cae78c83c6e0a5efb8161a"><div class="ttname"><a href="a01177.xhtml#a7544c42fb5cae78c83c6e0a5efb8161a">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::GetVal</a></div><div class="ttdeci">const ContainedType &amp; GetVal() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:259</div></div>
<div class="ttc" id="a01173_xhtml_a8c214d8acbcd7aca32edd4b63e66db2b"><div class="ttname"><a href="a01173.xhtml#a8c214d8acbcd7aca32edd4b63e66db2b">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::GetContainer</a></div><div class="ttdeci">StringContainer &amp; GetContainer()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:214</div></div>
<div class="ttc" id="a01181_xhtml_aff0b66ade3d9fb739f08cd1a8b678e20"><div class="ttname"><a href="a01181.xhtml#aff0b66ade3d9fb739f08cd1a8b678e20">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::GetContainer</a></div><div class="ttdeci">ObjectContainerImpl&lt; U &gt; &amp; GetContainer()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:327</div></div>
<div class="ttc" id="a01389_xhtml_ae52784f8e4bcd9e2275774ccb4df1bd6"><div class="ttname"><a href="a01389.xhtml#ae52784f8e4bcd9e2275774ccb4df1bd6">Safir::Dob::Typesystem::StringContainer::ContainedType</a></div><div class="ttdeci">std::wstring ContainedType</div><div class="ttdef"><b>Definition:</b> ValueContainers.h:129</div></div>
<div class="ttc" id="a01169_xhtml_aae1965248ea8e4d1506a5526fc88ab16"><div class="ttname"><a href="a01169.xhtml#aae1965248ea8e4d1506a5526fc88ab16">Safir::Dob::Typesystem::ContainerProxy::SetNull</a></div><div class="ttdeci">void SetNull()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:63</div></div>
<div class="ttc" id="a01185_xhtml_ae758d809da23c2e8f0a9cd13939e3d08"><div class="ttname"><a href="a01185.xhtml#ae758d809da23c2e8f0a9cd13939e3d08">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::Copy</a></div><div class="ttdeci">void Copy(const ContainerProxy &amp;that)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:373</div></div>
<div class="ttc" id="a01177_xhtml_a6aa2d3f022f8285203bd2f954db957fe"><div class="ttname"><a href="a01177.xhtml#a6aa2d3f022f8285203bd2f954db957fe">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::SetChanged</a></div><div class="ttdeci">void SetChanged(const bool changed)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:254</div></div>
<div class="ttc" id="a01177_xhtml_a4e57444015ad3536cd9aa3ee39ce0608"><div class="ttname"><a href="a01177.xhtml#a4e57444015ad3536cd9aa3ee39ce0608">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::SetNull</a></div><div class="ttdeci">void SetNull()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:252</div></div>
<div class="ttc" id="a01185_xhtml_aa7997578d6945eeba7502c28faa634f4"><div class="ttname"><a href="a01185.xhtml#aa7997578d6945eeba7502c28faa634f4">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::IsNull</a></div><div class="ttdeci">bool IsNull() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:361</div></div>
<div class="ttc" id="a01185_xhtml_a7bd402ec48d25d5be1a601592e977c8f"><div class="ttname"><a href="a01185.xhtml#a7bd402ec48d25d5be1a601592e977c8f">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::SetNull</a></div><div class="ttdeci">void SetNull()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:362</div></div>
<div class="ttc" id="a01185_xhtml_ac6fe52a75d86378254f75baea89efff9"><div class="ttname"><a href="a01185.xhtml#ac6fe52a75d86378254f75baea89efff9">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::IsChanged</a></div><div class="ttdeci">bool IsChanged() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:363</div></div>
<div class="ttc" id="a01169_xhtml_a13ab9216ceea1f123dac115b4a1dd3e6"><div class="ttname"><a href="a01169.xhtml#a13ab9216ceea1f123dac115b4a1dd3e6">Safir::Dob::Typesystem::ContainerProxy::SetChanged</a></div><div class="ttdeci">void SetChanged(const bool changed)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:65</div></div>
<div class="ttc" id="a01169_xhtml_ab8333d9b888720ded3d3ad7685393b77"><div class="ttname"><a href="a01169.xhtml#ab8333d9b888720ded3d3ad7685393b77">Safir::Dob::Typesystem::ContainerProxy::GetContainer</a></div><div class="ttdeci">const T &amp; GetContainer() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:130</div></div>
<div class="ttc" id="a01177_xhtml_a8754c182836bbc7474a50ee1863e2a14"><div class="ttname"><a href="a01177.xhtml#a8754c182836bbc7474a50ee1863e2a14">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::IsChanged</a></div><div class="ttdeci">bool IsChanged() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:253</div></div>
<div class="ttc" id="a01161_xhtml"><div class="ttname"><a href="a01161.xhtml">Safir::Dob::Typesystem::ChannelId</a></div><div class="ttdoc">Class containing the identity of a channel. </div><div class="ttdef"><b>Definition:</b> ChannelId.h:45</div></div>
<div class="ttc" id="a01169_xhtml_abaa058f04bd0ad00ef1b0abd7062c337"><div class="ttname"><a href="a01169.xhtml#abaa058f04bd0ad00ef1b0abd7062c337">Safir::Dob::Typesystem::ContainerProxy::ContainedType</a></div><div class="ttdeci">T::ContainedType ContainedType</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:41</div></div>
<div class="ttc" id="a01173_xhtml_a2428630aa54ce49393bb2199c87eab38"><div class="ttname"><a href="a01173.xhtml#a2428630aa54ce49393bb2199c87eab38">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::ContainerProxy</a></div><div class="ttdeci">ContainerProxy(StringContainer &amp;container)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:163</div></div>
<div class="ttc" id="a01173_xhtml_a0a27b524b5bfd637aafb0a64c660d073"><div class="ttname"><a href="a01173.xhtml#a0a27b524b5bfd637aafb0a64c660d073">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::SetChanged</a></div><div class="ttdeci">void SetChanged(const bool changed)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:185</div></div>
<div class="ttc" id="a01181_xhtml_afbd90c1f9a61da6b98362e948815f681"><div class="ttname"><a href="a01181.xhtml#afbd90c1f9a61da6b98362e948815f681">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::operator-&gt;</a></div><div class="ttdeci">U * operator-&gt;() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:309</div></div>
<div class="ttc" id="a01185_xhtml_a12dfff3dc732ba6d018dd7099261570c"><div class="ttname"><a href="a01185.xhtml#a12dfff3dc732ba6d018dd7099261570c">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::operator-&gt;</a></div><div class="ttdeci">Object * operator-&gt;() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:358</div></div>
<div class="ttc" id="a01173_xhtml_a4fa4e1995c10d1212f8e489bc07f11ee"><div class="ttname"><a href="a01173.xhtml#a4fa4e1995c10d1212f8e489bc07f11ee">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::SetNull</a></div><div class="ttdeci">void SetNull()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:183</div></div>
<div class="ttc" id="a01185_xhtml_ac175fc1dacbe7183973a2eab69d2c1fd"><div class="ttname"><a href="a01185.xhtml#ac175fc1dacbe7183973a2eab69d2c1fd">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::GetContainer</a></div><div class="ttdeci">ObjectContainerImpl&lt; Object &gt; &amp; GetContainer()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:376</div></div>
<div class="ttc" id="a01177_xhtml_aa7f59745c067a0336550b9cd059bd6be"><div class="ttname"><a href="a01177.xhtml#aa7f59745c067a0336550b9cd059bd6be">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::ContainedType</a></div><div class="ttdeci">BinaryContainer::ContainedType ContainedType</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:230</div></div>
<div class="ttc" id="a01181_xhtml_ac1391da4c37b510270d25a80bd670278"><div class="ttname"><a href="a01181.xhtml#ac1391da4c37b510270d25a80bd670278">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::IsNull</a></div><div class="ttdeci">bool IsNull() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:312</div></div>
<div class="ttc" id="a01181_xhtml_a204a5b7124f769a39637a0589158fd96"><div class="ttname"><a href="a01181.xhtml#a204a5b7124f769a39637a0589158fd96">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainerProxy &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:292</div></div>
<div class="ttc" id="a01185_xhtml_add246644c7963d77206811dd3786c141"><div class="ttname"><a href="a01185.xhtml#add246644c7963d77206811dd3786c141">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::SetPtr</a></div><div class="ttdeci">void SetPtr(const ObjectPtr &amp;ptr)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:369</div></div>
<div class="ttc" id="a01173_xhtml_a96f023149bfe5d97327ba38446e0eae9"><div class="ttname"><a href="a01173.xhtml#a96f023149bfe5d97327ba38446e0eae9">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::ContainedType</a></div><div class="ttdeci">StringContainer::ContainedType ContainedType</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:161</div></div>
<div class="ttc" id="a00412_xhtml_a77c8a9fabe66e72ccbc66c729540b9b6"><div class="ttname"><a href="a00412.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a></div><div class="ttdeci">DotsC_Int32 Int32</div><div class="ttdoc">32 bit integer type. </div><div class="ttdef"><b>Definition:</b> Defs.h:66</div></div>
<div class="ttc" id="a01169_xhtml_ae47bd8c3142fd064f668c78f53094df0"><div class="ttname"><a href="a01169.xhtml#ae47bd8c3142fd064f668c78f53094df0">Safir::Dob::Typesystem::ContainerProxy::operator--</a></div><div class="ttdeci">ContainerProxy &amp; operator--()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:91</div></div>
<div class="ttc" id="a01169_xhtml_a6342b4bb61ac5eae16cd8ec04503ff68"><div class="ttname"><a href="a01169.xhtml#a6342b4bb61ac5eae16cd8ec04503ff68">Safir::Dob::Typesystem::ContainerProxy::SetVal</a></div><div class="ttdeci">void SetVal(const ContainedType value)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:68</div></div>
<div class="ttc" id="a01173_xhtml_ae56f725133ba32e08575bcdd3d5daea0"><div class="ttname"><a href="a01173.xhtml#ae56f725133ba32e08575bcdd3d5daea0">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainerProxy &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:165</div></div>
<div class="ttc" id="a01181_xhtml_a9d15bf2c40f64f878824e704b6cc0529"><div class="ttname"><a href="a01181.xhtml#a9d15bf2c40f64f878824e704b6cc0529">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::SetPtr</a></div><div class="ttdeci">void SetPtr(const ObjectPtr &amp;ptr)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:321</div></div>
<div class="ttc" id="a01169_xhtml_a88d49b0a89a6d5e56e1787a0802d9920"><div class="ttname"><a href="a01169.xhtml#a88d49b0a89a6d5e56e1787a0802d9920">Safir::Dob::Typesystem::ContainerProxy::GetContainer</a></div><div class="ttdeci">T &amp; GetContainer()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:131</div></div>
<div class="ttc" id="a01273_xhtml_aad8d4cf8ce538be8bd5f36a16c3ba438"><div class="ttname"><a href="a01273.xhtml#aad8d4cf8ce538be8bd5f36a16c3ba438">Safir::Dob::Typesystem::ObjectContainerImpl::T_Ptr</a></div><div class="ttdeci">boost::shared_ptr&lt; T &gt; T_Ptr</div><div class="ttdoc">Typedef for the contained smart pointer. </div><div class="ttdef"><b>Definition:</b> ObjectContainer.h:189</div></div>
<div class="ttc" id="a01177_xhtml_a065e7217d42cffc93470caa45dab94d3"><div class="ttname"><a href="a01177.xhtml#a065e7217d42cffc93470caa45dab94d3">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::SetVal</a></div><div class="ttdeci">void SetVal(const ContainedType &amp;value)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:257</div></div>
<div class="ttc" id="a01173_xhtml_aa95fe9630195d09785ad723cce368c93"><div class="ttname"><a href="a01173.xhtml#aa95fe9630195d09785ad723cce368c93">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::SetVal</a></div><div class="ttdeci">void SetVal(const ContainedType &amp;value)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:188</div></div>
<div class="ttc" id="a01181_xhtml_a905616112e4df4fddf89d251f223d783"><div class="ttname"><a href="a01181.xhtml#a905616112e4df4fddf89d251f223d783">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::Copy</a></div><div class="ttdeci">void Copy(const ContainerProxy &amp;that)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:324</div></div>
<div class="ttc" id="a01181_xhtml_aa429030b9a6ddd9cec27704aa3286f27"><div class="ttname"><a href="a01181.xhtml#aa429030b9a6ddd9cec27704aa3286f27">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::ContainedType</a></div><div class="ttdeci">ObjectContainerImpl&lt; U &gt;::T_Ptr ContainedType</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:288</div></div>
<div class="ttc" id="a01169_xhtml_a29a2d807cd4c60d3e49ea0880471d873"><div class="ttname"><a href="a01169.xhtml#a29a2d807cd4c60d3e49ea0880471d873">Safir::Dob::Typesystem::ContainerProxy::IsChanged</a></div><div class="ttdeci">bool IsChanged() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:64</div></div>
<div class="ttc" id="a01185_xhtml_a1d76eecec717e05be4f97ca544a8aa2b"><div class="ttname"><a href="a01185.xhtml#a1d76eecec717e05be4f97ca544a8aa2b">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::SetChanged</a></div><div class="ttdeci">void SetChanged(const bool changed)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:364</div></div>
<div class="ttc" id="a01185_xhtml_a7d31e13db5568e1bf4b97acef43dd219"><div class="ttname"><a href="a01185.xhtml#a7d31e13db5568e1bf4b97acef43dd219">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::GetPtr</a></div><div class="ttdeci">const ContainedType &amp; GetPtr() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:371</div></div>
<div class="ttc" id="a01173_xhtml_a1c72292d68f1f5753eb8d1c084cff75e"><div class="ttname"><a href="a01173.xhtml#a1c72292d68f1f5753eb8d1c084cff75e">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::GetContainer</a></div><div class="ttdeci">const StringContainer &amp; GetContainer() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:213</div></div>
<div class="ttc" id="a01169_xhtml_a5216298f56091e9d5c1dce4afed3f329"><div class="ttname"><a href="a01169.xhtml#a5216298f56091e9d5c1dce4afed3f329">Safir::Dob::Typesystem::ContainerProxy::GetVal</a></div><div class="ttdeci">const ContainedType GetVal() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:70</div></div>
<div class="ttc" id="a01177_xhtml_aec07508f2a072e6d7a890a09715c522b"><div class="ttname"><a href="a01177.xhtml#aec07508f2a072e6d7a890a09715c522b">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::ContainerProxy</a></div><div class="ttdeci">ContainerProxy(BinaryContainer &amp;container)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:232</div></div>
<div class="ttc" id="a01173_xhtml_add420d991bd0b3552e26015e132bb82f"><div class="ttname"><a href="a01173.xhtml#add420d991bd0b3552e26015e132bb82f">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::IsNull</a></div><div class="ttdeci">bool IsNull() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:182</div></div>
<div class="ttc" id="a01177_xhtml_a2a46508fc40ac3b90c83c8bc91bc3b97"><div class="ttname"><a href="a01177.xhtml#a2a46508fc40ac3b90c83c8bc91bc3b97">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::GetContainer</a></div><div class="ttdeci">BinaryContainer &amp; GetContainer()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:273</div></div>
<div class="ttc" id="a01389_xhtml"><div class="ttname"><a href="a01389.xhtml">Safir::Dob::Typesystem::StringContainer</a></div><div class="ttdoc">Container for strings (std::wstring). </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:126</div></div>
<div class="ttc" id="a01173_xhtml_a02ddae09a934d52e4ee6657241cfebeb"><div class="ttname"><a href="a01173.xhtml#a02ddae09a934d52e4ee6657241cfebeb">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainedType &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:178</div></div>
<div class="ttc" id="a01169_xhtml_a9a15126fecfcb8e6acdbcb850cea0849"><div class="ttname"><a href="a01169.xhtml#a9a15126fecfcb8e6acdbcb850cea0849">Safir::Dob::Typesystem::ContainerProxy::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainedType other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:58</div></div>
<div class="ttc" id="a01169_xhtml"><div class="ttname"><a href="a01169.xhtml">Safir::Dob::Typesystem::ContainerProxy</a></div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:38</div></div>
<div class="ttc" id="a01181_xhtml_a4006c6132d5dc8b974ca967ea6cf5648"><div class="ttname"><a href="a01181.xhtml#a4006c6132d5dc8b974ca967ea6cf5648">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::IsChangedHere</a></div><div class="ttdeci">bool IsChangedHere() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:318</div></div>
<div class="ttc" id="a01249_xhtml"><div class="ttname"><a href="a01249.xhtml">Safir::Dob::Typesystem::HandlerId</a></div><div class="ttdoc">Class containing the identity of a handler. </div><div class="ttdef"><b>Definition:</b> HandlerId.h:45</div></div>
<div class="ttc" id="a01185_xhtml_a606f6ce905895495b05f18878e95b5f6"><div class="ttname"><a href="a01185.xhtml#a606f6ce905895495b05f18878e95b5f6">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::GetContainer</a></div><div class="ttdeci">const ObjectContainerImpl&lt; Object &gt; &amp; GetContainer() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:375</div></div>
<div class="ttc" id="a01177_xhtml_a5c58039a6cbfc20d64e845b101d855c3"><div class="ttname"><a href="a01177.xhtml#a5c58039a6cbfc20d64e845b101d855c3">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainedType &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:247</div></div>
<div class="ttc" id="a01169_xhtml_a98c77cfd23e28b337e670411f82d9d63"><div class="ttname"><a href="a01169.xhtml#a98c77cfd23e28b337e670411f82d9d63">Safir::Dob::Typesystem::ContainerProxy::operator+=</a></div><div class="ttdeci">ContainerProxy &amp; operator+=(const ContainedType &amp;val)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:106</div></div>
<div class="ttc" id="a01177_xhtml"><div class="ttname"><a href="a01177.xhtml">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;</a></div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:227</div></div>
<div class="ttc" id="a01181_xhtml_af93b905030c30d2aaeade34c290b60f3"><div class="ttname"><a href="a01181.xhtml#af93b905030c30d2aaeade34c290b60f3">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::SetChanged</a></div><div class="ttdeci">void SetChanged(const bool changed)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:315</div></div>
<div class="ttc" id="a01169_xhtml_aa7b4b36fe3a94f21407c91f9544521bf"><div class="ttname"><a href="a01169.xhtml#aa7b4b36fe3a94f21407c91f9544521bf">Safir::Dob::Typesystem::ContainerProxy::Copy</a></div><div class="ttdeci">void Copy(const ContainerProxy &amp;that)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:75</div></div>
<div class="ttc" id="a01181_xhtml_a121a5f3cdffb347799bbdedcf8535fd0"><div class="ttname"><a href="a01181.xhtml#a121a5f3cdffb347799bbdedcf8535fd0">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::GetContainer</a></div><div class="ttdeci">const ObjectContainerImpl&lt; U &gt; &amp; GetContainer() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:326</div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01169_xhtml_a00fc6eb9174514836cb4e77dba83e32c"><div class="ttname"><a href="a01169.xhtml#a00fc6eb9174514836cb4e77dba83e32c">Safir::Dob::Typesystem::ContainerProxy::IsNull</a></div><div class="ttdeci">bool IsNull() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:62</div></div>
<div class="ttc" id="a01169_xhtml_ae235fef7a97dfafc7091795c2f405194"><div class="ttname"><a href="a01169.xhtml#ae235fef7a97dfafc7091795c2f405194">Safir::Dob::Typesystem::ContainerProxy::operator/=</a></div><div class="ttdeci">ContainerProxy &amp; operator/=(const ContainedType &amp;val)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:124</div></div>
<div class="ttc" id="a01277_xhtml"><div class="ttname"><a href="a01277.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;</a></div><div class="ttdoc">This is a specialization of the ObjectContainerImpl template for the case where the template argument...</div><div class="ttdef"><b>Definition:</b> ObjectContainer.h:381</div></div>
<div class="ttc" id="a01173_xhtml_a15f7375d0e710b6810c26c5e18bf9856"><div class="ttname"><a href="a01173.xhtml#a15f7375d0e710b6810c26c5e18bf9856">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::Utf8String</a></div><div class="ttdeci">const std::string &amp; Utf8String() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:193</div></div>
<div class="ttc" id="a01173_xhtml_a15fa0145033a5a922317db72f4b449c8"><div class="ttname"><a href="a01173.xhtml#a15fa0145033a5a922317db72f4b449c8">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::GetVal</a></div><div class="ttdeci">const ContainedType &amp; GetVal() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:190</div></div>
<div class="ttc" id="a00176_xhtml"><div class="ttname"><a href="a00176.xhtml">ValueContainers.h</a></div></div>
<div class="ttc" id="a01169_xhtml_a7e5d89b0b1f33d1746b013357fb78826"><div class="ttname"><a href="a01169.xhtml#a7e5d89b0b1f33d1746b013357fb78826">Safir::Dob::Typesystem::ContainerProxy::operator-=</a></div><div class="ttdeci">ContainerProxy &amp; operator-=(const ContainedType &amp;val)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:112</div></div>
<div class="ttc" id="a01181_xhtml_a0eca8cb598ca81325f6035471dddaf01"><div class="ttname"><a href="a01181.xhtml#a0eca8cb598ca81325f6035471dddaf01">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::SetChangedHere</a></div><div class="ttdeci">void SetChangedHere(const bool changed)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:317</div></div>
<div class="ttc" id="a01205_xhtml"><div class="ttname"><a href="a01205.xhtml">Safir::Dob::Typesystem::EntityId</a></div><div class="ttdoc">Class containing the identity of an entity. </div><div class="ttdef"><b>Definition:</b> EntityId.h:42</div></div>
<div class="ttc" id="a01185_xhtml_a5ff9aa798534bd196ceb5aa76ef1de5a"><div class="ttname"><a href="a01185.xhtml#a5ff9aa798534bd196ceb5aa76ef1de5a">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::IsChangedHere</a></div><div class="ttdeci">bool IsChangedHere() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:367</div></div>
<div class="ttc" id="a01181_xhtml_a3852068a8ec05ec079a8185cbda20d6f"><div class="ttname"><a href="a01181.xhtml#a3852068a8ec05ec079a8185cbda20d6f">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::IsChanged</a></div><div class="ttdeci">bool IsChanged() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:314</div></div>
<div class="ttc" id="a01265_xhtml"><div class="ttname"><a href="a01265.xhtml">Safir::Dob::Typesystem::Object</a></div><div class="ttdoc">The base class for all DOB objects. </div><div class="ttdef"><b>Definition:</b> Object.h:54</div></div>
<div class="ttc" id="a01181_xhtml_a883a2ab8a0df6431e61bc5429bbeaf95"><div class="ttname"><a href="a01181.xhtml#a883a2ab8a0df6431e61bc5429bbeaf95">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::ContainerProxy</a></div><div class="ttdeci">ContainerProxy(ObjectContainerImpl&lt; U &gt; &amp;container)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:290</div></div>
<div class="ttc" id="a01393_xhtml"><div class="ttname"><a href="a01393.xhtml">Safir::Dob::Typesystem::BinaryContainer</a></div><div class="ttdoc">Container for Binary. </div><div class="ttdef"><b>Definition:</b> ValueContainers.h:256</div></div>
<div class="ttc" id="a00412_xhtml_aedeea7337c660d99602ff7e5283988ba"><div class="ttname"><a href="a00412.xhtml#aedeea7337c660d99602ff7e5283988ba">Safir::Dob::Typesystem::operator==</a></div><div class="ttdeci">static bool operator==(const ContainerProxy&lt; ChannelIdContainer &gt; &amp;first, const ChannelId &amp;second)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:136</div></div>
<div class="ttc" id="a01181_xhtml_ae482199d35f588783bcdfb9d8bc70e1a"><div class="ttname"><a href="a01181.xhtml#ae482199d35f588783bcdfb9d8bc70e1a">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::SetNull</a></div><div class="ttdeci">void SetNull()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:313</div></div>
<div class="ttc" id="a01185_xhtml_aa03837df68e52410f796b77927843a05"><div class="ttname"><a href="a01185.xhtml#aa03837df68e52410f796b77927843a05">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainerProxy &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:341</div></div>
<div class="ttc" id="a01177_xhtml_a73c234fdf59da7b2168c82899c932bdc"><div class="ttname"><a href="a01177.xhtml#a73c234fdf59da7b2168c82899c932bdc">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainerProxy &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:234</div></div>
<div class="ttc" id="a01173_xhtml"><div class="ttname"><a href="a01173.xhtml">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;</a></div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:158</div></div>
<div class="ttc" id="a01185_xhtml_ac830549a9e37be55cd400ecd5c5d6672"><div class="ttname"><a href="a01185.xhtml#ac830549a9e37be55cd400ecd5c5d6672">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::ContainedType</a></div><div class="ttdeci">ObjectContainerImpl&lt; Object &gt;::T_Ptr ContainedType</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:337</div></div>
<div class="ttc" id="a01173_xhtml_afcad4e6b57696489c27f5d94400a17a3"><div class="ttname"><a href="a01173.xhtml#afcad4e6b57696489c27f5d94400a17a3">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::Utf8StringLength</a></div><div class="ttdeci">Int32 Utf8StringLength() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:192</div></div>
<div class="ttc" id="a01177_xhtml_a2d550b976c866c76468c6b65d3176ec6"><div class="ttname"><a href="a01177.xhtml#a2d550b976c866c76468c6b65d3176ec6">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::IsNull</a></div><div class="ttdeci">bool IsNull() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:251</div></div>
<div class="ttc" id="a01273_xhtml"><div class="ttname"><a href="a01273.xhtml">Safir::Dob::Typesystem::ObjectContainerImpl</a></div><div class="ttdoc">Template class for all containers of automatically generated DOB objects. </div><div class="ttdef"><b>Definition:</b> ObjectContainer.h:185</div></div>
<div class="ttc" id="a01253_xhtml"><div class="ttname"><a href="a01253.xhtml">Safir::Dob::Typesystem::InstanceId</a></div><div class="ttdoc">Class containing the identity of an instance. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:48</div></div>
<div class="ttc" id="a00412_xhtml_a58f6f6fa78d3bc90c92677edce25fa22"><div class="ttname"><a href="a00412.xhtml#a58f6f6fa78d3bc90c92677edce25fa22">Safir::Dob::Typesystem::Binary</a></div><div class="ttdeci">std::vector&lt; char &gt; Binary</div><div class="ttdoc">A type to contain binary data. </div><div class="ttdef"><b>Definition:</b> Defs.h:299</div></div>
<div class="ttc" id="a01177_xhtml_a650b7136586d3aa9b1c28ad91519353e"><div class="ttname"><a href="a01177.xhtml#a650b7136586d3aa9b1c28ad91519353e">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::Copy</a></div><div class="ttdeci">void Copy(const ContainerProxy &amp;that)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:260</div></div>
<div class="ttc" id="a01393_xhtml_a885497118ab25abb1544731fd5e78880"><div class="ttname"><a href="a01393.xhtml#a885497118ab25abb1544731fd5e78880">Safir::Dob::Typesystem::BinaryContainer::ContainedType</a></div><div class="ttdeci">Binary ContainedType</div><div class="ttdef"><b>Definition:</b> ValueContainers.h:259</div></div>
<div class="ttc" id="a01181_xhtml_a679325b218ea4e0b16ceabc0fef79bb9"><div class="ttname"><a href="a01181.xhtml#a679325b218ea4e0b16ceabc0fef79bb9">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::GetPtr</a></div><div class="ttdeci">const ContainedType &amp; GetPtr() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:323</div></div>
<div class="ttc" id="a01173_xhtml_a52e726e08442a8cd9e294b1f4e2ddd78"><div class="ttname"><a href="a01173.xhtml#a52e726e08442a8cd9e294b1f4e2ddd78">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::Copy</a></div><div class="ttdeci">void Copy(const ContainerProxy &amp;that)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:195</div></div>
<div class="ttc" id="a01177_xhtml_a429052f1737c5e556949669deff7d1ef"><div class="ttname"><a href="a01177.xhtml#a429052f1737c5e556949669deff7d1ef">Safir::Dob::Typesystem::ContainerProxy&lt; BinaryContainer &gt;::GetContainer</a></div><div class="ttdeci">const BinaryContainer &amp; GetContainer() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:272</div></div>
<div class="ttc" id="a01169_xhtml_a02f473a7fb1bd430836aeed1fbafd542"><div class="ttname"><a href="a01169.xhtml#a02f473a7fb1bd430836aeed1fbafd542">Safir::Dob::Typesystem::ContainerProxy::operator*=</a></div><div class="ttdeci">ContainerProxy &amp; operator*=(const ContainedType &amp;val)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:118</div></div>
<div class="ttc" id="a00412_xhtml_ae11ede843efcf067a9327a9ef8b90b86"><div class="ttname"><a href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">Safir::Dob::Typesystem::ObjectPtr</a></div><div class="ttdeci">boost::shared_ptr&lt; Object &gt; ObjectPtr</div><div class="ttdoc">A smart pointer to an Object. </div><div class="ttdef"><b>Definition:</b> Object.h:41</div></div>
<div class="ttc" id="a01169_xhtml_a8000f9a390c21c04e2922da04d98a43b"><div class="ttname"><a href="a01169.xhtml#a8000f9a390c21c04e2922da04d98a43b">Safir::Dob::Typesystem::ContainerProxy::operator++</a></div><div class="ttdeci">ContainerProxy &amp; operator++()</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:77</div></div>
<div class="ttc" id="a00412_xhtml_a00d0cfa6b6bd63861a6bce433a0ce757"><div class="ttname"><a href="a00412.xhtml#a00d0cfa6b6bd63861a6bce433a0ce757">Safir::Dob::Typesystem::EnumerationValue</a></div><div class="ttdeci">DotsC_EnumerationValue EnumerationValue</div><div class="ttdoc">The ordinal value of an enumeration. </div><div class="ttdef"><b>Definition:</b> Defs.h:270</div></div>
<div class="ttc" id="a01169_xhtml_a0bf21fdc1fbe4d7ec5ef438dd985d971"><div class="ttname"><a href="a01169.xhtml#a0bf21fdc1fbe4d7ec5ef438dd985d971">Safir::Dob::Typesystem::ContainerProxy::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainerProxy &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:45</div></div>
<div class="ttc" id="a01169_xhtml_a43c32d7c0a3122e890e28f239b8503bb"><div class="ttname"><a href="a01169.xhtml#a43c32d7c0a3122e890e28f239b8503bb">Safir::Dob::Typesystem::ContainerProxy::SetOrdinal</a></div><div class="ttdeci">void SetOrdinal(const EnumerationValue value)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:72</div></div>
<div class="ttc" id="a01185_xhtml_a960a92cc222d1f41b7935ba13eb8de3b"><div class="ttname"><a href="a01185.xhtml#a960a92cc222d1f41b7935ba13eb8de3b">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::operator=</a></div><div class="ttdeci">ContainerProxy &amp; operator=(const ContainedType &amp;other)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:354</div></div>
<div class="ttc" id="a01181_xhtml_a42b68b12bb12d71c5ccb4b40084b47dc"><div class="ttname"><a href="a01181.xhtml#a42b68b12bb12d71c5ccb4b40084b47dc">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; U &gt; &gt;::SetPtr</a></div><div class="ttdeci">void SetPtr(const ContainedType &amp;ptr)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:320</div></div>
<div class="ttc" id="a00412_xhtml_a083ac47cfc95d012b55acc7887429cab"><div class="ttname"><a href="a00412.xhtml#a083ac47cfc95d012b55acc7887429cab">Safir::Dob::Typesystem::operator!=</a></div><div class="ttdeci">static bool operator!=(const ContainerProxy&lt; ChannelIdContainer &gt; &amp;first, const ChannelId &amp;second)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:138</div></div>
<div class="ttc" id="a01169_xhtml_a371bba23569b09db0ba22744dcdbb361"><div class="ttname"><a href="a01169.xhtml#a371bba23569b09db0ba22744dcdbb361">Safir::Dob::Typesystem::ContainerProxy::GetOrdinal</a></div><div class="ttdeci">EnumerationValue GetOrdinal() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:73</div></div>
<div class="ttc" id="a01169_xhtml_aee484c8b103392ebd8dd3587b5f6e3dc"><div class="ttname"><a href="a01169.xhtml#aee484c8b103392ebd8dd3587b5f6e3dc">Safir::Dob::Typesystem::ContainerProxy::ContainerProxy</a></div><div class="ttdeci">ContainerProxy(T &amp;container)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:43</div></div>
<div class="ttc" id="a01185_xhtml_a03061710e9c540f32dc67352ca203ac4"><div class="ttname"><a href="a01185.xhtml#a03061710e9c540f32dc67352ca203ac4">Safir::Dob::Typesystem::ContainerProxy&lt; ObjectContainerImpl&lt; Object &gt; &gt;::ContainerProxy</a></div><div class="ttdeci">ContainerProxy(ObjectContainerImpl&lt; Object &gt; &amp;container)</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:339</div></div>
<div class="ttc" id="a01173_xhtml_a54fb73dfbbb3a275379a2cdf4987f0ab"><div class="ttname"><a href="a01173.xhtml#a54fb73dfbbb3a275379a2cdf4987f0ab">Safir::Dob::Typesystem::ContainerProxy&lt; StringContainer &gt;::IsChanged</a></div><div class="ttdeci">bool IsChanged() const</div><div class="ttdef"><b>Definition:</b> ContainerProxies.h:184</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00104.xhtml">ContainerProxies.h</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:25 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
