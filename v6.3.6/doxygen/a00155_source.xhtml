<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/ToolSupport/BlobReader.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00155_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">BlobReader.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00155.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2004-2015 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Joel Ottosson / joot</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more Internals.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __DOTS_INTERNAL_BLOB_READER_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __DOTS_INTERNAL_BLOB_READER_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00167.xhtml">Safir/Dob/Typesystem/ToolSupport/TypeRepository.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/InternalDefs.h&gt;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;Safir/Dob/Typesystem/ToolSupport/Internal/Blob.h&gt;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="a00419.xhtml">   40</a></span>&#160;<span class="keyword">namespace </span>ToolSupport</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> RepositoryT, <span class="keyword">class</span> Traits=Safir::Dob::Typesystem::ToolSupport::TypeRepositoryTraits&lt;RepositoryT&gt; &gt;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="a01321.xhtml">   64</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01321.xhtml">BlobReader</a> : <span class="keyword">private</span> boost::noncopyable</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="a01321.xhtml#a28256dbae73a4ee77f42816b93673a86">   67</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::RepositoryType <a class="code" href="a01321.xhtml#a28256dbae73a4ee77f42816b93673a86">RepositoryType</a>;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="a01321.xhtml#a7afdce7b3429da2c4d36d7c38ed54339">   68</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::ClassDescriptionType <a class="code" href="a01321.xhtml#a7afdce7b3429da2c4d36d7c38ed54339">ClassDescriptionType</a>;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="a01321.xhtml#ada48492c0e3d549638f3e3c93ff2b838">   69</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::MemberDescriptionType <a class="code" href="a01321.xhtml#ada48492c0e3d549638f3e3c93ff2b838">MemberDescriptionType</a>;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="a01321.xhtml#adebb1acb099be149d8001c97eaccc979">   70</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::PropertyDescriptionType <a class="code" href="a01321.xhtml#adebb1acb099be149d8001c97eaccc979">PropertyDescriptionType</a>;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="a01321.xhtml#a4fcbd86b1b9389113e0cf5cca874bc5d">   71</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::ExceptionDescriptionType <a class="code" href="a01321.xhtml#a4fcbd86b1b9389113e0cf5cca874bc5d">ExceptionDescriptionType</a>;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="a01321.xhtml#ad9860649e71426cb00b3534f378dd01c">   72</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::ParameterDescriptionType <a class="code" href="a01321.xhtml#ad9860649e71426cb00b3534f378dd01c">ParameterDescriptionType</a>;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="a01321.xhtml#a5eabd4154a0a17fba848dca6605f097d">   73</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::EnumDescriptionType <a class="code" href="a01321.xhtml#a5eabd4154a0a17fba848dca6605f097d">EnumDescriptionType</a>;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="a01321.xhtml#ad5412f210439ac36d7df1de28f19969e">   74</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::MemberMappingDescriptionType <a class="code" href="a01321.xhtml#ad5412f210439ac36d7df1de28f19969e">MemberMappingDescriptionType</a>;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="a01321.xhtml#a746d0cd205cfc095c003cd2c8197d575">   75</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::PropertyMappingDescriptionType <a class="code" href="a01321.xhtml#a746d0cd205cfc095c003cd2c8197d575">PropertyMappingDescriptionType</a>;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="a01321.xhtml#a56a55fc537ab766ce6ea8a4258ff57e8">   76</a></span>&#160;        <span class="keyword">typedef</span> <span class="keyword">typename</span> Traits::CreateRoutineDescriptionType <a class="code" href="a01321.xhtml#a56a55fc537ab766ce6ea8a4258ff57e8">CreateRoutineDescriptionType</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="a01321.xhtml#af85bb461242e705bf6c43a133011325f">   83</a></span>&#160;        <span class="keyword">static</span> DotsC_Int32 <a class="code" href="a01321.xhtml#af85bb461242e705bf6c43a133011325f">GetSize</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* blob) {<span class="keywordflow">return</span> Internal::Blob::GetSize(blob);}</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="a01321.xhtml#a1d172be2b973519aca4ae0cd515d856b">   90</a></span>&#160;        <span class="keyword">static</span> DotsC_TypeId <a class="code" href="a01321.xhtml#a1d172be2b973519aca4ae0cd515d856b">GetTypeId</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* blob) {<span class="keywordflow">return</span> <a class="code" href="a00416.xhtml#aef42299b0702e8f4edcab47112786a00">Internal::Blob::GetTypeId</a>(blob);}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="a01321.xhtml#a25fb46b9e752b7d53420f8358f4f2ba0">   97</a></span>&#160;        <a class="code" href="a01321.xhtml#a25fb46b9e752b7d53420f8358f4f2ba0">BlobReader</a>(<span class="keyword">const</span> RepositoryT* rep, <span class="keyword">const</span> <span class="keywordtype">char</span>* blob)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            :m_repository(rep)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            ,m_blob(blob)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            ,m_classDescription(rep-&gt;GetClass(m_blob.<a class="code" href="a00412.xhtml#add598341f70c143ad35a701a65884214">TypeId</a>()))</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            ,m_memberDescription(NULL)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            ,m_memberIndex(-1)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="a01321.xhtml#a944390628b7982f1ebff32dea4ed29ca">  110</a></span>&#160;        DotsC_Int32 <a class="code" href="a01321.xhtml#a944390628b7982f1ebff32dea4ed29ca">Size</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_blob.Size();}</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="a01321.xhtml#a23b4e5d85abb2b18f99ba914217dc8c4">  116</a></span>&#160;        DotsC_TypeId <a class="code" href="a01321.xhtml#a23b4e5d85abb2b18f99ba914217dc8c4">TypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_blob.TypeId();}</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="a01321.xhtml#a880a4f4e6345fb2207e53cc58b1dd0fc">  128</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01321.xhtml#a880a4f4e6345fb2207e53cc58b1dd0fc">IsChangedTopLevel</a>(DotsC_MemberIndex member)<span class="keyword"> const</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">return</span> m_blob.IsChangedTopLevel(member);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="a01321.xhtml#acc9d9df3988f97326a5ae15d34312a84">  138</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01321.xhtml#acc9d9df3988f97326a5ae15d34312a84">IsChangedRecursive</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> member=0; member&lt;m_classDescription-&gt;GetNumberOfMembers(); ++member)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="a01321.xhtml#acc9d9df3988f97326a5ae15d34312a84">IsChangedRecursive</a>(member))</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="a01321.xhtml#a716606247bf60557d53aca16540fb69e">  155</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01321.xhtml#a716606247bf60557d53aca16540fb69e">IsChangedRecursive</a>(DotsC_MemberIndex member)<span class="keyword"> const</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            MoveToMember(member);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keyword">const</span> DotsC_CollectionType collectionType = m_memberDescription-&gt;GetCollectionType();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="comment">//Check top level change flag for things that have it.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">if</span> (collectionType == SequenceCollectionType || collectionType == DictionaryCollectionType)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="keywordflow">if</span> (m_blob.IsChangedTopLevel(member))</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> size = m_blob.NumberOfValues(member);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="comment">//sequences are a bit different from other members, since</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="comment">//they do not have change flags on the values. But they</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="comment">//do potentially have nestled change flags if it is a</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="comment">//sequence of objects.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">if</span> (collectionType == SequenceCollectionType)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                <span class="keywordflow">if</span> (m_memberDescription-&gt;GetMemberType() == ObjectMemberType)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> index = 0; index &lt; size; ++index)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                        <span class="keywordtype">bool</span> dummy=<span class="keyword">false</span>, isNull=<span class="keyword">false</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                        m_blob.ValueStatus(member, index, isNull, dummy);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                        <span class="keywordflow">if</span> (!isNull)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                        {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                            std::pair&lt;const char*, DotsC_Int32&gt; obj=m_blob.GetValueBinary(member, index);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                            <span class="keyword">const</span> <a class="code" href="a01321.xhtml">BlobReader</a> inner(m_repository, obj.first);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                            <span class="keywordflow">if</span> (inner.<a class="code" href="a01321.xhtml#acc9d9df3988f97326a5ae15d34312a84">IsChangedRecursive</a>())</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                            {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                            }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                        }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    }</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            {</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="comment">//first check all the change flags that are directly in the member</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> index = 0; index &lt; size; ++index)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="a01321.xhtml#aebb4de799e757879379a71c44351611b">IsChangedHere</a>(member, index))</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                    {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                    }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="comment">//ok, if there are objects in here we need to recurse</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="keywordflow">if</span> (m_memberDescription-&gt;GetMemberType() == ObjectMemberType)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> index = 0; index &lt; size; ++index)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                    {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        <span class="keywordtype">bool</span> dummy=<span class="keyword">false</span>, isNull=<span class="keyword">false</span>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                        m_blob.ValueStatus(member, index, isNull, dummy);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        <span class="keywordflow">if</span> (!isNull)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                            std::pair&lt;const char*, DotsC_Int32&gt; obj=m_blob.GetValueBinary(member, index);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                            <span class="keyword">const</span> <a class="code" href="a01321.xhtml">BlobReader</a> inner(m_repository, obj.first);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                            <span class="keywordflow">if</span> (inner.<a class="code" href="a01321.xhtml#acc9d9df3988f97326a5ae15d34312a84">IsChangedRecursive</a>())</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                            {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                            }</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                        }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            }</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="comment">//no changes...</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        }</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="a01321.xhtml#aebb4de799e757879379a71c44351611b">  239</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01321.xhtml#aebb4de799e757879379a71c44351611b">IsChangedHere</a>(DotsC_MemberIndex member,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                           DotsC_Int32 index)<span class="keyword"> const</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">#ifndef NDEBUG</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            MoveToMember(member);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            assert(m_memberDescription-&gt;GetCollectionType() != SequenceCollectionType);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="comment">//array index is asserted in Blob.cpp</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keywordflow">return</span> m_blob.IsChangedHere(member,index);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="a01321.xhtml#a802813d36b851325309cbde72e806ed7">  256</a></span>&#160;        <span class="keywordtype">int</span> <a class="code" href="a01321.xhtml#a802813d36b851325309cbde72e806ed7">NumberOfValues</a>(DotsC_MemberIndex member)<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_blob.NumberOfValues(member);}</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="a01321.xhtml#a27ee4d102cfb2f6040ef1dc439779a67">  265</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01321.xhtml#a27ee4d102cfb2f6040ef1dc439779a67">ReadStatus</a>(DotsC_MemberIndex member, <span class="keywordtype">int</span> valueIndex, <span class="keywordtype">bool</span>&amp; isNull, <span class="keywordtype">bool</span>&amp; isChanged)<span class="keyword"> const</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            MoveToMember(member);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            m_blob.ValueStatus(member, valueIndex, isNull, isChanged);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        }</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> Key&gt;</div><div class="line"><a name="l00280"></a><span class="lineno"><a class="line" href="a01321.xhtml#a5c0690e76f495dc7a82c5b946a550f57">  280</a></span>&#160;        Key <a class="code" href="a01321.xhtml#a5c0690e76f495dc7a82c5b946a550f57">ReadKey</a>(DotsC_MemberIndex member, <span class="keywordtype">int</span> valueIndex)<span class="keyword"> const</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            MoveToMember(member);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">if</span> (m_memberDescription-&gt;GetCollectionType()!=DictionaryCollectionType)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                ThrowWrongCollectionType();</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            }</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="keywordflow">return</span> Internal::BlobUtils::Reader&lt;Key&gt;::Key(m_blob, member, valueIndex);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> Val&gt;</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="a01321.xhtml#acf345331ef1d0f575b0fc07e099fcfbc">  300</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01321.xhtml#acf345331ef1d0f575b0fc07e099fcfbc">ReadValue</a>(DotsC_MemberIndex member, <span class="keywordtype">int</span> valueIndex, Val&amp; val, <span class="keywordtype">bool</span>&amp; isNull, <span class="keywordtype">bool</span>&amp; isChanged)<span class="keyword"> const</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            MoveToMember(member);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            m_blob.ValueStatus(member, valueIndex, isNull, isChanged);</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">if</span> (!isNull)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                val=Internal::BlobUtils::Reader&lt;Val&gt;::Value(m_blob, member, valueIndex);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keyword">const</span> RepositoryType* m_repository;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        Safir::Dob::Typesystem::ToolSupport::Internal::Blob m_blob;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keyword">const</span> ClassDescriptionType* m_classDescription;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keyword">mutable</span> <span class="keyword">const</span> MemberDescriptionType* m_memberDescription;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keyword">mutable</span> DotsC_MemberIndex m_memberIndex;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">void</span> MoveToMember(DotsC_MemberIndex member)<span class="keyword"> const</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="keywordflow">if</span> (m_memberIndex!=member)</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            {</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                m_memberDescription=m_classDescription-&gt;GetMember(member);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                m_memberIndex=member;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            }</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        }</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keyword">inline</span> <span class="keywordtype">void</span> ThrowWrongCollectionType()<span class="keyword"> const</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            std::ostringstream os;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            os&lt;&lt;<span class="stringliteral">&quot;Trying to write data of wrong collection type to a blob for member &#39;&quot;</span>&lt;&lt;m_memberDescription-&gt;GetName()&lt;&lt;<span class="stringliteral">&quot;&#39; in class &#39;&quot;</span>&lt;&lt;m_classDescription-&gt;GetName()&lt;&lt;<span class="stringliteral">&quot;&#39;&quot;</span>;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            <span class="keywordflow">throw</span> std::logic_error(os.str());</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="a01321.xhtml#a7380d894e54192bf530e960762481697">  333</a></span>&#160;        <span class="keyword">friend</span> <span class="keyword">struct </span><a class="code" href="a01321.xhtml#a7380d894e54192bf530e960762481697">Internal::BlobUtils::BlobAccess</a>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    };</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;}</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;} <span class="comment">//end namespace Safir::Dob::Typesystem::ToolSupport</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="a00167_xhtml"><div class="ttname"><a href="a00167.xhtml">TypeRepository.h</a></div></div>
<div class="ttc" id="a01321_xhtml_a5eabd4154a0a17fba848dca6605f097d"><div class="ttname"><a href="a01321.xhtml#a5eabd4154a0a17fba848dca6605f097d">Safir::Dob::Typesystem::ToolSupport::BlobReader::EnumDescriptionType</a></div><div class="ttdeci">Traits::EnumDescriptionType EnumDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:73</div></div>
<div class="ttc" id="a01321_xhtml"><div class="ttname"><a href="a01321.xhtml">Safir::Dob::Typesystem::ToolSupport::BlobReader</a></div><div class="ttdoc">This class is used to unpack and read blobs created by the BlobWriter class. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:64</div></div>
<div class="ttc" id="a01321_xhtml_a56a55fc537ab766ce6ea8a4258ff57e8"><div class="ttname"><a href="a01321.xhtml#a56a55fc537ab766ce6ea8a4258ff57e8">Safir::Dob::Typesystem::ToolSupport::BlobReader::CreateRoutineDescriptionType</a></div><div class="ttdeci">Traits::CreateRoutineDescriptionType CreateRoutineDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:76</div></div>
<div class="ttc" id="a01321_xhtml_a4fcbd86b1b9389113e0cf5cca874bc5d"><div class="ttname"><a href="a01321.xhtml#a4fcbd86b1b9389113e0cf5cca874bc5d">Safir::Dob::Typesystem::ToolSupport::BlobReader::ExceptionDescriptionType</a></div><div class="ttdeci">Traits::ExceptionDescriptionType ExceptionDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:71</div></div>
<div class="ttc" id="a01321_xhtml_adebb1acb099be149d8001c97eaccc979"><div class="ttname"><a href="a01321.xhtml#adebb1acb099be149d8001c97eaccc979">Safir::Dob::Typesystem::ToolSupport::BlobReader::PropertyDescriptionType</a></div><div class="ttdeci">Traits::PropertyDescriptionType PropertyDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:70</div></div>
<div class="ttc" id="a01321_xhtml_a1d172be2b973519aca4ae0cd515d856b"><div class="ttname"><a href="a01321.xhtml#a1d172be2b973519aca4ae0cd515d856b">Safir::Dob::Typesystem::ToolSupport::BlobReader::GetTypeId</a></div><div class="ttdeci">static DotsC_TypeId GetTypeId(const char *blob)</div><div class="ttdoc">Static method. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:90</div></div>
<div class="ttc" id="a01321_xhtml_a7380d894e54192bf530e960762481697"><div class="ttname"><a href="a01321.xhtml#a7380d894e54192bf530e960762481697">Safir::Dob::Typesystem::ToolSupport::BlobReader::BlobAccess</a></div><div class="ttdeci">friend struct Internal::BlobUtils::BlobAccess</div><div class="ttdef"><b>Definition:</b> BlobReader.h:333</div></div>
<div class="ttc" id="a01321_xhtml_a28256dbae73a4ee77f42816b93673a86"><div class="ttname"><a href="a01321.xhtml#a28256dbae73a4ee77f42816b93673a86">Safir::Dob::Typesystem::ToolSupport::BlobReader::RepositoryType</a></div><div class="ttdeci">Traits::RepositoryType RepositoryType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:67</div></div>
<div class="ttc" id="a00416_xhtml_aef42299b0702e8f4edcab47112786a00"><div class="ttname"><a href="a00416.xhtml#aef42299b0702e8f4edcab47112786a00">Safir::Dob::Typesystem::Members::GetTypeId</a></div><div class="ttdeci">DOTS_CPP_API Dob::Typesystem::TypeId GetTypeId(const Dob::Typesystem::TypeId typeId, const Dob::Typesystem::MemberIndex member)</div><div class="ttdoc">Get type id of object or enumeration member. </div></div>
<div class="ttc" id="a01321_xhtml_ad9860649e71426cb00b3534f378dd01c"><div class="ttname"><a href="a01321.xhtml#ad9860649e71426cb00b3534f378dd01c">Safir::Dob::Typesystem::ToolSupport::BlobReader::ParameterDescriptionType</a></div><div class="ttdeci">Traits::ParameterDescriptionType ParameterDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:72</div></div>
<div class="ttc" id="a00412_xhtml_add598341f70c143ad35a701a65884214"><div class="ttname"><a href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a></div><div class="ttdeci">DotsC_TypeId TypeId</div><div class="ttdoc">A unique type identifier. </div><div class="ttdef"><b>Definition:</b> Defs.h:218</div></div>
<div class="ttc" id="a01321_xhtml_aebb4de799e757879379a71c44351611b"><div class="ttname"><a href="a01321.xhtml#aebb4de799e757879379a71c44351611b">Safir::Dob::Typesystem::ToolSupport::BlobReader::IsChangedHere</a></div><div class="ttdeci">bool IsChangedHere(DotsC_MemberIndex member, DotsC_Int32 index) const</div><div class="ttdoc">Check change flag on a member (non-recursively) </div><div class="ttdef"><b>Definition:</b> BlobReader.h:239</div></div>
<div class="ttc" id="a01321_xhtml_a746d0cd205cfc095c003cd2c8197d575"><div class="ttname"><a href="a01321.xhtml#a746d0cd205cfc095c003cd2c8197d575">Safir::Dob::Typesystem::ToolSupport::BlobReader::PropertyMappingDescriptionType</a></div><div class="ttdeci">Traits::PropertyMappingDescriptionType PropertyMappingDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:75</div></div>
<div class="ttc" id="a01321_xhtml_ad5412f210439ac36d7df1de28f19969e"><div class="ttname"><a href="a01321.xhtml#ad5412f210439ac36d7df1de28f19969e">Safir::Dob::Typesystem::ToolSupport::BlobReader::MemberMappingDescriptionType</a></div><div class="ttdeci">Traits::MemberMappingDescriptionType MemberMappingDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:74</div></div>
<div class="ttc" id="a01321_xhtml_ada48492c0e3d549638f3e3c93ff2b838"><div class="ttname"><a href="a01321.xhtml#ada48492c0e3d549638f3e3c93ff2b838">Safir::Dob::Typesystem::ToolSupport::BlobReader::MemberDescriptionType</a></div><div class="ttdeci">Traits::MemberDescriptionType MemberDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:69</div></div>
<div class="ttc" id="a01321_xhtml_a27ee4d102cfb2f6040ef1dc439779a67"><div class="ttname"><a href="a01321.xhtml#a27ee4d102cfb2f6040ef1dc439779a67">Safir::Dob::Typesystem::ToolSupport::BlobReader::ReadStatus</a></div><div class="ttdeci">void ReadStatus(DotsC_MemberIndex member, int valueIndex, bool &amp;isNull, bool &amp;isChanged) const</div><div class="ttdoc">Convenience method for checking if a member is null. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:265</div></div>
<div class="ttc" id="a01321_xhtml_af85bb461242e705bf6c43a133011325f"><div class="ttname"><a href="a01321.xhtml#af85bb461242e705bf6c43a133011325f">Safir::Dob::Typesystem::ToolSupport::BlobReader::GetSize</a></div><div class="ttdeci">static DotsC_Int32 GetSize(const char *blob)</div><div class="ttdoc">Static method. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:83</div></div>
<div class="ttc" id="a01321_xhtml_a802813d36b851325309cbde72e806ed7"><div class="ttname"><a href="a01321.xhtml#a802813d36b851325309cbde72e806ed7">Safir::Dob::Typesystem::ToolSupport::BlobReader::NumberOfValues</a></div><div class="ttdeci">int NumberOfValues(DotsC_MemberIndex member) const</div><div class="ttdoc">Get the number of values for the member. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:256</div></div>
<div class="ttc" id="a01321_xhtml_a23b4e5d85abb2b18f99ba914217dc8c4"><div class="ttname"><a href="a01321.xhtml#a23b4e5d85abb2b18f99ba914217dc8c4">Safir::Dob::Typesystem::ToolSupport::BlobReader::TypeId</a></div><div class="ttdeci">DotsC_TypeId TypeId() const</div><div class="ttdoc">Get the type id of the blob. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:116</div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01321_xhtml_a5c0690e76f495dc7a82c5b946a550f57"><div class="ttname"><a href="a01321.xhtml#a5c0690e76f495dc7a82c5b946a550f57">Safir::Dob::Typesystem::ToolSupport::BlobReader::ReadKey</a></div><div class="ttdeci">Key ReadKey(DotsC_MemberIndex member, int valueIndex) const</div><div class="ttdoc">Reads the key element of a member value. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:280</div></div>
<div class="ttc" id="a01321_xhtml_acc9d9df3988f97326a5ae15d34312a84"><div class="ttname"><a href="a01321.xhtml#acc9d9df3988f97326a5ae15d34312a84">Safir::Dob::Typesystem::ToolSupport::BlobReader::IsChangedRecursive</a></div><div class="ttdeci">bool IsChangedRecursive() const</div><div class="ttdoc">Check change flags on all members, recursively. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:138</div></div>
<div class="ttc" id="a01321_xhtml_a716606247bf60557d53aca16540fb69e"><div class="ttname"><a href="a01321.xhtml#a716606247bf60557d53aca16540fb69e">Safir::Dob::Typesystem::ToolSupport::BlobReader::IsChangedRecursive</a></div><div class="ttdeci">bool IsChangedRecursive(DotsC_MemberIndex member) const</div><div class="ttdoc">Check change flag on a member, recursively. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:155</div></div>
<div class="ttc" id="a01321_xhtml_acf345331ef1d0f575b0fc07e099fcfbc"><div class="ttname"><a href="a01321.xhtml#acf345331ef1d0f575b0fc07e099fcfbc">Safir::Dob::Typesystem::ToolSupport::BlobReader::ReadValue</a></div><div class="ttdeci">void ReadValue(DotsC_MemberIndex member, int valueIndex, Val &amp;val, bool &amp;isNull, bool &amp;isChanged) const</div><div class="ttdoc">Read the value element of a member value. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:300</div></div>
<div class="ttc" id="a01321_xhtml_a944390628b7982f1ebff32dea4ed29ca"><div class="ttname"><a href="a01321.xhtml#a944390628b7982f1ebff32dea4ed29ca">Safir::Dob::Typesystem::ToolSupport::BlobReader::Size</a></div><div class="ttdeci">DotsC_Int32 Size() const</div><div class="ttdoc">Get the size of the blob. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:110</div></div>
<div class="ttc" id="a01321_xhtml_a880a4f4e6345fb2207e53cc58b1dd0fc"><div class="ttname"><a href="a01321.xhtml#a880a4f4e6345fb2207e53cc58b1dd0fc">Safir::Dob::Typesystem::ToolSupport::BlobReader::IsChangedTopLevel</a></div><div class="ttdeci">bool IsChangedTopLevel(DotsC_MemberIndex member) const</div><div class="ttdoc">Check if the member is changed at top level. </div><div class="ttdef"><b>Definition:</b> BlobReader.h:128</div></div>
<div class="ttc" id="a01321_xhtml_a25fb46b9e752b7d53420f8358f4f2ba0"><div class="ttname"><a href="a01321.xhtml#a25fb46b9e752b7d53420f8358f4f2ba0">Safir::Dob::Typesystem::ToolSupport::BlobReader::BlobReader</a></div><div class="ttdeci">BlobReader(const RepositoryT *rep, const char *blob)</div><div class="ttdoc">Constructor - Creates a reader object that unpacks the blob and makes it possible to read its content...</div><div class="ttdef"><b>Definition:</b> BlobReader.h:97</div></div>
<div class="ttc" id="a01321_xhtml_a7afdce7b3429da2c4d36d7c38ed54339"><div class="ttname"><a href="a01321.xhtml#a7afdce7b3429da2c4d36d7c38ed54339">Safir::Dob::Typesystem::ToolSupport::BlobReader::ClassDescriptionType</a></div><div class="ttdeci">Traits::ClassDescriptionType ClassDescriptionType</div><div class="ttdef"><b>Definition:</b> BlobReader.h:68</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="dir_c1e123044e1c88c7836b2cb3c74b5ad2.xhtml">ToolSupport</a></li><li class="navelem"><a class="el" href="a00155.xhtml">BlobReader.h</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:25 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
