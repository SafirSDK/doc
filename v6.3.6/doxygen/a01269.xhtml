<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::ObjectContainerBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a01269.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="a01266.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Safir::Dob::Typesystem::ObjectContainerBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for all object containers.  
 <a href="a01269.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00134_source.xhtml">Safir/Dob/Typesystem/ObjectContainer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::ObjectContainerBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01268.svg" width="990" height="440"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::ObjectContainerBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01267.svg" width="170" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abc5fe23aedb525d8f000252ea5d0509d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#abc5fe23aedb525d8f000252ea5d0509d">ObjectContainerBase</a> ()</td></tr>
<tr class="memdesc:abc5fe23aedb525d8f000252ea5d0509d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#abc5fe23aedb525d8f000252ea5d0509d">More...</a><br /></td></tr>
<tr class="separator:abc5fe23aedb525d8f000252ea5d0509d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaf4f8923a5b2ed23b84ddfd5109b487"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#adaf4f8923a5b2ed23b84ddfd5109b487">SetPtr</a> (const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> &amp;ptr)=0</td></tr>
<tr class="memdesc:adaf4f8923a5b2ed23b84ddfd5109b487"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the smart pointer in the container.  <a href="#adaf4f8923a5b2ed23b84ddfd5109b487">More...</a><br /></td></tr>
<tr class="separator:adaf4f8923a5b2ed23b84ddfd5109b487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5f9fb5ad7450f32ee51b70115bce80a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#aa5f9fb5ad7450f32ee51b70115bce80a">IsChangedHere</a> () const</td></tr>
<tr class="memdesc:aa5f9fb5ad7450f32ee51b70115bce80a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the change flag in the container set?  <a href="#aa5f9fb5ad7450f32ee51b70115bce80a">More...</a><br /></td></tr>
<tr class="separator:aa5f9fb5ad7450f32ee51b70115bce80a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0074de7f0f6b89d6f8806d33a9792b4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#a0074de7f0f6b89d6f8806d33a9792b4b">SetChangedHere</a> (const bool changed)</td></tr>
<tr class="memdesc:a0074de7f0f6b89d6f8806d33a9792b4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the change flag in the container.  <a href="#a0074de7f0f6b89d6f8806d33a9792b4b">More...</a><br /></td></tr>
<tr class="separator:a0074de7f0f6b89d6f8806d33a9792b4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Reflection part.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These methods allow applications to manipulate the members of objects without having been compiled against it.</p>
<p>There should be no reason for most applications to use these methods. </p>
</div></td></tr>
<tr class="memitem:a506e37a681f1fad522d34e1f5df2c331"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a01165.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#a506e37a681f1fad522d34e1f5df2c331">GetMember</a> (const int member, const int index)=0</td></tr>
<tr class="memdesc:a506e37a681f1fad522d34e1f5df2c331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <a href="#a506e37a681f1fad522d34e1f5df2c331">More...</a><br /></td></tr>
<tr class="separator:a506e37a681f1fad522d34e1f5df2c331"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad794e6e9fc672ef0ffcf6e0eef8d5616"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a01165.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#ad794e6e9fc672ef0ffcf6e0eef8d5616">GetMember</a> (const int member, const int index) const =0</td></tr>
<tr class="memdesc:ad794e6e9fc672ef0ffcf6e0eef8d5616"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <a href="#ad794e6e9fc672ef0ffcf6e0eef8d5616">More...</a><br /></td></tr>
<tr class="separator:ad794e6e9fc672ef0ffcf6e0eef8d5616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5ad8977290cb7057106eead21a27ea6"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#aa5ad8977290cb7057106eead21a27ea6">GetObjectPointer</a> () const =0</td></tr>
<tr class="memdesc:aa5ad8977290cb7057106eead21a27ea6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a smart pointer to the contained object.  <a href="#aa5ad8977290cb7057106eead21a27ea6">More...</a><br /></td></tr>
<tr class="separator:aa5ad8977290cb7057106eead21a27ea6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8609b609d6b921d80468886cb641c0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#aff8609b609d6b921d80468886cb641c0">SetObjectPointer</a> (const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> ptr)=0</td></tr>
<tr class="memdesc:aff8609b609d6b921d80468886cb641c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the smart pointer in the container.  <a href="#aff8609b609d6b921d80468886cb641c0">More...</a><br /></td></tr>
<tr class="separator:aff8609b609d6b921d80468886cb641c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d83f3e64d6e7e4ab5bc95ce25ed677a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#a6d83f3e64d6e7e4ab5bc95ce25ed677a">ResetObjectPointer</a> ()=0</td></tr>
<tr class="memdesc:a6d83f3e64d6e7e4ab5bc95ce25ed677a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset (ie set to null) the contained pointer.  <a href="#a6d83f3e64d6e7e4ab5bc95ce25ed677a">More...</a><br /></td></tr>
<tr class="separator:a6d83f3e64d6e7e4ab5bc95ce25ed677a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01165"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01165')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a01165"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#aae0d1c859bb1addcd8abbe3353696192">ContainerBase</a> ()</td></tr>
<tr class="memdesc:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="a01165.xhtml#aae0d1c859bb1addcd8abbe3353696192">More...</a><br /></td></tr>
<tr class="separator:aae0d1c859bb1addcd8abbe3353696192 inherit pub_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a01165"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#adcc120535ba864a170f3f2b3cb7f03b5">~ContainerBase</a> ()</td></tr>
<tr class="memdesc:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="a01165.xhtml#adcc120535ba864a170f3f2b3cb7f03b5">More...</a><br /></td></tr>
<tr class="separator:adcc120535ba864a170f3f2b3cb7f03b5 inherit pub_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad263469929db9104b47aab4eb19ecacd inherit pub_methods_a01165"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#ad263469929db9104b47aab4eb19ecacd">IsNull</a> () const =0</td></tr>
<tr class="memdesc:ad263469929db9104b47aab4eb19ecacd inherit pub_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the container set to null?  <a href="a01165.xhtml#ad263469929db9104b47aab4eb19ecacd">More...</a><br /></td></tr>
<tr class="separator:ad263469929db9104b47aab4eb19ecacd inherit pub_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b07a1d91572b107f8a51c5a82ffa38 inherit pub_methods_a01165"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#a12b07a1d91572b107f8a51c5a82ffa38">SetNull</a> ()=0</td></tr>
<tr class="memdesc:a12b07a1d91572b107f8a51c5a82ffa38 inherit pub_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the container to null.  <a href="a01165.xhtml#a12b07a1d91572b107f8a51c5a82ffa38">More...</a><br /></td></tr>
<tr class="separator:a12b07a1d91572b107f8a51c5a82ffa38 inherit pub_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a1b52624a8f2a163c5ecec102253059 inherit pub_methods_a01165"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#a9a1b52624a8f2a163c5ecec102253059">IsChanged</a> () const</td></tr>
<tr class="memdesc:a9a1b52624a8f2a163c5ecec102253059 inherit pub_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the change flag set on the container?  <a href="a01165.xhtml#a9a1b52624a8f2a163c5ecec102253059">More...</a><br /></td></tr>
<tr class="separator:a9a1b52624a8f2a163c5ecec102253059 inherit pub_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5024cbf12afcd9670026e4ec5eb693f6 inherit pub_methods_a01165"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#a5024cbf12afcd9670026e4ec5eb693f6">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:a5024cbf12afcd9670026e4ec5eb693f6 inherit pub_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the containers change flag.  <a href="a01165.xhtml#a5024cbf12afcd9670026e4ec5eb693f6">More...</a><br /></td></tr>
<tr class="separator:a5024cbf12afcd9670026e4ec5eb693f6 inherit pub_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73ae69ffda7fa99f78eb73a85df8defa inherit pub_methods_a01165"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#a73ae69ffda7fa99f78eb73a85df8defa">Copy</a> (const <a class="el" href="a01165.xhtml">ContainerBase</a> &amp;that)=0</td></tr>
<tr class="memdesc:a73ae69ffda7fa99f78eb73a85df8defa inherit pub_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual assignment.  <a href="a01165.xhtml#a73ae69ffda7fa99f78eb73a85df8defa">More...</a><br /></td></tr>
<tr class="separator:a73ae69ffda7fa99f78eb73a85df8defa inherit pub_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a47111cc7ff14bea90714f225e3bd2739"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01269.xhtml">ObjectContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#a47111cc7ff14bea90714f225e3bd2739">operator=</a> (const <a class="el" href="a01269.xhtml">ObjectContainerBase</a> &amp;other)</td></tr>
<tr class="memdesc:a47111cc7ff14bea90714f225e3bd2739"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="#a47111cc7ff14bea90714f225e3bd2739">More...</a><br /></td></tr>
<tr class="separator:a47111cc7ff14bea90714f225e3bd2739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_a01165"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_a01165')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a01165"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01165.xhtml">ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#a8c85f18095c92aeaa5283c18bac44d83">operator=</a> (const <a class="el" href="a01165.xhtml">ContainerBase</a> &amp;other)</td></tr>
<tr class="memdesc:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="a01165.xhtml#a8c85f18095c92aeaa5283c18bac44d83">More...</a><br /></td></tr>
<tr class="separator:a8c85f18095c92aeaa5283c18bac44d83 inherit pro_methods_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a822ad29b4a74d37a0127679ff6cd550c"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01269.xhtml#a822ad29b4a74d37a0127679ff6cd550c">Safir::Dob::Typesystem::Internal::BlobOperations</a></td></tr>
<tr class="separator:a822ad29b4a74d37a0127679ff6cd550c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_a01165"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_a01165')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="a01165.xhtml">Safir::Dob::Typesystem::ContainerBase</a></td></tr>
<tr class="memitem:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a01165"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">m_bIsChanged</a></td></tr>
<tr class="memdesc:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a01165"><td class="mdescLeft">&#160;</td><td class="mdescRight">The variable containing the change flag.  <a href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">More...</a><br /></td></tr>
<tr class="separator:a4257d6efb8b17e914896bf4ee9b1d7b8 inherit pro_attribs_a01165"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Base class for all object containers. </p>
<p>The reason for the existence of this class is that code that uses the reflection functionality must be able to get hold of members of items. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abc5fe23aedb525d8f000252ea5d0509d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc5fe23aedb525d8f000252ea5d0509d">&sect;&nbsp;</a></span>ObjectContainerBase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::Typesystem::ObjectContainerBase::ObjectContainerBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

<p>References <a class="el" href="a01269.xhtml#adaf4f8923a5b2ed23b84ddfd5109b487">SetPtr()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_abc5fe23aedb525d8f000252ea5d0509d_cgraph.svg" width="376" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a506e37a681f1fad522d34e1f5df2c331"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a506e37a681f1fad522d34e1f5df2c331">&sect;&nbsp;</a></span>GetMember() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a01165.xhtml">ContainerBase</a>&amp; Safir::Dob::Typesystem::ObjectContainerBase::GetMember </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a reference to a member container from an object. </p>
<p>Use the methods in <a class="el" href="a00416.xhtml" title="Functions for getting member information from types. ">Members</a> to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname"><a class="el" href="a01237.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="a01277.xhtml#ad193042f968e3ae523eb85a5e33dabcf">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;</a>, <a class="el" href="a01273.xhtml#a3cac7cb91b4900dfcde94c71db6eae99">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;</a>, <a class="el" href="a01273.xhtml#a3cac7cb91b4900dfcde94c71db6eae99">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Safir::Dob::Typesystem::Object &gt;</a>, <a class="el" href="a01273.xhtml#a3cac7cb91b4900dfcde94c71db6eae99">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Entity &gt;</a>, <a class="el" href="a01273.xhtml#a3cac7cb91b4900dfcde94c71db6eae99">Safir::Dob::Typesystem::ObjectContainerImpl&lt; U &gt;</a>, and <a class="el" href="a01273.xhtml#a3cac7cb91b4900dfcde94c71db6eae99">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;</a>.</p>

<p>Referenced by <a class="el" href="a01269.xhtml#a0074de7f0f6b89d6f8806d33a9792b4b">SetChangedHere()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_a506e37a681f1fad522d34e1f5df2c331_icgraph.svg" width="376" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ad794e6e9fc672ef0ffcf6e0eef8d5616"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad794e6e9fc672ef0ffcf6e0eef8d5616">&sect;&nbsp;</a></span>GetMember() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a01165.xhtml">ContainerBase</a>&amp; Safir::Dob::Typesystem::ObjectContainerBase::GetMember </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a const reference to a member container from an object. </p>
<p>Use the methods in <a class="el" href="a00416.xhtml" title="Functions for getting member information from types. ">Members</a> to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A const reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01225.xhtml" title="A parameter in the call was invalid. ">IllegalValueException</a></td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname"><a class="el" href="a01237.xhtml" title="Meant to be used when something goes very wrong. ">SoftwareViolationException</a></td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="a01277.xhtml#a58b0a34a4627c5df1f78408858db11d6">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;</a>, <a class="el" href="a01273.xhtml#a66080198232fb02be55fae4bbc0d7041">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;</a>, <a class="el" href="a01273.xhtml#a66080198232fb02be55fae4bbc0d7041">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Safir::Dob::Typesystem::Object &gt;</a>, <a class="el" href="a01273.xhtml#a66080198232fb02be55fae4bbc0d7041">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Entity &gt;</a>, <a class="el" href="a01273.xhtml#a66080198232fb02be55fae4bbc0d7041">Safir::Dob::Typesystem::ObjectContainerImpl&lt; U &gt;</a>, and <a class="el" href="a01273.xhtml#a66080198232fb02be55fae4bbc0d7041">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;</a>.</p>

</div>
</div>
<a id="aa5ad8977290cb7057106eead21a27ea6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5ad8977290cb7057106eead21a27ea6">&sect;&nbsp;</a></span>GetObjectPointer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> Safir::Dob::Typesystem::ObjectContainerBase::GetObjectPointer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a smart pointer to the contained object. </p>
<p>This method will cast the smart object pointer to the derived type contained by the container to a smart pointer to an <a class="el" href="a01265.xhtml" title="The base class for all DOB objects. ">Object</a> (the DOB object base class.</p>
<p>This method does not check if the container is null!</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="section return"><dt>Returns</dt><dd>A smart pointer to the contained object. </dd></dl>

<p>Implemented in <a class="el" href="a01273.xhtml#ac1efb7507b48851480b2a96284d48338">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;</a>, <a class="el" href="a01273.xhtml#ac1efb7507b48851480b2a96284d48338">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Safir::Dob::Typesystem::Object &gt;</a>, <a class="el" href="a01273.xhtml#ac1efb7507b48851480b2a96284d48338">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Entity &gt;</a>, <a class="el" href="a01273.xhtml#ac1efb7507b48851480b2a96284d48338">Safir::Dob::Typesystem::ObjectContainerImpl&lt; U &gt;</a>, and <a class="el" href="a01273.xhtml#ac1efb7507b48851480b2a96284d48338">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;</a>.</p>

<p>Referenced by <a class="el" href="a01193.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::Copy()</a>, <a class="el" href="a01277.xhtml#a58b0a34a4627c5df1f78408858db11d6">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;::GetMember()</a>, and <a class="el" href="a01269.xhtml#a0074de7f0f6b89d6f8806d33a9792b4b">SetChangedHere()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_aa5ad8977290cb7057106eead21a27ea6_icgraph.svg" width="399" height="214"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa5f9fb5ad7450f32ee51b70115bce80a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5f9fb5ad7450f32ee51b70115bce80a">&sect;&nbsp;</a></span>IsChangedHere()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Dob::Typesystem::ObjectContainerBase::IsChangedHere </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is the change flag in the container set? </p>
<p>This method is like IsChanged without the recursion (on object containers IsChanged is recursive).</p>
<dl class="section return"><dt>Returns</dt><dd>True if the containers change flag is set. </dd></dl>

<p>References <a class="el" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>.</p>

<p>Referenced by <a class="el" href="a01193.xhtml#a47d1d5141efea99e85dc9ed11d28a108">Safir::Dob::Typesystem::DictionaryContainer&lt; KeyT, ValT &gt;::Copy()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_aa5f9fb5ad7450f32ee51b70115bce80a_icgraph.svg" width="399" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a47111cc7ff14bea90714f225e3bd2739"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47111cc7ff14bea90714f225e3bd2739">&sect;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01269.xhtml">ObjectContainerBase</a>&amp; Safir::Dob::Typesystem::ObjectContainerBase::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a01269.xhtml">ObjectContainerBase</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>[in] - The object to copy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to this. </dd></dl>

<p>References <a class="el" href="a01165.xhtml#a8c85f18095c92aeaa5283c18bac44d83">Safir::Dob::Typesystem::ContainerBase::operator=()</a>.</p>

<p>Referenced by <a class="el" href="a01273.xhtml#a93875105c679ecb30b1c278feea141f6">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;::operator=()</a>, and <a class="el" href="a01277.xhtml#a04954179f422105585f1e91c10050754">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;::operator=()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_a47111cc7ff14bea90714f225e3bd2739_cgraph.svg" width="396" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_a47111cc7ff14bea90714f225e3bd2739_icgraph.svg" width="388" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6d83f3e64d6e7e4ab5bc95ce25ed677a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d83f3e64d6e7e4ab5bc95ce25ed677a">&sect;&nbsp;</a></span>ResetObjectPointer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Safir::Dob::Typesystem::ObjectContainerBase::ResetObjectPointer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reset (ie set to null) the contained pointer. </p>
<p>Warning: This method does not update the change flag!</p>
<p>Note: Do not use this method unless you're very sure it is the one you need! </p>

<p>Implemented in <a class="el" href="a01273.xhtml#ac385937b91c157d06687b7eade9754ce">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;</a>, <a class="el" href="a01273.xhtml#ac385937b91c157d06687b7eade9754ce">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Safir::Dob::Typesystem::Object &gt;</a>, <a class="el" href="a01273.xhtml#ac385937b91c157d06687b7eade9754ce">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Entity &gt;</a>, <a class="el" href="a01273.xhtml#ac385937b91c157d06687b7eade9754ce">Safir::Dob::Typesystem::ObjectContainerImpl&lt; U &gt;</a>, and <a class="el" href="a01273.xhtml#ac385937b91c157d06687b7eade9754ce">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;</a>.</p>

<p>Referenced by <a class="el" href="a01277.xhtml#a58b0a34a4627c5df1f78408858db11d6">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;::GetMember()</a>, and <a class="el" href="a01269.xhtml#a0074de7f0f6b89d6f8806d33a9792b4b">SetChangedHere()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_a6d83f3e64d6e7e4ab5bc95ce25ed677a_icgraph.svg" width="378" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0074de7f0f6b89d6f8806d33a9792b4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0074de7f0f6b89d6f8806d33a9792b4b">&sect;&nbsp;</a></span>SetChangedHere()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::Typesystem::ObjectContainerBase::SetChangedHere </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the change flag in the container. </p>
<p>This method is like SetChanged without the recursion (on object containers SetChanged is recursive).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - The value to set the change flag to. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="a01269.xhtml#a506e37a681f1fad522d34e1f5df2c331">GetMember()</a>, <a class="el" href="a01269.xhtml#aa5ad8977290cb7057106eead21a27ea6">GetObjectPointer()</a>, <a class="el" href="a01165.xhtml#a4257d6efb8b17e914896bf4ee9b1d7b8">Safir::Dob::Typesystem::ContainerBase::m_bIsChanged</a>, <a class="el" href="a01269.xhtml#a6d83f3e64d6e7e4ab5bc95ce25ed677a">ResetObjectPointer()</a>, and <a class="el" href="a01269.xhtml#aff8609b609d6b921d80468886cb641c0">SetObjectPointer()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_a0074de7f0f6b89d6f8806d33a9792b4b_cgraph.svg" width="376" height="307"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aff8609b609d6b921d80468886cb641c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff8609b609d6b921d80468886cb641c0">&sect;&nbsp;</a></span>SetObjectPointer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Safir::Dob::Typesystem::ObjectContainerBase::SetObjectPointer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a>&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the smart pointer in the container. </p>
<p>This method will set the contained pointer to point to another object. Checks are NOT always made to see that it is of the correct type.</p>
<p>Warning: This method does not update the change flag!</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptr</td><td>[in] A pointer to the new object to point to. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="a01273.xhtml#a6d2f43049928659c8421225462cd476a">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;</a>, <a class="el" href="a01273.xhtml#a6d2f43049928659c8421225462cd476a">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Safir::Dob::Typesystem::Object &gt;</a>, <a class="el" href="a01273.xhtml#a6d2f43049928659c8421225462cd476a">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Entity &gt;</a>, <a class="el" href="a01273.xhtml#a6d2f43049928659c8421225462cd476a">Safir::Dob::Typesystem::ObjectContainerImpl&lt; U &gt;</a>, and <a class="el" href="a01273.xhtml#a6d2f43049928659c8421225462cd476a">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;</a>.</p>

<p>Referenced by <a class="el" href="a01273.xhtml#a62bb04202644e3b55eb671c586fd89e9">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;::Copy()</a>, <a class="el" href="a01277.xhtml#a6e4713f8c60ed0270f5a02bb231a5434">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;::Copy()</a>, <a class="el" href="a01277.xhtml#a58b0a34a4627c5df1f78408858db11d6">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;::GetMember()</a>, and <a class="el" href="a01269.xhtml#a0074de7f0f6b89d6f8806d33a9792b4b">SetChangedHere()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_aff8609b609d6b921d80468886cb641c0_icgraph.svg" width="378" height="307"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="adaf4f8923a5b2ed23b84ddfd5109b487"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adaf4f8923a5b2ed23b84ddfd5109b487">&sect;&nbsp;</a></span>SetPtr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Safir::Dob::Typesystem::ObjectContainerBase::SetPtr </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00412.xhtml#ae11ede843efcf067a9327a9ef8b90b86">ObjectPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the smart pointer in the container. </p>
<p>This method will set the contained pointer to point to another object. Checks are always made to see that it is of the correct type. The change flag of the container will be updated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ptr</td><td>[in] A pointer to the new object to point to. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="a01229.xhtml" title="This exception is thrown if a class cannot be cast to the expected type. ">IncompatibleTypesException</a></td><td>If the ptr is not of the type contained by the container. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="a01277.xhtml#a75bc814f7dc84ca4d349eccd3851cbe8">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Object &gt;</a>, <a class="el" href="a01273.xhtml#a39563758166803303556d507e32c3dda">Safir::Dob::Typesystem::ObjectContainerImpl&lt; T &gt;</a>, <a class="el" href="a01273.xhtml#a39563758166803303556d507e32c3dda">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Safir::Dob::Typesystem::Object &gt;</a>, <a class="el" href="a01273.xhtml#a39563758166803303556d507e32c3dda">Safir::Dob::Typesystem::ObjectContainerImpl&lt; Entity &gt;</a>, <a class="el" href="a01273.xhtml#a39563758166803303556d507e32c3dda">Safir::Dob::Typesystem::ObjectContainerImpl&lt; U &gt;</a>, and <a class="el" href="a01273.xhtml#a39563758166803303556d507e32c3dda">Safir::Dob::Typesystem::ObjectContainerImpl&lt; ClassType &gt;</a>.</p>

<p>Referenced by <a class="el" href="a01269.xhtml#abc5fe23aedb525d8f000252ea5d0509d">ObjectContainerBase()</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01269_adaf4f8923a5b2ed23b84ddfd5109b487_icgraph.svg" width="376" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a822ad29b4a74d37a0127679ff6cd550c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a822ad29b4a74d37a0127679ff6cd550c">&sect;&nbsp;</a></span>Safir::Dob::Typesystem::Internal::BlobOperations</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class Safir::Dob::Typesystem::Internal::BlobOperations</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00406.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00410.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00412.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a01269.xhtml">ObjectContainerBase</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:28 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
