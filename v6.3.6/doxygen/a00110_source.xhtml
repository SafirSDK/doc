<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.12"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: /home/lars/safir/safir-sdk-core/include/Safir/Dob/Typesystem/EntityId.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00110_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">EntityId.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00110.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/******************************************************************************</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">* Copyright Saab AB, 2008-2013 (http://safirsdkcore.com)</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">* Created by: Lars Hagstr√∂m / stlrha</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">*******************************************************************************</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">* This file is part of Safir SDK Core.</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">* Safir SDK Core is free software: you can redistribute it and/or modify</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">* it under the terms of version 3 of the GNU General Public License as</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">* published by the Free Software Foundation.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">* Safir SDK Core is distributed in the hope that it will be useful,</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">* but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">* GNU General Public License for more details.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">* You should have received a copy of the GNU General Public License</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">* along with Safir SDK Core.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">*</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">******************************************************************************/</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef __DOTS_ENTITY_ID_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define __DOTS_ENTITY_ID_H__</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;boost/functional/hash.hpp&gt;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a01949.xhtml">Safir/Dob/Typesystem/Defs.h</a>&gt;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00122.xhtml">Safir/Dob/Typesystem/InstanceId.h</a>&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span><a class="code" href="a00406.xhtml">Safir</a></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span>Dob</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">namespace </span>Typesystem</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="a01205.xhtml">   42</a></span>&#160;    <span class="keyword">class </span><a class="code" href="a01205.xhtml">EntityId</a></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="a01205.xhtml#a21bfe0cf1937175629e2c2d07c5451a7">   48</a></span>&#160;        <a class="code" href="a01205.xhtml#a21bfe0cf1937175629e2c2d07c5451a7">EntityId</a>(): m_typeId(0),m_instanceId() {}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="a01205.xhtml#a5d3bca875308f4c32a5475feee37b8b5">   57</a></span>&#160;        <a class="code" href="a01205.xhtml#a5d3bca875308f4c32a5475feee37b8b5">EntityId</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                 <span class="keyword">const</span> <a class="code" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> instanceId)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                 : m_typeId(typeId),m_instanceId(instanceId) {}</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="a01205.xhtml#a1d7fba20f01ed42b16bd4158fd5b52ec">   70</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01205.xhtml#a1d7fba20f01ed42b16bd4158fd5b52ec">RemoveString</a>() {m_instanceId.<a class="code" href="a01253.xhtml#a1abc1c807a0ea902e46e6089816e3fcb">RemoveString</a>();}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="a01205.xhtml#a8eb8d9d2663b51469b8eb83809d60ebb">   78</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> &amp; <a class="code" href="a01205.xhtml#a8eb8d9d2663b51469b8eb83809d60ebb">GetInstanceId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_instanceId;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="a01205.xhtml#ae3a8264b98bbc69da3f533d2a0f5b3f9">   85</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01205.xhtml#ae3a8264b98bbc69da3f533d2a0f5b3f9">SetInstanceId</a>(<span class="keyword">const</span> <a class="code" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> &amp; instanceId) {m_instanceId = instanceId;}</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="a01205.xhtml#a2c8d3d671b4b29a11f6812e0d6346a6f">   92</a></span>&#160;        <a class="code" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> <a class="code" href="a01205.xhtml#a2c8d3d671b4b29a11f6812e0d6346a6f">GetTypeId</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_typeId;}</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="a01205.xhtml#a61298466a8e0d90081be599c80efc98c">   99</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="a01205.xhtml#a61298466a8e0d90081be599c80efc98c">SetTypeId</a>(<span class="keyword">const</span> <a class="code" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> typeId) {m_typeId = typeId;}</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="a01205.xhtml#ae1266cebfcaeace458d7eea6fc17b524">  107</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01205.xhtml#ae1266cebfcaeace458d7eea6fc17b524">operator ==</a>(<span class="keyword">const</span> <a class="code" href="a01205.xhtml">EntityId</a> &amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> m_typeId == other.m_typeId &amp;&amp; m_instanceId == other.m_instanceId;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="a01205.xhtml#aa80d273dd2e6cbeace3567926cb54a66">  118</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01205.xhtml#aa80d273dd2e6cbeace3567926cb54a66">operator !=</a>(<span class="keyword">const</span> <a class="code" href="a01205.xhtml">EntityId</a> &amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">return</span> !(*<span class="keyword">this</span>==other);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="a01205.xhtml#a149af0ceddeb4ba60260ac2313add31d">  130</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="a01205.xhtml#a149af0ceddeb4ba60260ac2313add31d">operator &lt; </a>(<span class="keyword">const</span> <a class="code" href="a01205.xhtml">EntityId</a> &amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">if</span> (m_typeId == other.m_typeId)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="keywordflow">return</span> m_instanceId &lt; other.m_instanceId;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">else</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <span class="keywordflow">return</span> m_typeId &lt; other.m_typeId;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="a01949.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <span class="keyword">const</span> std::wstring <a class="code" href="a01205.xhtml#afe7e0d9fcad968c2ab991d4c4dc9e4bb">ToString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <a class="code" href="a01949.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a> <span class="keyword">const</span> std::wstring <a class="code" href="a01205.xhtml#a9d411492869ce8f5f235cefa9f8ca568">ToStringNumeric</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <a class="code" href="a00412.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a> m_typeId;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <a class="code" href="a01253.xhtml">Dob::Typesystem::InstanceId</a> m_instanceId;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    };</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="a00412.xhtml#a96f5f9c883468e1912b90a4c10fc9054">  175</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> std::wostream &amp; <a class="code" href="a00412.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">operator &lt;&lt; </a>(std::wostream &amp; out, <span class="keyword">const</span> <a class="code" href="a01205.xhtml">EntityId</a> &amp; entityId)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {<span class="keywordflow">return</span> out &lt;&lt; entityId.<a class="code" href="a01205.xhtml#afe7e0d9fcad968c2ab991d4c4dc9e4bb">ToString</a>();}</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="comment">//Make it possible to use EntityId as key in a dictionaries.</span></div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="a00412.xhtml#a5f463a0ee2d7bd3e50383bbd12561cc0">  179</a></span>&#160;    <span class="keyword">inline</span> std::size_t <a class="code" href="a00412.xhtml#a46ffb6f2e58b47f1ef097bb3ddc3e33f">hash_value</a>(<span class="keyword">const</span> <a class="code" href="a01205.xhtml">Safir::Dob::Typesystem::EntityId</a>&amp; eid)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordtype">size_t</span> seed;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        boost::hash_combine(seed, <a class="code" href="a00412.xhtml#a5f463a0ee2d7bd3e50383bbd12561cc0">boost::hash_value</a>(eid.<a class="code" href="a01205.xhtml#a2c8d3d671b4b29a11f6812e0d6346a6f">GetTypeId</a>()));</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        boost::hash_combine(seed, <a class="code" href="a00412.xhtml#a5f463a0ee2d7bd3e50383bbd12561cc0">boost::hash_value</a>(eid.<a class="code" href="a01205.xhtml#a8eb8d9d2663b51469b8eb83809d60ebb">GetInstanceId</a>().<a class="code" href="a01253.xhtml#acf24e8063b113e397ef82bc59327ca52">GetRawValue</a>()));</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">return</span> seed;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="a01253_xhtml_acf24e8063b113e397ef82bc59327ca52"><div class="ttname"><a href="a01253.xhtml#acf24e8063b113e397ef82bc59327ca52">Safir::Dob::Typesystem::InstanceId::GetRawValue</a></div><div class="ttdeci">UnderlyingType GetRawValue() const</div><div class="ttdoc">Get the raw 64 bit integer identifier. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:174</div></div>
<div class="ttc" id="a00412_xhtml_a46ffb6f2e58b47f1ef097bb3ddc3e33f"><div class="ttname"><a href="a00412.xhtml#a46ffb6f2e58b47f1ef097bb3ddc3e33f">Safir::Dob::Typesystem::hash_value</a></div><div class="ttdeci">std::size_t hash_value(const Safir::Dob::Typesystem::ChannelId &amp;val)</div><div class="ttdef"><b>Definition:</b> ChannelId.h:228</div></div>
<div class="ttc" id="a01205_xhtml_ae3a8264b98bbc69da3f533d2a0f5b3f9"><div class="ttname"><a href="a01205.xhtml#ae3a8264b98bbc69da3f533d2a0f5b3f9">Safir::Dob::Typesystem::EntityId::SetInstanceId</a></div><div class="ttdeci">void SetInstanceId(const Dob::Typesystem::InstanceId &amp;instanceId)</div><div class="ttdoc">Set the instance number of the EntityId. </div><div class="ttdef"><b>Definition:</b> EntityId.h:85</div></div>
<div class="ttc" id="a00122_xhtml"><div class="ttname"><a href="a00122.xhtml">InstanceId.h</a></div></div>
<div class="ttc" id="a01205_xhtml_a8eb8d9d2663b51469b8eb83809d60ebb"><div class="ttname"><a href="a01205.xhtml#a8eb8d9d2663b51469b8eb83809d60ebb">Safir::Dob::Typesystem::EntityId::GetInstanceId</a></div><div class="ttdeci">const Dob::Typesystem::InstanceId &amp; GetInstanceId() const</div><div class="ttdoc">Get the Instance number out of the EntityId. </div><div class="ttdef"><b>Definition:</b> EntityId.h:78</div></div>
<div class="ttc" id="a01205_xhtml_ae1266cebfcaeace458d7eea6fc17b524"><div class="ttname"><a href="a01205.xhtml#ae1266cebfcaeace458d7eea6fc17b524">Safir::Dob::Typesystem::EntityId::operator==</a></div><div class="ttdeci">bool operator==(const EntityId &amp;other) const</div><div class="ttdoc">Equality operator. </div><div class="ttdef"><b>Definition:</b> EntityId.h:107</div></div>
<div class="ttc" id="a00412_xhtml_a5f463a0ee2d7bd3e50383bbd12561cc0"><div class="ttname"><a href="a00412.xhtml#a5f463a0ee2d7bd3e50383bbd12561cc0">Safir::Dob::Typesystem::hash_value</a></div><div class="ttdeci">std::size_t hash_value(const Safir::Dob::Typesystem::EntityId &amp;eid)</div><div class="ttdef"><b>Definition:</b> EntityId.h:179</div></div>
<div class="ttc" id="a00412_xhtml_add598341f70c143ad35a701a65884214"><div class="ttname"><a href="a00412.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a></div><div class="ttdeci">DotsC_TypeId TypeId</div><div class="ttdoc">A unique type identifier. </div><div class="ttdef"><b>Definition:</b> Defs.h:218</div></div>
<div class="ttc" id="a01949_xhtml"><div class="ttname"><a href="a01949.xhtml">Defs.h</a></div></div>
<div class="ttc" id="a01205_xhtml_a1d7fba20f01ed42b16bd4158fd5b52ec"><div class="ttname"><a href="a01205.xhtml#a1d7fba20f01ed42b16bd4158fd5b52ec">Safir::Dob::Typesystem::EntityId::RemoveString</a></div><div class="ttdeci">void RemoveString()</div><div class="ttdoc">Remove the included string from the instance id of the entity id. </div><div class="ttdef"><b>Definition:</b> EntityId.h:70</div></div>
<div class="ttc" id="a01205_xhtml_a2c8d3d671b4b29a11f6812e0d6346a6f"><div class="ttname"><a href="a01205.xhtml#a2c8d3d671b4b29a11f6812e0d6346a6f">Safir::Dob::Typesystem::EntityId::GetTypeId</a></div><div class="ttdeci">Dob::Typesystem::TypeId GetTypeId() const</div><div class="ttdoc">Get the type id out of the EntityId. </div><div class="ttdef"><b>Definition:</b> EntityId.h:92</div></div>
<div class="ttc" id="a01253_xhtml_a1abc1c807a0ea902e46e6089816e3fcb"><div class="ttname"><a href="a01253.xhtml#a1abc1c807a0ea902e46e6089816e3fcb">Safir::Dob::Typesystem::InstanceId::RemoveString</a></div><div class="ttdeci">void RemoveString()</div><div class="ttdoc">Remove the included string from the instance id. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:117</div></div>
<div class="ttc" id="a00406_xhtml"><div class="ttname"><a href="a00406.xhtml">Safir</a></div><div class="ttdoc">This namespace contains all the functionality and definitions of the SAFIR SDK. </div><div class="ttdef"><b>Definition:</b> Backdoor.h:30</div></div>
<div class="ttc" id="a01205_xhtml_a9d411492869ce8f5f235cefa9f8ca568"><div class="ttname"><a href="a01205.xhtml#a9d411492869ce8f5f235cefa9f8ca568">Safir::Dob::Typesystem::EntityId::ToStringNumeric</a></div><div class="ttdeci">DOTS_CPP_API const std::wstring ToStringNumeric() const</div><div class="ttdoc">Convert an entity id to a string that has only numeric parts. </div></div>
<div class="ttc" id="a01205_xhtml_a61298466a8e0d90081be599c80efc98c"><div class="ttname"><a href="a01205.xhtml#a61298466a8e0d90081be599c80efc98c">Safir::Dob::Typesystem::EntityId::SetTypeId</a></div><div class="ttdeci">void SetTypeId(const Dob::Typesystem::TypeId typeId)</div><div class="ttdoc">Set the type id of the EntityId. </div><div class="ttdef"><b>Definition:</b> EntityId.h:99</div></div>
<div class="ttc" id="a01205_xhtml_afe7e0d9fcad968c2ab991d4c4dc9e4bb"><div class="ttname"><a href="a01205.xhtml#afe7e0d9fcad968c2ab991d4c4dc9e4bb">Safir::Dob::Typesystem::EntityId::ToString</a></div><div class="ttdeci">DOTS_CPP_API const std::wstring ToString() const</div><div class="ttdoc">Convert an entity id to a string. </div></div>
<div class="ttc" id="a01205_xhtml_a21bfe0cf1937175629e2c2d07c5451a7"><div class="ttname"><a href="a01205.xhtml#a21bfe0cf1937175629e2c2d07c5451a7">Safir::Dob::Typesystem::EntityId::EntityId</a></div><div class="ttdeci">EntityId()</div><div class="ttdoc">Default constructor. </div><div class="ttdef"><b>Definition:</b> EntityId.h:48</div></div>
<div class="ttc" id="a01205_xhtml"><div class="ttname"><a href="a01205.xhtml">Safir::Dob::Typesystem::EntityId</a></div><div class="ttdoc">Class containing the identity of an entity. </div><div class="ttdef"><b>Definition:</b> EntityId.h:42</div></div>
<div class="ttc" id="a01949_xhtml_a75f4ad2b9223b1c7783ec9303a67ec6e"><div class="ttname"><a href="a01949.xhtml#a75f4ad2b9223b1c7783ec9303a67ec6e">DOTS_CPP_API</a></div><div class="ttdeci">#define DOTS_CPP_API</div><div class="ttdef"><b>Definition:</b> Defs.h:33</div></div>
<div class="ttc" id="a01205_xhtml_a149af0ceddeb4ba60260ac2313add31d"><div class="ttname"><a href="a01205.xhtml#a149af0ceddeb4ba60260ac2313add31d">Safir::Dob::Typesystem::EntityId::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const EntityId &amp;other) const</div><div class="ttdoc">Less-than operator. </div><div class="ttdef"><b>Definition:</b> EntityId.h:130</div></div>
<div class="ttc" id="a01205_xhtml_a5d3bca875308f4c32a5475feee37b8b5"><div class="ttname"><a href="a01205.xhtml#a5d3bca875308f4c32a5475feee37b8b5">Safir::Dob::Typesystem::EntityId::EntityId</a></div><div class="ttdeci">EntityId(const Dob::Typesystem::TypeId typeId, const Dob::Typesystem::InstanceId instanceId)</div><div class="ttdoc">Constructor with type id and instance arguments. </div><div class="ttdef"><b>Definition:</b> EntityId.h:57</div></div>
<div class="ttc" id="a01253_xhtml"><div class="ttname"><a href="a01253.xhtml">Safir::Dob::Typesystem::InstanceId</a></div><div class="ttdoc">Class containing the identity of an instance. </div><div class="ttdef"><b>Definition:</b> InstanceId.h:48</div></div>
<div class="ttc" id="a01205_xhtml_aa80d273dd2e6cbeace3567926cb54a66"><div class="ttname"><a href="a01205.xhtml#aa80d273dd2e6cbeace3567926cb54a66">Safir::Dob::Typesystem::EntityId::operator!=</a></div><div class="ttdeci">bool operator!=(const EntityId &amp;other) const</div><div class="ttdoc">Inequality operator. </div><div class="ttdef"><b>Definition:</b> EntityId.h:118</div></div>
<div class="ttc" id="a00412_xhtml_a74434cdf7c582d37ccf33d83ec9561e6"><div class="ttname"><a href="a00412.xhtml#a74434cdf7c582d37ccf33d83ec9561e6">Safir::Dob::Typesystem::operator&lt;&lt;</a></div><div class="ttdeci">static std::wostream &amp; operator&lt;&lt;(std::wostream &amp;out, const ChannelId &amp;channelId)</div><div class="ttdef"><b>Definition:</b> ChannelId.h:224</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_be44bbfa9c04953461a45f411f73eeb6.xhtml">Safir</a></li><li class="navelem"><a class="el" href="dir_a252b385f5a773561b8bf986f2e4be11.xhtml">Dob</a></li><li class="navelem"><a class="el" href="dir_b56be55d11b18fdc9b2421311b2494a8.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00110.xhtml">EntityId.h</a></li>
    <li class="footer">Generated on Sun Dec 4 2016 16:36:25 for Safir SDK Core by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.12 </li>
  </ul>
</div>
</body>
</html>
