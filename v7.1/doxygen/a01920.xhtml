<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::ThisNodeParameters Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a01920.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="a01917.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Safir::Dob::ThisNodeParameters Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Defines the settings for this particular node.  
 <a href="a01920.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00191_source.xhtml">/home/lars/safir/safir-sdk-core/src/safir_dou/gen/cpp/include/Safir/Dob/ThisNodeParameters.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::ThisNodeParameters:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01919.svg" width="223" height="198"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::ThisNodeParameters:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01918.svg" width="223" height="198"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3bed3437f005700e98c5eea7352aaff3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a3bed3437f005700e98c5eea7352aaff3">ThisNodeParameters</a> ()</td></tr>
<tr class="separator:a3bed3437f005700e98c5eea7352aaff3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedef334d481fcd8bc30db4f1340d3c73"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Safir::Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#aedef334d481fcd8bc30db4f1340d3c73">Clone</a> () const override</td></tr>
<tr class="memdesc:aedef334d481fcd8bc30db4f1340d3c73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <br /></td></tr>
<tr class="separator:aedef334d481fcd8bc30db4f1340d3c73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35068b0dc9b2b43bd444c7251fa3a3bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a35068b0dc9b2b43bd444c7251fa3a3bf">GetTypeId</a> () const override</td></tr>
<tr class="memdesc:a35068b0dc9b2b43bd444c7251fa3a3bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <br /></td></tr>
<tr class="separator:a35068b0dc9b2b43bd444c7251fa3a3bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48f8644820d6e614f9fabc48c710b6bb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a48f8644820d6e614f9fabc48c710b6bb">IsChanged</a> () override</td></tr>
<tr class="memdesc:a48f8644820d6e614f9fabc48c710b6bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <br /></td></tr>
<tr class="separator:a48f8644820d6e614f9fabc48c710b6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d3256ac77cbbd6907e111c5cf6da9bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a1d3256ac77cbbd6907e111c5cf6da9bc">SetChanged</a> (const bool changed) override</td></tr>
<tr class="memdesc:a1d3256ac77cbbd6907e111c5cf6da9bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <br /></td></tr>
<tr class="separator:a1d3256ac77cbbd6907e111c5cf6da9bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2997655b9d36958c1404e05f31ba04cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a2997655b9d36958c1404e05f31ba04cc">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) override</td></tr>
<tr class="memdesc:a2997655b9d36958c1404e05f31ba04cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <br /></td></tr>
<tr class="separator:a2997655b9d36958c1404e05f31ba04cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a287f94ee42d945869a5ed4d73bc5de7e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a287f94ee42d945869a5ed4d73bc5de7e">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) const override</td></tr>
<tr class="memdesc:a287f94ee42d945869a5ed4d73bc5de7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <br /></td></tr>
<tr class="separator:a287f94ee42d945869a5ed4d73bc5de7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bc71ae5fcbe82ba687ed7b71320f029"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a0bc71ae5fcbe82ba687ed7b71320f029">WriteToBlob</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle) const override</td></tr>
<tr class="memdesc:a0bc71ae5fcbe82ba687ed7b71320f029"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write the object to a blob.  <br /></td></tr>
<tr class="separator:a0bc71ae5fcbe82ba687ed7b71320f029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856d3f9abb4dd23c4d8a5b3b3c871869"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a856d3f9abb4dd23c4d8a5b3b3c871869">ThisNodeParameters</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a856d3f9abb4dd23c4d8a5b3b3c871869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01836"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01836')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01836.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:af7250c4748af0c0a3221477ba8dee709 inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#af7250c4748af0c0a3221477ba8dee709">Parametrization</a> ()</td></tr>
<tr class="separator:af7250c4748af0c0a3221477ba8dee709 inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb3ed1af02b3d77324cd08e9af260431 inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Safir::Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#aeb3ed1af02b3d77324cd08e9af260431">Clone</a> () const override</td></tr>
<tr class="memdesc:aeb3ed1af02b3d77324cd08e9af260431 inherit pub_methods_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <br /></td></tr>
<tr class="separator:aeb3ed1af02b3d77324cd08e9af260431 inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9df5fb4c65cfdfbc4bd407eabb502d3c inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#a9df5fb4c65cfdfbc4bd407eabb502d3c">GetTypeId</a> () const override</td></tr>
<tr class="memdesc:a9df5fb4c65cfdfbc4bd407eabb502d3c inherit pub_methods_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <br /></td></tr>
<tr class="separator:a9df5fb4c65cfdfbc4bd407eabb502d3c inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a115716384186f403768e65d84ac151cf inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#a115716384186f403768e65d84ac151cf">IsChanged</a> () override</td></tr>
<tr class="memdesc:a115716384186f403768e65d84ac151cf inherit pub_methods_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <br /></td></tr>
<tr class="separator:a115716384186f403768e65d84ac151cf inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee5b51d50200930520a3d46a7de4c0a5 inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#aee5b51d50200930520a3d46a7de4c0a5">SetChanged</a> (const bool changed) override</td></tr>
<tr class="memdesc:aee5b51d50200930520a3d46a7de4c0a5 inherit pub_methods_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <br /></td></tr>
<tr class="separator:aee5b51d50200930520a3d46a7de4c0a5 inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25ab6f3a8c926a3fe0a47d2ed50cc99e inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#a25ab6f3a8c926a3fe0a47d2ed50cc99e">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) override</td></tr>
<tr class="memdesc:a25ab6f3a8c926a3fe0a47d2ed50cc99e inherit pub_methods_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <br /></td></tr>
<tr class="separator:a25ab6f3a8c926a3fe0a47d2ed50cc99e inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eef25dcf2c0ccae99f9efa782c285e5 inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#a6eef25dcf2c0ccae99f9efa782c285e5">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) const override</td></tr>
<tr class="memdesc:a6eef25dcf2c0ccae99f9efa782c285e5 inherit pub_methods_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <br /></td></tr>
<tr class="separator:a6eef25dcf2c0ccae99f9efa782c285e5 inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6697567abaf17ca0c0fd7cad51916bcc inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#a6697567abaf17ca0c0fd7cad51916bcc">WriteToBlob</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle) const override</td></tr>
<tr class="memdesc:a6697567abaf17ca0c0fd7cad51916bcc inherit pub_methods_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write the object to a blob.  <br /></td></tr>
<tr class="separator:a6697567abaf17ca0c0fd7cad51916bcc inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f18e22641a96decee971706f037eee0 inherit pub_methods_a01836"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#a2f18e22641a96decee971706f037eee0">Parametrization</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a2f18e22641a96decee971706f037eee0 inherit pub_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01492"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01492')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01492.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#afac534c32310137c943104c4d3e3f309">Object</a> ()</td></tr>
<tr class="memdesc:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <br /></td></tr>
<tr class="separator:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a9f27069548b4ec8968a8c394ac3bedc2">~Object</a> ()</td></tr>
<tr class="memdesc:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <br /></td></tr>
<tr class="separator:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a040df22a02b16c68d472f2d11f3f2e5b inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a040df22a02b16c68d472f2d11f3f2e5b">Clone</a> () const</td></tr>
<tr class="memdesc:a040df22a02b16c68d472f2d11f3f2e5b inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <br /></td></tr>
<tr class="separator:a040df22a02b16c68d472f2d11f3f2e5b inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a606cc02e0ee20919be7445e281af060f inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a606cc02e0ee20919be7445e281af060f">GetTypeId</a> () const</td></tr>
<tr class="memdesc:a606cc02e0ee20919be7445e281af060f inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <br /></td></tr>
<tr class="separator:a606cc02e0ee20919be7445e281af060f inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89c720760384430fc40021b945cc4f01 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a89c720760384430fc40021b945cc4f01">IsChanged</a> ()</td></tr>
<tr class="memdesc:a89c720760384430fc40021b945cc4f01 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <br /></td></tr>
<tr class="separator:a89c720760384430fc40021b945cc4f01 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae188b01d49aba0d83a76d859171f7df5 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#ae188b01d49aba0d83a76d859171f7df5">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:ae188b01d49aba0d83a76d859171f7df5 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <br /></td></tr>
<tr class="separator:ae188b01d49aba0d83a76d859171f7df5 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a7e6f36f0b33c414711aae5966b5d2d5b">Object</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="memdesc:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an <a class="el" href="a01492.xhtml" title="The base class for all DOB objects.">Object</a> from a blob.  <br /></td></tr>
<tr class="separator:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ab4c6aff2e9180b4421b1b12fdf5e593f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00387.xhtml#ac77aaf52d67fc24ce98e5eddf8d57985">ThisNodeParametersPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#ab4c6aff2e9180b4421b1b12fdf5e593f">Create</a> ()</td></tr>
<tr class="separator:ab4c6aff2e9180b4421b1b12fdf5e593f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fe3f650b017cdfa8eff803711330353"><td class="memItemLeft" align="right" valign="top">static std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a0fe3f650b017cdfa8eff803711330353">Name</a> ()</td></tr>
<tr class="memdesc:a0fe3f650b017cdfa8eff803711330353"><td class="mdescLeft">&#160;</td><td class="mdescRight">A nice name for this node.  <br /></td></tr>
<tr class="separator:a0fe3f650b017cdfa8eff803711330353"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abafad75a1ed008fce26986c2394d0463"><td class="memItemLeft" align="right" valign="top">static std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#abafad75a1ed008fce26986c2394d0463">NodeType</a> ()</td></tr>
<tr class="memdesc:abafad75a1ed008fce26986c2394d0463"><td class="mdescLeft">&#160;</td><td class="mdescRight">Node type for this node.  <br /></td></tr>
<tr class="separator:abafad75a1ed008fce26986c2394d0463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa85475503bd249c4ee41a587d66e2b48"><td class="memItemLeft" align="right" valign="top">static std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#aa85475503bd249c4ee41a587d66e2b48">ControlAddress</a> ()</td></tr>
<tr class="memdesc:aa85475503bd249c4ee41a587d66e2b48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Address and port of the control channel.  <br /></td></tr>
<tr class="separator:aa85475503bd249c4ee41a587d66e2b48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508aa98bb9d82ff4747fa3accdf125bb"><td class="memItemLeft" align="right" valign="top">static std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a508aa98bb9d82ff4747fa3accdf125bb">DataAddress</a> ()</td></tr>
<tr class="memdesc:a508aa98bb9d82ff4747fa3accdf125bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Address and port of the data channel.  <br /></td></tr>
<tr class="separator:a508aa98bb9d82ff4747fa3accdf125bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63eaeca6ad83f1f4e747087162a8c0fa"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a63eaeca6ad83f1f4e747087162a8c0fa">SeedsArraySize</a> ()</td></tr>
<tr class="separator:a63eaeca6ad83f1f4e747087162a8c0fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06c768f7a3e175b2dd742589cc8f7a62"><td class="memItemLeft" align="right" valign="top">static const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a06c768f7a3e175b2dd742589cc8f7a62">Seeds</a> (const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index)</td></tr>
<tr class="memdesc:a06c768f7a3e175b2dd742589cc8f7a62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Address and port of seed nodes control channel.  <br /></td></tr>
<tr class="separator:a06c768f7a3e175b2dd742589cc8f7a62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01836"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01836')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01836.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:a8e818c8c5ddf9da4a3d2ec2503a9ca78 inherit pub_static_methods_a01836"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00387.xhtml#a5d7fbc1fa6856d343b442b463a60e620">ParametrizationPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#a8e818c8c5ddf9da4a3d2ec2503a9ca78">Create</a> ()</td></tr>
<tr class="separator:a8e818c8c5ddf9da4a3d2ec2503a9ca78 inherit pub_static_methods_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01492"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01492')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01492.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01492"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#acb1399abd50543020f6b1638a698e379">Create</a> ()</td></tr>
<tr class="memdesc:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="a01492.xhtml" title="The base class for all DOB objects.">Object</a>.  <br /></td></tr>
<tr class="separator:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a8de89addcc938dd42082de90a2a260ed"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01920.xhtml#a8de89addcc938dd42082de90a2a260ed">ClassTypeId</a> = 7177876786334465007LL</td></tr>
<tr class="memdesc:a8de89addcc938dd42082de90a2a260ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01920.xhtml" title="Defines the settings for this particular node.">ThisNodeParameters</a>.  <br /></td></tr>
<tr class="separator:a8de89addcc938dd42082de90a2a260ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01836"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01836')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01836.xhtml">Safir::Dob::Parametrization</a></td></tr>
<tr class="memitem:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01836"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01836.xhtml#ac1cdacddcacae4423fe3d3925dfb116d">ClassTypeId</a> = 8075666004421608370LL</td></tr>
<tr class="memdesc:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01836.xhtml" title="This class is intended to be used as baseclass for classes that only contains parameters.">Parametrization</a>.  <br /></td></tr>
<tr class="separator:ac1cdacddcacae4423fe3d3925dfb116d inherit pub_static_attribs_a01836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01492"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01492')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01492.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01492"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#af6c7867293f8c2459a5fc8fe8b6b0a2a">ClassTypeId</a> = 5955188366590963785LL</td></tr>
<tr class="memdesc:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">The TypeId of the <a class="el" href="a01492.xhtml" title="The base class for all DOB objects.">Object</a> class.  <br /></td></tr>
<tr class="separator:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Defines the settings for this particular node. </p>
<p>Like <a class="el" href="a01820.xhtml" title="Defines a number of characteristics that control how nodes of a certain type communicates.">NodeType</a>, Name and address information. Will probably be different for all nodes. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3bed3437f005700e98c5eea7352aaff3" name="a3bed3437f005700e98c5eea7352aaff3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bed3437f005700e98c5eea7352aaff3">&#9670;&#160;</a></span>ThisNodeParameters() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::ThisNodeParameters::ThisNodeParameters </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a856d3f9abb4dd23c4d8a5b3b3c871869" name="a856d3f9abb4dd23c4d8a5b3b3c871869"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a856d3f9abb4dd23c4d8a5b3b3c871869">&#9670;&#160;</a></span>ThisNodeParameters() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::ThisNodeParameters::ThisNodeParameters </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aedef334d481fcd8bc30db4f1340d3c73" name="aedef334d481fcd8bc30db4f1340d3c73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedef334d481fcd8bc30db4f1340d3c73">&#9670;&#160;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Safir::Dob::Typesystem::ObjectPtr</a> Safir::Dob::ThisNodeParameters::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a copy of the object. </p>
<p>Will create a copy of the object on the heap and return a smart pointer to it. Use std::static_pointer_cast or std::dynamic_pointer_cast to cast it to the pointer type that you're after.</p>
<dl class="section return"><dt>Returns</dt><dd>A smart pointer to the copy of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01836.xhtml#aeb3ed1af02b3d77324cd08e9af260431">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="aa85475503bd249c4ee41a587d66e2b48" name="aa85475503bd249c4ee41a587d66e2b48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa85475503bd249c4ee41a587d66e2b48">&#9670;&#160;</a></span>ControlAddress()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::wstring Safir::Dob::ThisNodeParameters::ControlAddress </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Address and port of the control channel. </p>

</div>
</div>
<a id="ab4c6aff2e9180b4421b1b12fdf5e593f" name="ab4c6aff2e9180b4421b1b12fdf5e593f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4c6aff2e9180b4421b1b12fdf5e593f">&#9670;&#160;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00387.xhtml#ac77aaf52d67fc24ce98e5eddf8d57985">ThisNodeParametersPtr</a> Safir::Dob::ThisNodeParameters::Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a508aa98bb9d82ff4747fa3accdf125bb" name="a508aa98bb9d82ff4747fa3accdf125bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a508aa98bb9d82ff4747fa3accdf125bb">&#9670;&#160;</a></span>DataAddress()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::wstring Safir::Dob::ThisNodeParameters::DataAddress </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Address and port of the data channel. </p>

</div>
</div>
<a id="a287f94ee42d945869a5ed4d73bc5de7e" name="a287f94ee42d945869a5ed4d73bc5de7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a287f94ee42d945869a5ed4d73bc5de7e">&#9670;&#160;</a></span>GetMember() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp; Safir::Dob::ThisNodeParameters::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a const reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A const reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01836.xhtml#a6eef25dcf2c0ccae99f9efa782c285e5">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a2997655b9d36958c1404e05f31ba04cc" name="a2997655b9d36958c1404e05f31ba04cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2997655b9d36958c1404e05f31ba04cc">&#9670;&#160;</a></span>GetMember() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp; Safir::Dob::ThisNodeParameters::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01836.xhtml#a25ab6f3a8c926a3fe0a47d2ed50cc99e">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a35068b0dc9b2b43bd444c7251fa3a3bf" name="a35068b0dc9b2b43bd444c7251fa3a3bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35068b0dc9b2b43bd444c7251fa3a3bf">&#9670;&#160;</a></span>GetTypeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::ThisNodeParameters::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type id of this object. </p>
<p>Gets the type id of the object. Method is virtual to ensure that the right value gets returned for pointers or references.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The TypeId of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01836.xhtml#a9df5fb4c65cfdfbc4bd407eabb502d3c">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a48f8644820d6e614f9fabc48c710b6bb" name="a48f8644820d6e614f9fabc48c710b6bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48f8644820d6e614f9fabc48c710b6bb">&#9670;&#160;</a></span>IsChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Dob::ThisNodeParameters::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if any member of this object is changed. </p>
<p>This method will recursively check if any member of the object has its change flag set.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>True if any member has changed. </dd></dl>

<p>Reimplemented from <a class="el" href="a01836.xhtml#a115716384186f403768e65d84ac151cf">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a0fe3f650b017cdfa8eff803711330353" name="a0fe3f650b017cdfa8eff803711330353"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fe3f650b017cdfa8eff803711330353">&#9670;&#160;</a></span>Name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::wstring Safir::Dob::ThisNodeParameters::Name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A nice name for this node. </p>

</div>
</div>
<a id="abafad75a1ed008fce26986c2394d0463" name="abafad75a1ed008fce26986c2394d0463"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abafad75a1ed008fce26986c2394d0463">&#9670;&#160;</a></span>NodeType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::wstring Safir::Dob::ThisNodeParameters::NodeType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Node type for this node. </p>

</div>
</div>
<a id="a06c768f7a3e175b2dd742589cc8f7a62" name="a06c768f7a3e175b2dd742589cc8f7a62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06c768f7a3e175b2dd742589cc8f7a62">&#9670;&#160;</a></span>Seeds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::wstring Safir::Dob::ThisNodeParameters::Seeds </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Address and port of seed nodes control channel. </p>

</div>
</div>
<a id="a63eaeca6ad83f1f4e747087162a8c0fa" name="a63eaeca6ad83f1f4e747087162a8c0fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63eaeca6ad83f1f4e747087162a8c0fa">&#9670;&#160;</a></span>SeedsArraySize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> Safir::Dob::ThisNodeParameters::SeedsArraySize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1d3256ac77cbbd6907e111c5cf6da9bc" name="a1d3256ac77cbbd6907e111c5cf6da9bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d3256ac77cbbd6907e111c5cf6da9bc">&#9670;&#160;</a></span>SetChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::ThisNodeParameters::SetChanged </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Recursively set change flags in all members of this object. </p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - The value to set the change flags to </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01836.xhtml#aee5b51d50200930520a3d46a7de4c0a5">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<a id="a0bc71ae5fcbe82ba687ed7b71320f029" name="a0bc71ae5fcbe82ba687ed7b71320f029"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bc71ae5fcbe82ba687ed7b71320f029">&#9670;&#160;</a></span>WriteToBlob()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::ThisNodeParameters::WriteToBlob </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Write the object to a blob. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">handle</td><td>[in] - Handle to a blobWriter that is the destination of the serialized object. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01836.xhtml#a6697567abaf17ca0c0fd7cad51916bcc">Safir::Dob::Parametrization</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a8de89addcc938dd42082de90a2a260ed" name="a8de89addcc938dd42082de90a2a260ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8de89addcc938dd42082de90a2a260ed">&#9670;&#160;</a></span>ClassTypeId</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::ThisNodeParameters::ClassTypeId = 7177876786334465007LL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Type id for <a class="el" href="a01920.xhtml" title="Defines the settings for this particular node.">ThisNodeParameters</a>. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00385.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00387.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a01920.xhtml">ThisNodeParameters</a></li>
    <li class="footer">Generated on Fri Mar 3 2023 14:01:19 for Safir SDK Core by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
  </ul>
</div>
</body>
</html>
