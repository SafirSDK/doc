<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::NodeType Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a01820.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="a01817.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Safir::Dob::NodeType Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Defines a number of characteristics that control how nodes of a certain type communicates.  
 <a href="a01820.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00263_source.xhtml">/home/lars/safir/safir-sdk-core/src/safir_dou/gen/cpp/include/Safir/Dob/NodeType.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::NodeType:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01819.svg" width="171" height="198"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::NodeType:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01818.svg" width="171" height="198"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a713f4d57e60b940918edb2dd5e61b2b1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a713f4d57e60b940918edb2dd5e61b2b1">NodeType</a> ()</td></tr>
<tr class="separator:a713f4d57e60b940918edb2dd5e61b2b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd0bc8d7255b9d1303b1df5664f46bbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Safir::Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#acd0bc8d7255b9d1303b1df5664f46bbf">Clone</a> () const override</td></tr>
<tr class="memdesc:acd0bc8d7255b9d1303b1df5664f46bbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <br /></td></tr>
<tr class="separator:acd0bc8d7255b9d1303b1df5664f46bbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b8bd0478364a70c1b557968af2976ef"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a9b8bd0478364a70c1b557968af2976ef">Name</a> () const</td></tr>
<tr class="memdesc:a9b8bd0478364a70c1b557968af2976ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the node type.  <br /></td></tr>
<tr class="separator:a9b8bd0478364a70c1b557968af2976ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a710a1756550b680a0fb4b0bd9559307d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a710a1756550b680a0fb4b0bd9559307d">Name</a> ()</td></tr>
<tr class="separator:a710a1756550b680a0fb4b0bd9559307d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c9012dde6846d620a50906d63254cb4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a1c9012dde6846d620a50906d63254cb4">MulticastAddressControl</a> () const</td></tr>
<tr class="memdesc:a1c9012dde6846d620a50906d63254cb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multicast address and port used for the control channel for nodes of this type.  <br /></td></tr>
<tr class="separator:a1c9012dde6846d620a50906d63254cb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92d9c67949cec82c3879c760800dfeda"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a92d9c67949cec82c3879c760800dfeda">MulticastAddressControl</a> ()</td></tr>
<tr class="separator:a92d9c67949cec82c3879c760800dfeda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a941bcc84ad501e29e22cc41efd74d71a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a941bcc84ad501e29e22cc41efd74d71a">MulticastAddressData</a> () const</td></tr>
<tr class="memdesc:a941bcc84ad501e29e22cc41efd74d71a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multicast address and port used for the control channel for nodes of this type.  <br /></td></tr>
<tr class="separator:a941bcc84ad501e29e22cc41efd74d71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c42f02c8d7082562cd3769dbf8ac091"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a7c42f02c8d7082562cd3769dbf8ac091">MulticastAddressData</a> ()</td></tr>
<tr class="separator:a7c42f02c8d7082562cd3769dbf8ac091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06a480059f8e7b342f84d612514a8d3e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00391.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">Safir::Dob::Typesystem::Si64::SecondContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a06a480059f8e7b342f84d612514a8d3e">HeartbeatInterval</a> () const</td></tr>
<tr class="memdesc:a06a480059f8e7b342f84d612514a8d3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">How often shall heartbeats/keepalives be sent.  <br /></td></tr>
<tr class="separator:a06a480059f8e7b342f84d612514a8d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54f52e1b82f16b57abd8bdeced9f075f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00391.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">Safir::Dob::Typesystem::Si64::SecondContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a54f52e1b82f16b57abd8bdeced9f075f">HeartbeatInterval</a> ()</td></tr>
<tr class="separator:a54f52e1b82f16b57abd8bdeced9f075f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd4c3544234c513d118d230ec72a51cf"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#abd4c3544234c513d118d230ec72a51cf">MaxLostHeartbeats</a> () const</td></tr>
<tr class="memdesc:abd4c3544234c513d118d230ec72a51cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">How many lost heartbeats before marking nodes of this type as dead.  <br /></td></tr>
<tr class="separator:abd4c3544234c513d118d230ec72a51cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a562da703f772f27c10ba6464a2d5b1c5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a562da703f772f27c10ba6464a2d5b1c5">MaxLostHeartbeats</a> ()</td></tr>
<tr class="separator:a562da703f772f27c10ba6464a2d5b1c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedb23e7998a38908c7f207ae1be4664e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#aedb23e7998a38908c7f207ae1be4664e">SlidingWindowsSize</a> () const</td></tr>
<tr class="memdesc:aedb23e7998a38908c7f207ae1be4664e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of the sliding window when communicating with this node.  <br /></td></tr>
<tr class="separator:aedb23e7998a38908c7f207ae1be4664e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dae775841eb37e53ec0852cb84437fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a2dae775841eb37e53ec0852cb84437fc">SlidingWindowsSize</a> ()</td></tr>
<tr class="separator:a2dae775841eb37e53ec0852cb84437fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58b40496b6641afffa3bfd93f9ab6c25"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a58b40496b6641afffa3bfd93f9ab6c25">AckRequestThreshold</a> () const</td></tr>
<tr class="memdesc:a58b40496b6641afffa3bfd93f9ab6c25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum number of outstanding messages before request receiver to ack.  <br /></td></tr>
<tr class="separator:a58b40496b6641afffa3bfd93f9ab6c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91ce12e6df44d5608f5932226f252915"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a91ce12e6df44d5608f5932226f252915">AckRequestThreshold</a> ()</td></tr>
<tr class="separator:a91ce12e6df44d5608f5932226f252915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0854265f9dd94f252926d478cacf9dc8"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a00391.xhtml#a5a85a40cb798a11b4bb43967deea2023">Safir::Dob::Typesystem::Si64::SecondSequenceContainer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a0854265f9dd94f252926d478cacf9dc8">RetryTimeout</a> () const</td></tr>
<tr class="memdesc:a0854265f9dd94f252926d478cacf9dc8"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="a00401.xhtml" title="Time.">Time</a> to wait for Ack before retrying transmission to this node.  <br /></td></tr>
<tr class="separator:a0854265f9dd94f252926d478cacf9dc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbf17b28742ecba026410651b9b74d67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00391.xhtml#a5a85a40cb798a11b4bb43967deea2023">Safir::Dob::Typesystem::Si64::SecondSequenceContainer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#adbf17b28742ecba026410651b9b74d67">RetryTimeout</a> ()</td></tr>
<tr class="separator:adbf17b28742ecba026410651b9b74d67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1a51445411563c4f684c2fad7b9010"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#acd1a51445411563c4f684c2fad7b9010">RequiredForStart</a> () const</td></tr>
<tr class="memdesc:acd1a51445411563c4f684c2fad7b9010"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true, a node of this type can start a system of its own.  <br /></td></tr>
<tr class="separator:acd1a51445411563c4f684c2fad7b9010"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5024e3487cbf3b2a99ee7a394659721"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#ae5024e3487cbf3b2a99ee7a394659721">RequiredForStart</a> ()</td></tr>
<tr class="separator:ae5024e3487cbf3b2a99ee7a394659721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26340dbeb147e1a48ceb7d9fbf445e8c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a26340dbeb147e1a48ceb7d9fbf445e8c">IsLightNode</a> () const</td></tr>
<tr class="memdesc:a26340dbeb147e1a48ceb7d9fbf445e8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true this node type is a light node.  <br /></td></tr>
<tr class="separator:a26340dbeb147e1a48ceb7d9fbf445e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a065815aaa73de2709d1a14722eaa8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a39a065815aaa73de2709d1a14722eaa8">IsLightNode</a> ()</td></tr>
<tr class="separator:a39a065815aaa73de2709d1a14722eaa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc67a37c162ccdef6e5dd90ab54e2591"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#acc67a37c162ccdef6e5dd90ab54e2591">KeepStateWhileDetached</a> () const</td></tr>
<tr class="memdesc:acc67a37c162ccdef6e5dd90ab54e2591"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this value is set to True, all entities and registrations from other nodes are kept when a light node is getting detached.  <br /></td></tr>
<tr class="separator:acc67a37c162ccdef6e5dd90ab54e2591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5e13aace4e388dd3f4291f872aa4919"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#ae5e13aace4e388dd3f4291f872aa4919">KeepStateWhileDetached</a> ()</td></tr>
<tr class="separator:ae5e13aace4e388dd3f4291f872aa4919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7117563a8979ae417bfbf642316a1c34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a7117563a8979ae417bfbf642316a1c34">GetTypeId</a> () const override</td></tr>
<tr class="memdesc:a7117563a8979ae417bfbf642316a1c34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <br /></td></tr>
<tr class="separator:a7117563a8979ae417bfbf642316a1c34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e3c32baa54ca93f6b2e9095706b5bb7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a7e3c32baa54ca93f6b2e9095706b5bb7">IsChanged</a> () override</td></tr>
<tr class="memdesc:a7e3c32baa54ca93f6b2e9095706b5bb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <br /></td></tr>
<tr class="separator:a7e3c32baa54ca93f6b2e9095706b5bb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a176a6f34bcfd8d811d7d198a63f7c959"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a176a6f34bcfd8d811d7d198a63f7c959">SetChanged</a> (const bool changed) override</td></tr>
<tr class="memdesc:a176a6f34bcfd8d811d7d198a63f7c959"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <br /></td></tr>
<tr class="separator:a176a6f34bcfd8d811d7d198a63f7c959"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e7498ccb139f29225631ca9b5c5ddf1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a3e7498ccb139f29225631ca9b5c5ddf1">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) override</td></tr>
<tr class="memdesc:a3e7498ccb139f29225631ca9b5c5ddf1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <br /></td></tr>
<tr class="separator:a3e7498ccb139f29225631ca9b5c5ddf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb7186182dd8cd5e81ca23cc8a8c1345"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#abb7186182dd8cd5e81ca23cc8a8c1345">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) const override</td></tr>
<tr class="memdesc:abb7186182dd8cd5e81ca23cc8a8c1345"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <br /></td></tr>
<tr class="separator:abb7186182dd8cd5e81ca23cc8a8c1345"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32dd5514a50b58ce68aa6771b5ce901e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a32dd5514a50b58ce68aa6771b5ce901e">WriteToBlob</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle) const override</td></tr>
<tr class="memdesc:a32dd5514a50b58ce68aa6771b5ce901e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write the object to a blob.  <br /></td></tr>
<tr class="separator:a32dd5514a50b58ce68aa6771b5ce901e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b8404896e181317eba629bb622a224a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a0b8404896e181317eba629bb622a224a">NodeType</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a0b8404896e181317eba629bb622a224a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01796"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01796')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01796.xhtml">Safir::Dob::Item</a></td></tr>
<tr class="memitem:aadeb42a4f505d844e368cf2b28c312f7 inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#aadeb42a4f505d844e368cf2b28c312f7">Item</a> ()</td></tr>
<tr class="separator:aadeb42a4f505d844e368cf2b28c312f7 inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eb05eb0d184d351c0063751e4dd4793 inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Safir::Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a8eb05eb0d184d351c0063751e4dd4793">Clone</a> () const override</td></tr>
<tr class="memdesc:a8eb05eb0d184d351c0063751e4dd4793 inherit pub_methods_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <br /></td></tr>
<tr class="separator:a8eb05eb0d184d351c0063751e4dd4793 inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a154ebefade220455904ad395f7425890 inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a154ebefade220455904ad395f7425890">GetTypeId</a> () const override</td></tr>
<tr class="memdesc:a154ebefade220455904ad395f7425890 inherit pub_methods_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <br /></td></tr>
<tr class="separator:a154ebefade220455904ad395f7425890 inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18f1ebd7b944b8ed91e9c28de6d8cbb5 inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a18f1ebd7b944b8ed91e9c28de6d8cbb5">IsChanged</a> () override</td></tr>
<tr class="memdesc:a18f1ebd7b944b8ed91e9c28de6d8cbb5 inherit pub_methods_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <br /></td></tr>
<tr class="separator:a18f1ebd7b944b8ed91e9c28de6d8cbb5 inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3e0c04b0fe4cc779d130fc2487b076b inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#ad3e0c04b0fe4cc779d130fc2487b076b">SetChanged</a> (const bool changed) override</td></tr>
<tr class="memdesc:ad3e0c04b0fe4cc779d130fc2487b076b inherit pub_methods_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <br /></td></tr>
<tr class="separator:ad3e0c04b0fe4cc779d130fc2487b076b inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8056693180d868c128f008b170965ff7 inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a8056693180d868c128f008b170965ff7">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) override</td></tr>
<tr class="memdesc:a8056693180d868c128f008b170965ff7 inherit pub_methods_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a reference to a member container from an object.  <br /></td></tr>
<tr class="separator:a8056693180d868c128f008b170965ff7 inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26af84e64a1256786d0bd93e5e8d542c inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a26af84e64a1256786d0bd93e5e8d542c">GetMember</a> (const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> member, const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a> index) const override</td></tr>
<tr class="memdesc:a26af84e64a1256786d0bd93e5e8d542c inherit pub_methods_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a const reference to a member container from an object.  <br /></td></tr>
<tr class="separator:a26af84e64a1256786d0bd93e5e8d542c inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaadeb813b3f422033999643d7f65551b inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#aaadeb813b3f422033999643d7f65551b">WriteToBlob</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle) const override</td></tr>
<tr class="memdesc:aaadeb813b3f422033999643d7f65551b inherit pub_methods_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write the object to a blob.  <br /></td></tr>
<tr class="separator:aaadeb813b3f422033999643d7f65551b inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ea7864c83099b4e33e8b103678db7b inherit pub_methods_a01796"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a75ea7864c83099b4e33e8b103678db7b">Item</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="separator:a75ea7864c83099b4e33e8b103678db7b inherit pub_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_a01492"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_a01492')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="a01492.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#afac534c32310137c943104c4d3e3f309">Object</a> ()</td></tr>
<tr class="memdesc:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <br /></td></tr>
<tr class="separator:afac534c32310137c943104c4d3e3f309 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a9f27069548b4ec8968a8c394ac3bedc2">~Object</a> ()</td></tr>
<tr class="memdesc:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <br /></td></tr>
<tr class="separator:a9f27069548b4ec8968a8c394ac3bedc2 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a040df22a02b16c68d472f2d11f3f2e5b inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a040df22a02b16c68d472f2d11f3f2e5b">Clone</a> () const</td></tr>
<tr class="memdesc:a040df22a02b16c68d472f2d11f3f2e5b inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a copy of the object.  <br /></td></tr>
<tr class="separator:a040df22a02b16c68d472f2d11f3f2e5b inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a606cc02e0ee20919be7445e281af060f inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a606cc02e0ee20919be7445e281af060f">GetTypeId</a> () const</td></tr>
<tr class="memdesc:a606cc02e0ee20919be7445e281af060f inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this object.  <br /></td></tr>
<tr class="separator:a606cc02e0ee20919be7445e281af060f inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89c720760384430fc40021b945cc4f01 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a89c720760384430fc40021b945cc4f01">IsChanged</a> ()</td></tr>
<tr class="memdesc:a89c720760384430fc40021b945cc4f01 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if any member of this object is changed.  <br /></td></tr>
<tr class="separator:a89c720760384430fc40021b945cc4f01 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae188b01d49aba0d83a76d859171f7df5 inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#ae188b01d49aba0d83a76d859171f7df5">SetChanged</a> (const bool changed)</td></tr>
<tr class="memdesc:ae188b01d49aba0d83a76d859171f7df5 inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recursively set change flags in all members of this object.  <br /></td></tr>
<tr class="separator:ae188b01d49aba0d83a76d859171f7df5 inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01492"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#a7e6f36f0b33c414711aae5966b5d2d5b">Object</a> (<a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a> handle)</td></tr>
<tr class="memdesc:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an <a class="el" href="a01492.xhtml" title="The base class for all DOB objects.">Object</a> from a blob.  <br /></td></tr>
<tr class="separator:a7e6f36f0b33c414711aae5966b5d2d5b inherit pub_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a36230008a6bb81396e58ad935a81614d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00387.xhtml#a9031ede227a2dd461a63886dec584a20">NodeTypePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a36230008a6bb81396e58ad935a81614d">Create</a> ()</td></tr>
<tr class="separator:a36230008a6bb81396e58ad935a81614d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab55df556932435369126d4348ee6ae98"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#ab55df556932435369126d4348ee6ae98">NameMemberIndex</a> ()</td></tr>
<tr class="separator:ab55df556932435369126d4348ee6ae98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a383268666ad4154bb073057d48a77a81"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a383268666ad4154bb073057d48a77a81">NameMaxStringLength</a> ()</td></tr>
<tr class="separator:a383268666ad4154bb073057d48a77a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3dafef65327b0d6fc3742e5eb52cc30"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#ae3dafef65327b0d6fc3742e5eb52cc30">MulticastAddressControlMemberIndex</a> ()</td></tr>
<tr class="separator:ae3dafef65327b0d6fc3742e5eb52cc30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8be8f7913c48b9429212859b1a8826e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#aa8be8f7913c48b9429212859b1a8826e">MulticastAddressControlMaxStringLength</a> ()</td></tr>
<tr class="separator:aa8be8f7913c48b9429212859b1a8826e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07d8c2b3c7d2af4fbe774712956a7f4c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a07d8c2b3c7d2af4fbe774712956a7f4c">MulticastAddressDataMemberIndex</a> ()</td></tr>
<tr class="separator:a07d8c2b3c7d2af4fbe774712956a7f4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebdea42a6e85cdb6c2b20d52d836ed89"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#aebdea42a6e85cdb6c2b20d52d836ed89">MulticastAddressDataMaxStringLength</a> ()</td></tr>
<tr class="separator:aebdea42a6e85cdb6c2b20d52d836ed89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6b08dfb72bf222328a969b2a182712"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a7e6b08dfb72bf222328a969b2a182712">HeartbeatIntervalMemberIndex</a> ()</td></tr>
<tr class="separator:a7e6b08dfb72bf222328a969b2a182712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee22dd215bd3ee4f165709fa99ddcbe"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a5ee22dd215bd3ee4f165709fa99ddcbe">MaxLostHeartbeatsMemberIndex</a> ()</td></tr>
<tr class="separator:a5ee22dd215bd3ee4f165709fa99ddcbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a153ea48abfbbfc9d4aa311c1254069d5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#a153ea48abfbbfc9d4aa311c1254069d5">SlidingWindowsSizeMemberIndex</a> ()</td></tr>
<tr class="separator:a153ea48abfbbfc9d4aa311c1254069d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4e09d49333d40507cde820f07ae5b6c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#ac4e09d49333d40507cde820f07ae5b6c">AckRequestThresholdMemberIndex</a> ()</td></tr>
<tr class="separator:ac4e09d49333d40507cde820f07ae5b6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addc3b8754bfee92105692c28cc4b34b5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#addc3b8754bfee92105692c28cc4b34b5">RetryTimeoutMemberIndex</a> ()</td></tr>
<tr class="separator:addc3b8754bfee92105692c28cc4b34b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af310614b8f15a787a3245ddcf4b9d10a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#af310614b8f15a787a3245ddcf4b9d10a">RequiredForStartMemberIndex</a> ()</td></tr>
<tr class="separator:af310614b8f15a787a3245ddcf4b9d10a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaff223d19bbeec5cfdd370cb56b702a6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#aaff223d19bbeec5cfdd370cb56b702a6">IsLightNodeMemberIndex</a> ()</td></tr>
<tr class="separator:aaff223d19bbeec5cfdd370cb56b702a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa55050fd3e678228ef3a077c8d882e1b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#aa55050fd3e678228ef3a077c8d882e1b">KeepStateWhileDetachedMemberIndex</a> ()</td></tr>
<tr class="separator:aa55050fd3e678228ef3a077c8d882e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01796"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01796')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01796.xhtml">Safir::Dob::Item</a></td></tr>
<tr class="memitem:a1ecd3d5d130c2bf49d48ece65af6010e inherit pub_static_methods_a01796"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00387.xhtml#a9ee56556d6053f68598bc93800e3981c">ItemPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a1ecd3d5d130c2bf49d48ece65af6010e">Create</a> ()</td></tr>
<tr class="separator:a1ecd3d5d130c2bf49d48ece65af6010e inherit pub_static_methods_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_a01492"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_a01492')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="a01492.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01492"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Dob::Typesystem::ObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#acb1399abd50543020f6b1638a698e379">Create</a> ()</td></tr>
<tr class="memdesc:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="a01492.xhtml" title="The base class for all DOB objects.">Object</a>.  <br /></td></tr>
<tr class="separator:acb1399abd50543020f6b1638a698e379 inherit pub_static_methods_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:ae8fd876e15a3f335882c92ea32e5e4ea"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01820.xhtml#ae8fd876e15a3f335882c92ea32e5e4ea">ClassTypeId</a> = 5771540742031696125LL</td></tr>
<tr class="memdesc:ae8fd876e15a3f335882c92ea32e5e4ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01820.xhtml" title="Defines a number of characteristics that control how nodes of a certain type communicates.">NodeType</a>.  <br /></td></tr>
<tr class="separator:ae8fd876e15a3f335882c92ea32e5e4ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01796"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01796')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01796.xhtml">Safir::Dob::Item</a></td></tr>
<tr class="memitem:a3848c1e2421cbb049b832b2a2527f023 inherit pub_static_attribs_a01796"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01796.xhtml#a3848c1e2421cbb049b832b2a2527f023">ClassTypeId</a> = 6050262633936372658LL</td></tr>
<tr class="memdesc:a3848c1e2421cbb049b832b2a2527f023 inherit pub_static_attribs_a01796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type id for <a class="el" href="a01796.xhtml" title="The baseclass for all items.">Item</a>.  <br /></td></tr>
<tr class="separator:a3848c1e2421cbb049b832b2a2527f023 inherit pub_static_attribs_a01796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_a01492"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_a01492')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="a01492.xhtml">Safir::Dob::Typesystem::Object</a></td></tr>
<tr class="memitem:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01492"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Dob::Typesystem::TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01492.xhtml#af6c7867293f8c2459a5fc8fe8b6b0a2a">ClassTypeId</a> = 5955188366590963785LL</td></tr>
<tr class="memdesc:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01492"><td class="mdescLeft">&#160;</td><td class="mdescRight">The TypeId of the <a class="el" href="a01492.xhtml" title="The base class for all DOB objects.">Object</a> class.  <br /></td></tr>
<tr class="separator:af6c7867293f8c2459a5fc8fe8b6b0a2a inherit pub_static_attribs_a01492"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Defines a number of characteristics that control how nodes of a certain type communicates. </p>
<p>Used by <a class="el" href="a01808.xhtml" title="Contains paramaters for all nodes in the system.">Safir.Dob.NodeParameters</a>. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a713f4d57e60b940918edb2dd5e61b2b1" name="a713f4d57e60b940918edb2dd5e61b2b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a713f4d57e60b940918edb2dd5e61b2b1">&#9670;&#160;</a></span>NodeType() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::NodeType::NodeType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b8404896e181317eba629bb622a224a" name="a0b8404896e181317eba629bb622a224a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b8404896e181317eba629bb622a224a">&#9670;&#160;</a></span>NodeType() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::NodeType::NodeType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a91ce12e6df44d5608f5932226f252915" name="a91ce12e6df44d5608f5932226f252915"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91ce12e6df44d5608f5932226f252915">&#9670;&#160;</a></span>AckRequestThreshold() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt; Safir::Dob::NodeType::AckRequestThreshold </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a58b40496b6641afffa3bfd93f9ab6c25" name="a58b40496b6641afffa3bfd93f9ab6c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58b40496b6641afffa3bfd93f9ab6c25">&#9670;&#160;</a></span>AckRequestThreshold() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt; Safir::Dob::NodeType::AckRequestThreshold </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maximum number of outstanding messages before request receiver to ack. </p>
<p>Should never be more than half SlidingWindowsSize. </p>

</div>
</div>
<a id="ac4e09d49333d40507cde820f07ae5b6c" name="ac4e09d49333d40507cde820f07ae5b6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4e09d49333d40507cde820f07ae5b6c">&#9670;&#160;</a></span>AckRequestThresholdMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::AckRequestThresholdMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acd0bc8d7255b9d1303b1df5664f46bbf" name="acd0bc8d7255b9d1303b1df5664f46bbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd0bc8d7255b9d1303b1df5664f46bbf">&#9670;&#160;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00389.xhtml#aa76c34ade73d7e4537e0725ffe7b5d95">Safir::Dob::Typesystem::ObjectPtr</a> Safir::Dob::NodeType::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a copy of the object. </p>
<p>Will create a copy of the object on the heap and return a smart pointer to it. Use std::static_pointer_cast or std::dynamic_pointer_cast to cast it to the pointer type that you're after.</p>
<dl class="section return"><dt>Returns</dt><dd>A smart pointer to the copy of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01796.xhtml#a8eb05eb0d184d351c0063751e4dd4793">Safir::Dob::Item</a>.</p>

</div>
</div>
<a id="a36230008a6bb81396e58ad935a81614d" name="a36230008a6bb81396e58ad935a81614d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36230008a6bb81396e58ad935a81614d">&#9670;&#160;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00387.xhtml#a9031ede227a2dd461a63886dec584a20">NodeTypePtr</a> Safir::Dob::NodeType::Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abb7186182dd8cd5e81ca23cc8a8c1345" name="abb7186182dd8cd5e81ca23cc8a8c1345"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb7186182dd8cd5e81ca23cc8a8c1345">&#9670;&#160;</a></span>GetMember() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp; Safir::Dob::NodeType::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a const reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A const reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01796.xhtml#a26af84e64a1256786d0bd93e5e8d542c">Safir::Dob::Item</a>.</p>

</div>
</div>
<a id="a3e7498ccb139f29225631ca9b5c5ddf1" name="a3e7498ccb139f29225631ca9b5c5ddf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e7498ccb139f29225631ca9b5c5ddf1">&#9670;&#160;</a></span>GetMember() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01392.xhtml">Safir::Dob::Typesystem::ContainerBase</a> &amp; Safir::Dob::NodeType::GetMember </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a>&#160;</td>
          <td class="paramname"><em>member</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#adc2553705d45383a086a51bba6b40e5b">Safir::Dob::Typesystem::ArrayIndex</a>&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a reference to a member container from an object. </p>
<p>Use the methods in Members to get member indices and array sizes for use with this method.</p>
<p>Note: Do not use this method unless you're very sure it is the one you need!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">member</td><td>[in] - The index of the member to get. </td></tr>
    <tr><td class="paramname">index</td><td>[in] - The array index of the member to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the member container. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IllegalValueException</td><td>If the index is not in the range of the array. </td></tr>
    <tr><td class="paramname">SoftwareViolationException</td><td>If the element is not an array and the index is not 0. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01796.xhtml#a8056693180d868c128f008b170965ff7">Safir::Dob::Item</a>.</p>

</div>
</div>
<a id="a7117563a8979ae417bfbf642316a1c34" name="a7117563a8979ae417bfbf642316a1c34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7117563a8979ae417bfbf642316a1c34">&#9670;&#160;</a></span>GetTypeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::NodeType::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type id of this object. </p>
<p>Gets the type id of the object. Method is virtual to ensure that the right value gets returned for pointers or references.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The TypeId of the object. </dd></dl>

<p>Reimplemented from <a class="el" href="a01796.xhtml#a154ebefade220455904ad395f7425890">Safir::Dob::Item</a>.</p>

</div>
</div>
<a id="a54f52e1b82f16b57abd8bdeced9f075f" name="a54f52e1b82f16b57abd8bdeced9f075f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54f52e1b82f16b57abd8bdeced9f075f">&#9670;&#160;</a></span>HeartbeatInterval() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00391.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">Safir::Dob::Typesystem::Si64::SecondContainer</a> &gt; Safir::Dob::NodeType::HeartbeatInterval </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a06a480059f8e7b342f84d612514a8d3e" name="a06a480059f8e7b342f84d612514a8d3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06a480059f8e7b342f84d612514a8d3e">&#9670;&#160;</a></span>HeartbeatInterval() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00391.xhtml#a5a92eb23e0c8aee1aa873db989c13bf5">Safir::Dob::Typesystem::Si64::SecondContainer</a> &gt; Safir::Dob::NodeType::HeartbeatInterval </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>How often shall heartbeats/keepalives be sent. </p>

</div>
</div>
<a id="a7e6b08dfb72bf222328a969b2a182712" name="a7e6b08dfb72bf222328a969b2a182712"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e6b08dfb72bf222328a969b2a182712">&#9670;&#160;</a></span>HeartbeatIntervalMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::HeartbeatIntervalMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7e3c32baa54ca93f6b2e9095706b5bb7" name="a7e3c32baa54ca93f6b2e9095706b5bb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e3c32baa54ca93f6b2e9095706b5bb7">&#9670;&#160;</a></span>IsChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Safir::Dob::NodeType::IsChanged </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if any member of this object is changed. </p>
<p>This method will recursively check if any member of the object has its change flag set.</p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>True if any member has changed. </dd></dl>

<p>Reimplemented from <a class="el" href="a01796.xhtml#a18f1ebd7b944b8ed91e9c28de6d8cbb5">Safir::Dob::Item</a>.</p>

</div>
</div>
<a id="a39a065815aaa73de2709d1a14722eaa8" name="a39a065815aaa73de2709d1a14722eaa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39a065815aaa73de2709d1a14722eaa8">&#9670;&#160;</a></span>IsLightNode() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt; Safir::Dob::NodeType::IsLightNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a26340dbeb147e1a48ceb7d9fbf445e8c" name="a26340dbeb147e1a48ceb7d9fbf445e8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26340dbeb147e1a48ceb7d9fbf445e8c">&#9670;&#160;</a></span>IsLightNode() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt; Safir::Dob::NodeType::IsLightNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If true this node type is a light node. </p>
<p>See user's guide for more info about light nodes. This parameter has default value False. IsLightNode and RequiredForStart cannot both be True. </p>

</div>
</div>
<a id="aaff223d19bbeec5cfdd370cb56b702a6" name="aaff223d19bbeec5cfdd370cb56b702a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaff223d19bbeec5cfdd370cb56b702a6">&#9670;&#160;</a></span>IsLightNodeMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::IsLightNodeMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5e13aace4e388dd3f4291f872aa4919" name="ae5e13aace4e388dd3f4291f872aa4919"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5e13aace4e388dd3f4291f872aa4919">&#9670;&#160;</a></span>KeepStateWhileDetached() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt; Safir::Dob::NodeType::KeepStateWhileDetached </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acc67a37c162ccdef6e5dd90ab54e2591" name="acc67a37c162ccdef6e5dd90ab54e2591"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc67a37c162ccdef6e5dd90ab54e2591">&#9670;&#160;</a></span>KeepStateWhileDetached() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt; Safir::Dob::NodeType::KeepStateWhileDetached </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If this value is set to True, all entities and registrations from other nodes are kept when a light node is getting detached. </p>
<p>When the light node attaches again to a system the state will be synced with the rest of the system. If this value is set to False, all entites and registrations from other nodes are automatically deleted when a light node is getting detached. <br  />
 This value is mandatory if the node is a light node, i.e IsLightNode=True. If not a light node this value must not be set. </p>

</div>
</div>
<a id="aa55050fd3e678228ef3a077c8d882e1b" name="aa55050fd3e678228ef3a077c8d882e1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa55050fd3e678228ef3a077c8d882e1b">&#9670;&#160;</a></span>KeepStateWhileDetachedMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::KeepStateWhileDetachedMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a562da703f772f27c10ba6464a2d5b1c5" name="a562da703f772f27c10ba6464a2d5b1c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a562da703f772f27c10ba6464a2d5b1c5">&#9670;&#160;</a></span>MaxLostHeartbeats() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt; Safir::Dob::NodeType::MaxLostHeartbeats </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abd4c3544234c513d118d230ec72a51cf" name="abd4c3544234c513d118d230ec72a51cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd4c3544234c513d118d230ec72a51cf">&#9670;&#160;</a></span>MaxLostHeartbeats() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt; Safir::Dob::NodeType::MaxLostHeartbeats </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>How many lost heartbeats before marking nodes of this type as dead. </p>

</div>
</div>
<a id="a5ee22dd215bd3ee4f165709fa99ddcbe" name="a5ee22dd215bd3ee4f165709fa99ddcbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ee22dd215bd3ee4f165709fa99ddcbe">&#9670;&#160;</a></span>MaxLostHeartbeatsMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::MaxLostHeartbeatsMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a92d9c67949cec82c3879c760800dfeda" name="a92d9c67949cec82c3879c760800dfeda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92d9c67949cec82c3879c760800dfeda">&#9670;&#160;</a></span>MulticastAddressControl() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt; Safir::Dob::NodeType::MulticastAddressControl </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1c9012dde6846d620a50906d63254cb4" name="a1c9012dde6846d620a50906d63254cb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c9012dde6846d620a50906d63254cb4">&#9670;&#160;</a></span>MulticastAddressControl() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt; Safir::Dob::NodeType::MulticastAddressControl </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multicast address and port used for the control channel for nodes of this type. </p>
<p>An empty string or null for this or MulticastAddressData indicates that nodes of this type can't be reached via multicast. </p>

</div>
</div>
<a id="aa8be8f7913c48b9429212859b1a8826e" name="aa8be8f7913c48b9429212859b1a8826e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8be8f7913c48b9429212859b1a8826e">&#9670;&#160;</a></span>MulticastAddressControlMaxStringLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeType::MulticastAddressControlMaxStringLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae3dafef65327b0d6fc3742e5eb52cc30" name="ae3dafef65327b0d6fc3742e5eb52cc30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3dafef65327b0d6fc3742e5eb52cc30">&#9670;&#160;</a></span>MulticastAddressControlMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::MulticastAddressControlMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7c42f02c8d7082562cd3769dbf8ac091" name="a7c42f02c8d7082562cd3769dbf8ac091"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c42f02c8d7082562cd3769dbf8ac091">&#9670;&#160;</a></span>MulticastAddressData() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt; Safir::Dob::NodeType::MulticastAddressData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a941bcc84ad501e29e22cc41efd74d71a" name="a941bcc84ad501e29e22cc41efd74d71a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a941bcc84ad501e29e22cc41efd74d71a">&#9670;&#160;</a></span>MulticastAddressData() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt; Safir::Dob::NodeType::MulticastAddressData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Multicast address and port used for the control channel for nodes of this type. </p>
<p>An empty string or null for this or MulticastAddressControl indicates that nodes of this type can't be reached via multicast. </p>

</div>
</div>
<a id="aebdea42a6e85cdb6c2b20d52d836ed89" name="aebdea42a6e85cdb6c2b20d52d836ed89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebdea42a6e85cdb6c2b20d52d836ed89">&#9670;&#160;</a></span>MulticastAddressDataMaxStringLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeType::MulticastAddressDataMaxStringLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a07d8c2b3c7d2af4fbe774712956a7f4c" name="a07d8c2b3c7d2af4fbe774712956a7f4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07d8c2b3c7d2af4fbe774712956a7f4c">&#9670;&#160;</a></span>MulticastAddressDataMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::MulticastAddressDataMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a710a1756550b680a0fb4b0bd9559307d" name="a710a1756550b680a0fb4b0bd9559307d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a710a1756550b680a0fb4b0bd9559307d">&#9670;&#160;</a></span>Name() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt; Safir::Dob::NodeType::Name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9b8bd0478364a70c1b557968af2976ef" name="a9b8bd0478364a70c1b557968af2976ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b8bd0478364a70c1b557968af2976ef">&#9670;&#160;</a></span>Name() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a01620.xhtml">Safir::Dob::Typesystem::StringContainer</a> &gt; Safir::Dob::NodeType::Name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Name of the node type. </p>

</div>
</div>
<a id="a383268666ad4154bb073057d48a77a81" name="a383268666ad4154bb073057d48a77a81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a383268666ad4154bb073057d48a77a81">&#9670;&#160;</a></span>NameMaxStringLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#a77c8a9fabe66e72ccbc66c729540b9b6">Safir::Dob::Typesystem::Int32</a> Safir::Dob::NodeType::NameMaxStringLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab55df556932435369126d4348ee6ae98" name="ab55df556932435369126d4348ee6ae98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab55df556932435369126d4348ee6ae98">&#9670;&#160;</a></span>NameMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::NameMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5024e3487cbf3b2a99ee7a394659721" name="ae5024e3487cbf3b2a99ee7a394659721"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5024e3487cbf3b2a99ee7a394659721">&#9670;&#160;</a></span>RequiredForStart() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt; Safir::Dob::NodeType::RequiredForStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acd1a51445411563c4f684c2fad7b9010" name="acd1a51445411563c4f684c2fad7b9010"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd1a51445411563c4f684c2fad7b9010">&#9670;&#160;</a></span>RequiredForStart() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a203effe57c39d7d040422d128942eca0">Safir::Dob::Typesystem::BooleanContainer</a> &gt; Safir::Dob::NodeType::RequiredForStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If true, a node of this type can start a system of its own. </p>
<p>A node with a node type where this parameter is set to false will never start a system of its own, it just waits for a system to join. This parameter is mandatory if node is not a light node, i.e IsLightNode=False. If this node is a light node, then RequiredForStart is optional but is not allowed to be True. </p>

</div>
</div>
<a id="af310614b8f15a787a3245ddcf4b9d10a" name="af310614b8f15a787a3245ddcf4b9d10a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af310614b8f15a787a3245ddcf4b9d10a">&#9670;&#160;</a></span>RequiredForStartMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::RequiredForStartMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adbf17b28742ecba026410651b9b74d67" name="adbf17b28742ecba026410651b9b74d67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbf17b28742ecba026410651b9b74d67">&#9670;&#160;</a></span>RetryTimeout() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00391.xhtml#a5a85a40cb798a11b4bb43967deea2023">Safir::Dob::Typesystem::Si64::SecondSequenceContainer</a> &amp; Safir::Dob::NodeType::RetryTimeout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0854265f9dd94f252926d478cacf9dc8" name="a0854265f9dd94f252926d478cacf9dc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0854265f9dd94f252926d478cacf9dc8">&#9670;&#160;</a></span>RetryTimeout() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00391.xhtml#a5a85a40cb798a11b4bb43967deea2023">Safir::Dob::Typesystem::Si64::SecondSequenceContainer</a> &amp; Safir::Dob::NodeType::RetryTimeout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="a00401.xhtml" title="Time.">Time</a> to wait for Ack before retrying transmission to this node. </p>
<p>First resend will use first timeout, second the second timeout and so on. Last one is used until the end. </p>

</div>
</div>
<a id="addc3b8754bfee92105692c28cc4b34b5" name="addc3b8754bfee92105692c28cc4b34b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addc3b8754bfee92105692c28cc4b34b5">&#9670;&#160;</a></span>RetryTimeoutMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::RetryTimeoutMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a176a6f34bcfd8d811d7d198a63f7c959" name="a176a6f34bcfd8d811d7d198a63f7c959"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a176a6f34bcfd8d811d7d198a63f7c959">&#9670;&#160;</a></span>SetChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::NodeType::SetChanged </td>
          <td>(</td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>changed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Recursively set change flags in all members of this object. </p>
<dl class="section note"><dt>Note</dt><dd>this method is overridden by all auto-generated classes.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">changed</td><td>[in] - The value to set the change flags to </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01796.xhtml#ad3e0c04b0fe4cc779d130fc2487b076b">Safir::Dob::Item</a>.</p>

</div>
</div>
<a id="a2dae775841eb37e53ec0852cb84437fc" name="a2dae775841eb37e53ec0852cb84437fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2dae775841eb37e53ec0852cb84437fc">&#9670;&#160;</a></span>SlidingWindowsSize() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt; Safir::Dob::NodeType::SlidingWindowsSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aedb23e7998a38908c7f207ae1be4664e" name="aedb23e7998a38908c7f207ae1be4664e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedb23e7998a38908c7f207ae1be4664e">&#9670;&#160;</a></span>SlidingWindowsSize() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a01396.xhtml">Safir::Dob::Typesystem::ContainerProxy</a>&lt; <a class="el" href="a00389.xhtml#a0ad924508fdf62a91c17860d3295bb91">Safir::Dob::Typesystem::Int32Container</a> &gt; Safir::Dob::NodeType::SlidingWindowsSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Size of the sliding window when communicating with this node. </p>
<p>Maximum allowed value is 20. </p>

</div>
</div>
<a id="a153ea48abfbbfc9d4aa311c1254069d5" name="a153ea48abfbbfc9d4aa311c1254069d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a153ea48abfbbfc9d4aa311c1254069d5">&#9670;&#160;</a></span>SlidingWindowsSizeMemberIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="a00389.xhtml#afbfa67e21224bbe999815e5dfdd70d9e">Safir::Dob::Typesystem::MemberIndex</a> Safir::Dob::NodeType::SlidingWindowsSizeMemberIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a32dd5514a50b58ce68aa6771b5ce901e" name="a32dd5514a50b58ce68aa6771b5ce901e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32dd5514a50b58ce68aa6771b5ce901e">&#9670;&#160;</a></span>WriteToBlob()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Safir::Dob::NodeType::WriteToBlob </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Safir::Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Write the object to a blob. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">handle</td><td>[in] - Handle to a blobWriter that is the destination of the serialized object. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="a01796.xhtml#aaadeb813b3f422033999643d7f65551b">Safir::Dob::Item</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ae8fd876e15a3f335882c92ea32e5e4ea" name="ae8fd876e15a3f335882c92ea32e5e4ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8fd876e15a3f335882c92ea32e5e4ea">&#9670;&#160;</a></span>ClassTypeId</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">Safir::Dob::Typesystem::TypeId</a> Safir::Dob::NodeType::ClassTypeId = 5771540742031696125LL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Type id for <a class="el" href="a01820.xhtml" title="Defines a number of characteristics that control how nodes of a certain type communicates.">NodeType</a>. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00385.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00387.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a01820.xhtml">NodeType</a></li>
    <li class="footer">Generated on Fri Mar 3 2023 14:01:19 for Safir SDK Core by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
  </ul>
</div>
</body>
</html>
