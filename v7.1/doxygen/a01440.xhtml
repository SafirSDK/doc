<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Safir SDK Core: Safir::Dob::Typesystem::Internal::CommonExceptionBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="iconic_logotype.64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Safir SDK Core
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('a01440.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a01437.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">Safir::Dob::Typesystem::Internal::CommonExceptionBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>Common functionality for the exception hierarchy of the DOB typesystem.  
 <a href="a01440.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="a00095_source.xhtml">Safir/Dob/Typesystem/Exceptions.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Safir::Dob::Typesystem::Internal::CommonExceptionBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01439.svg" width="1070" height="827"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for Safir::Dob::Typesystem::Internal::CommonExceptionBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="a01438.svg" width="234" height="124"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a7eed9101a9468fd5c46f0b1cc341a2ed">CommonExceptionBase</a> (const std::wstring &amp;message, const std::wstring &amp;fileName, const <a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> lineNumber)</td></tr>
<tr class="memdesc:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with exception information.  <br /></td></tr>
<tr class="separator:a7eed9101a9468fd5c46f0b1cc341a2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d973fce038604fc564c49248a318f77"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a2d973fce038604fc564c49248a318f77">~CommonExceptionBase</a> ()  throw ()</td></tr>
<tr class="memdesc:a2d973fce038604fc564c49248a318f77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy the exception.  <br /></td></tr>
<tr class="separator:a2d973fce038604fc564c49248a318f77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab17dd886b85cebe96ae1486c851ed521"><td class="memItemLeft" align="right" valign="top">const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#ab17dd886b85cebe96ae1486c851ed521">GetExceptionInfo</a> () const</td></tr>
<tr class="memdesc:ab17dd886b85cebe96ae1486c851ed521"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a formatted string containing all the information in the exception.  <br /></td></tr>
<tr class="separator:ab17dd886b85cebe96ae1486c851ed521"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e8cfdc1d867bea99d737708d7940d6d"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a3e8cfdc1d867bea99d737708d7940d6d">what</a> () const override  throw ()</td></tr>
<tr class="memdesc:a3e8cfdc1d867bea99d737708d7940d6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the GetExceptionInfo as a UTF8 encoded string.  <br /></td></tr>
<tr class="separator:a3e8cfdc1d867bea99d737708d7940d6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a303b51cebede40f6968be2c4fefa93be"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">TypeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a303b51cebede40f6968be2c4fefa93be">GetTypeId</a> () const =0</td></tr>
<tr class="memdesc:a303b51cebede40f6968be2c4fefa93be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type id of this exception.  <br /></td></tr>
<tr class="separator:a303b51cebede40f6968be2c4fefa93be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Selectors for exception information.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Probably you want to use the GetExceptionInfo method instead of these methods.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="a01440.xhtml#ab17dd886b85cebe96ae1486c851ed521" title="Get a formatted string containing all the information in the exception.">GetExceptionInfo</a> </dd></dl>
</div></td></tr>
<tr class="memitem:a2a9169bcc29e48e82d7513f1068303d1"><td class="memItemLeft" align="right" valign="top">const std::wstring &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a2a9169bcc29e48e82d7513f1068303d1">GetMessage</a> () const</td></tr>
<tr class="memdesc:a2a9169bcc29e48e82d7513f1068303d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the message about why the exception occurred.  <br /></td></tr>
<tr class="separator:a2a9169bcc29e48e82d7513f1068303d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94009e6427481fcae72d0fc016ddc296"><td class="memItemLeft" align="right" valign="top">virtual const std::wstring&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a94009e6427481fcae72d0fc016ddc296">GetName</a> () const =0</td></tr>
<tr class="memdesc:a94009e6427481fcae72d0fc016ddc296"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the exception name.  <br /></td></tr>
<tr class="separator:a94009e6427481fcae72d0fc016ddc296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c76f573fb7d1ba7a47951bd875e74f0"><td class="memItemLeft" align="right" valign="top">const std::wstring &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a7c76f573fb7d1ba7a47951bd875e74f0">GetFileName</a> () const</td></tr>
<tr class="memdesc:a7c76f573fb7d1ba7a47951bd875e74f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the file where the exception occurred.  <br /></td></tr>
<tr class="separator:a7c76f573fb7d1ba7a47951bd875e74f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d4710279b4473bcb765b1486211a848"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a01440.xhtml#a9d4710279b4473bcb765b1486211a848">GetLineNumber</a> () const</td></tr>
<tr class="memdesc:a9d4710279b4473bcb765b1486211a848"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the line number that the exception occurred on.  <br /></td></tr>
<tr class="separator:a9d4710279b4473bcb765b1486211a848"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Common functionality for the exception hierarchy of the DOB typesystem. </p>
<p>This class contains the common parts of the <a class="el" href="a01444.xhtml" title="This is the base class of all Fundamental Exceptions.">FundamentalException</a> and <a class="el" href="a01448.xhtml" title="This is the base class of all (non-Fundamental) Exceptions.">Exception</a> base classes.</p>
<p>No exceptions except <a class="el" href="a01444.xhtml" title="This is the base class of all Fundamental Exceptions.">FundamentalException</a> and <a class="el" href="a01448.xhtml" title="This is the base class of all (non-Fundamental) Exceptions.">Exception</a> shall ever inherit from this class. See <a class="el" href="a01448.xhtml" title="This is the base class of all (non-Fundamental) Exceptions.">Exception</a> and <a class="el" href="a01444.xhtml" title="This is the base class of all Fundamental Exceptions.">FundamentalException</a> for more information on how to define your exceptions. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7eed9101a9468fd5c46f0b1cc341a2ed" name="a7eed9101a9468fd5c46f0b1cc341a2ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7eed9101a9468fd5c46f0b1cc341a2ed">&#9670;&#160;</a></span>CommonExceptionBase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Safir::Dob::Typesystem::Internal::CommonExceptionBase::CommonExceptionBase </td>
          <td>(</td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>message</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::wstring &amp;&#160;</td>
          <td class="paramname"><em>fileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a>&#160;</td>
          <td class="paramname"><em>lineNumber</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor with exception information. </p>
<p>Creates an exception that contains information about why and where the exception occurred.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">message</td><td>[in] - A message describing why the exception occurred. </td></tr>
    <tr><td class="paramname">fileName</td><td>[in] - The name of the file where the exception occurred. Always use <b>WFILE</b> as the argument for this parameter. </td></tr>
    <tr><td class="paramname">lineNumber</td><td>[in] - The line number that the exception occurred on. Always use <b>LINE</b> as the argument for this parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2d973fce038604fc564c49248a318f77" name="a2d973fce038604fc564c49248a318f77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d973fce038604fc564c49248a318f77">&#9670;&#160;</a></span>~CommonExceptionBase()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Safir::Dob::Typesystem::Internal::CommonExceptionBase::~CommonExceptionBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroy the exception. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab17dd886b85cebe96ae1486c851ed521" name="ab17dd886b85cebe96ae1486c851ed521"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab17dd886b85cebe96ae1486c851ed521">&#9670;&#160;</a></span>GetExceptionInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetExceptionInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a formatted string containing all the information in the exception. </p>
<p>The string will look like this (yes, there's a line break in it): "ExceptionName at some_file_name.cpp: 453
 Description: Some kind of explanation of the exception".</p>
<dl class="section return"><dt>Returns</dt><dd>A formatted exception information string. </dd></dl>

</div>
</div>
<a id="a7c76f573fb7d1ba7a47951bd875e74f0" name="a7c76f573fb7d1ba7a47951bd875e74f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c76f573fb7d1ba7a47951bd875e74f0">&#9670;&#160;</a></span>GetFileName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring &amp; Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetFileName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the name of the file where the exception occurred. </p>
<dl class="section return"><dt>Returns</dt><dd>The file where the exception occurred. </dd></dl>

</div>
</div>
<a id="a9d4710279b4473bcb765b1486211a848" name="a9d4710279b4473bcb765b1486211a848"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d4710279b4473bcb765b1486211a848">&#9670;&#160;</a></span>GetLineNumber()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00389.xhtml#a82357c789f9fee9d69beaf1993e4f20c">Dob::Typesystem::Int64</a> Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetLineNumber </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the line number that the exception occurred on. </p>
<dl class="section return"><dt>Returns</dt><dd>The line number where the exception occurred. </dd></dl>

</div>
</div>
<a id="a2a9169bcc29e48e82d7513f1068303d1" name="a2a9169bcc29e48e82d7513f1068303d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a9169bcc29e48e82d7513f1068303d1">&#9670;&#160;</a></span>GetMessage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::wstring &amp; Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetMessage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the message about why the exception occurred. </p>
<dl class="section return"><dt>Returns</dt><dd>The exception message. </dd></dl>

</div>
</div>
<a id="a94009e6427481fcae72d0fc016ddc296" name="a94009e6427481fcae72d0fc016ddc296"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94009e6427481fcae72d0fc016ddc296">&#9670;&#160;</a></span>GetName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::wstring Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the exception name. </p>
<dl class="section return"><dt>Returns</dt><dd>The name of the exception </dd></dl>

<p>Implemented in <a class="el" href="a01452.xhtml#a3d5eb4afac958b602282e9461d9400e3">Safir::Dob::Typesystem::IllegalValueException</a>, <a class="el" href="a01456.xhtml#a6638368e4d211cabe76a2b91c7de434e">Safir::Dob::Typesystem::IncompatibleTypesException</a>, <a class="el" href="a01460.xhtml#ae5ec7e9e06a792a6c75e4c3e69eafeee">Safir::Dob::Typesystem::ConfigurationErrorException</a>, <a class="el" href="a01464.xhtml#ae6065e9d2b7670f3cc52cba820b0d7bd">Safir::Dob::Typesystem::SoftwareViolationException</a>, <a class="el" href="a01468.xhtml#ab22523072d43d8ed53f7fcb07d3b0499">Safir::Dob::Typesystem::NullException</a>, <a class="el" href="a01472.xhtml#a1e3215184627f1e83b70d120a55e3cdf">Safir::Dob::Typesystem::ReadOnlyException</a>, <a class="el" href="a01684.xhtml#ac006962a37712880af66e4eebf2e706e">Safir::Databases::Odbc::IntegrityConstraintException</a>, <a class="el" href="a01688.xhtml#aa434d32d8577ff6346058baacf68f20e">Safir::Databases::Odbc::ReconnectException</a>, <a class="el" href="a01692.xhtml#ad8abca01100cab0a17cae4f156da3834">Safir::Databases::Odbc::RetryException</a>, <a class="el" href="a01696.xhtml#a46f8ff6e8cb92850417e294ca3e0120b">Safir::Databases::Odbc::TimeoutException</a>, <a class="el" href="a01700.xhtml#af8e7bf4e81538a5e86f94e5b95edbf55">Safir::Dob::AccessDeniedException</a>, <a class="el" href="a01768.xhtml#a483aaef6515d0df2093b3dcc1abf50f1">Safir::Dob::GhostExistsException</a>, <a class="el" href="a01824.xhtml#adcf277b07212b7251f369ba38ee4c174">Safir::Dob::NotFoundException</a>, <a class="el" href="a01828.xhtml#a94e3bcb6e3700da81ef79c40468e049f">Safir::Dob::NotOpenException</a>, and <a class="el" href="a01832.xhtml#a69dbfaa51ef0dc451eb424f692f005ef">Safir::Dob::OverflowException</a>.</p>

</div>
</div>
<a id="a303b51cebede40f6968be2c4fefa93be" name="a303b51cebede40f6968be2c4fefa93be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a303b51cebede40f6968be2c4fefa93be">&#9670;&#160;</a></span>GetTypeId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="a00389.xhtml#add598341f70c143ad35a701a65884214">TypeId</a> Safir::Dob::Typesystem::Internal::CommonExceptionBase::GetTypeId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type id of this exception. </p>
<p>Gets the type id of the exception. Method is virtual to ensure that the right value gets returned for pointers or references.</p>
<p>Note: This method is overridden by all auto-generated classes.</p>
<dl class="section return"><dt>Returns</dt><dd>The TypeId of the exception. </dd></dl>

<p>Implemented in <a class="el" href="a01444.xhtml#a572ee158357a84a2ff2cae7bdaee1681">Safir::Dob::Typesystem::FundamentalException</a>, <a class="el" href="a01448.xhtml#a9e35e668b23aae3f2d5091974d89ef0c">Safir::Dob::Typesystem::Exception</a>, <a class="el" href="a01452.xhtml#ab2dc32fd6e276ce37e142668d2aa6762">Safir::Dob::Typesystem::IllegalValueException</a>, <a class="el" href="a01456.xhtml#aab6a3bcbf47b9e330ff6a9e55750ba60">Safir::Dob::Typesystem::IncompatibleTypesException</a>, <a class="el" href="a01460.xhtml#a78dab0dc058469467743063d979f2bf0">Safir::Dob::Typesystem::ConfigurationErrorException</a>, <a class="el" href="a01464.xhtml#a2063acd6ec61c305808f834dcbda0345">Safir::Dob::Typesystem::SoftwareViolationException</a>, <a class="el" href="a01468.xhtml#acc4c56d0b69c4629ebde0951da304c82">Safir::Dob::Typesystem::NullException</a>, <a class="el" href="a01472.xhtml#aef840d7de2c9606e2e9ce83928aa583c">Safir::Dob::Typesystem::ReadOnlyException</a>, <a class="el" href="a01684.xhtml#a59c4024a6772142d1f9b773e4ae3aae0">Safir::Databases::Odbc::IntegrityConstraintException</a>, <a class="el" href="a01688.xhtml#a49fb485f1acc37114db1f9cc1a598307">Safir::Databases::Odbc::ReconnectException</a>, <a class="el" href="a01692.xhtml#ad3f109de103fb7a1e33d852e84f68a41">Safir::Databases::Odbc::RetryException</a>, <a class="el" href="a01696.xhtml#aec1ff1b5cb3c5e1a15e58155dfd339c9">Safir::Databases::Odbc::TimeoutException</a>, <a class="el" href="a01700.xhtml#a8c3dbcabfa9e99fb4a6fdde6d145a61e">Safir::Dob::AccessDeniedException</a>, <a class="el" href="a01768.xhtml#a23e0e7ce61425f5c8a7b4c70d3575edd">Safir::Dob::GhostExistsException</a>, <a class="el" href="a01824.xhtml#a37aafd1a3d4720ef7d546bd0f6637882">Safir::Dob::NotFoundException</a>, <a class="el" href="a01828.xhtml#aafe61cb213f9fecbacb771104c81dcfa">Safir::Dob::NotOpenException</a>, and <a class="el" href="a01832.xhtml#a9d1294adc491d03c7491010ecb17b1a2">Safir::Dob::OverflowException</a>.</p>

</div>
</div>
<a id="a3e8cfdc1d867bea99d737708d7940d6d" name="a3e8cfdc1d867bea99d737708d7940d6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e8cfdc1d867bea99d737708d7940d6d">&#9670;&#160;</a></span>what()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * Safir::Dob::Typesystem::Internal::CommonExceptionBase::what </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
        <tr>
          <td align="right">throw </td><td>(</td><td colspan="2"></td>
        </tr>
        <tr>
          <td align="right"></td><td>)</td><td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the GetExceptionInfo as a UTF8 encoded string. </p>
<p>This method is only provided to be compatible with the std::exception class.</p>
<p>If at all possible, use GetExceptionInfo instead since this method performs a copy and a conversion of the string. Note: This override allow catches of std::exception to still print the complete exception message.</p>
<dl class="section return"><dt>Returns</dt><dd>The exception information as a UTF8 encoded string. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a00385.xhtml">Safir</a></li><li class="navelem"><a class="el" href="a00387.xhtml">Dob</a></li><li class="navelem"><a class="el" href="a00389.xhtml">Typesystem</a></li><li class="navelem"><a class="el" href="a00392.xhtml">Internal</a></li><li class="navelem"><a class="el" href="a01440.xhtml">CommonExceptionBase</a></li>
    <li class="footer">Generated on Fri Mar 3 2023 14:01:20 for Safir SDK Core by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.6 </li>
  </ul>
</div>
</body>
</html>
